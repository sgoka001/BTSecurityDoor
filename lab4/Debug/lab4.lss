
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00800100  00001734  000017c8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001734  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000842  00800164  00800164  0000182c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000182c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000185c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  0000189c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003246  00000000  00000000  00001af4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001107  00000000  00000000  00004d3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001e10  00000000  00000000  00005e41  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000628  00000000  00000000  00007c54  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000f9e  00000000  00000000  0000827c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001e09  00000000  00000000  0000921a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000270  00000000  00000000  0000b023  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	3c c1       	rjmp	.+632    	; 0x27a <__ctors_end>
       2:	00 00       	nop
       4:	58 c1       	rjmp	.+688    	; 0x2b6 <__bad_interrupt>
       6:	00 00       	nop
       8:	56 c1       	rjmp	.+684    	; 0x2b6 <__bad_interrupt>
       a:	00 00       	nop
       c:	54 c1       	rjmp	.+680    	; 0x2b6 <__bad_interrupt>
       e:	00 00       	nop
      10:	52 c1       	rjmp	.+676    	; 0x2b6 <__bad_interrupt>
      12:	00 00       	nop
      14:	50 c1       	rjmp	.+672    	; 0x2b6 <__bad_interrupt>
      16:	00 00       	nop
      18:	4e c1       	rjmp	.+668    	; 0x2b6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	4c c1       	rjmp	.+664    	; 0x2b6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	4a c1       	rjmp	.+660    	; 0x2b6 <__bad_interrupt>
      22:	00 00       	nop
      24:	48 c1       	rjmp	.+656    	; 0x2b6 <__bad_interrupt>
      26:	00 00       	nop
      28:	46 c1       	rjmp	.+652    	; 0x2b6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	44 c1       	rjmp	.+648    	; 0x2b6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	42 c1       	rjmp	.+644    	; 0x2b6 <__bad_interrupt>
      32:	00 00       	nop
      34:	f0 c7       	rjmp	.+4064   	; 0x1016 <__vector_13>
      36:	00 00       	nop
      38:	3e c1       	rjmp	.+636    	; 0x2b6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	3c c1       	rjmp	.+632    	; 0x2b6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	3a c1       	rjmp	.+628    	; 0x2b6 <__bad_interrupt>
      42:	00 00       	nop
      44:	38 c1       	rjmp	.+624    	; 0x2b6 <__bad_interrupt>
      46:	00 00       	nop
      48:	36 c1       	rjmp	.+620    	; 0x2b6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	34 c1       	rjmp	.+616    	; 0x2b6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	32 c1       	rjmp	.+612    	; 0x2b6 <__bad_interrupt>
      52:	00 00       	nop
      54:	30 c1       	rjmp	.+608    	; 0x2b6 <__bad_interrupt>
      56:	00 00       	nop
      58:	2e c1       	rjmp	.+604    	; 0x2b6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	2c c1       	rjmp	.+600    	; 0x2b6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	2a c1       	rjmp	.+596    	; 0x2b6 <__bad_interrupt>
      62:	00 00       	nop
      64:	28 c1       	rjmp	.+592    	; 0x2b6 <__bad_interrupt>
      66:	00 00       	nop
      68:	26 c1       	rjmp	.+588    	; 0x2b6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	24 c1       	rjmp	.+584    	; 0x2b6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	22 c1       	rjmp	.+580    	; 0x2b6 <__bad_interrupt>
      72:	00 00       	nop
      74:	20 c1       	rjmp	.+576    	; 0x2b6 <__bad_interrupt>
      76:	00 00       	nop
      78:	1e c1       	rjmp	.+572    	; 0x2b6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	1c c1       	rjmp	.+568    	; 0x2b6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	1a c1       	rjmp	.+564    	; 0x2b6 <__bad_interrupt>
      82:	00 00       	nop
      84:	18 c1       	rjmp	.+560    	; 0x2b6 <__bad_interrupt>
      86:	00 00       	nop
      88:	16 c1       	rjmp	.+556    	; 0x2b6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	3e 04       	cpc	r3, r14
      8e:	45 04       	cpc	r4, r5
      90:	4e 04       	cpc	r4, r14
      92:	5c 04       	cpc	r5, r12
      94:	65 04       	cpc	r6, r5
      96:	81 04       	cpc	r8, r1
      98:	6e 04       	cpc	r6, r14

0000009a <CHARSET>:
      9a:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      aa:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      ba:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      ca:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      da:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      ea:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
      fa:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     10a:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     11a:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     12a:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     13a:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     14a:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     15a:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     16a:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     17a:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     18a:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     19a:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1aa:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1ba:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1ca:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1da:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1ea:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     1fa:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     20a:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     21a:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     22a:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     23a:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     24a:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     25a:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     26a:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

0000027a <__ctors_end>:
     27a:	11 24       	eor	r1, r1
     27c:	1f be       	out	0x3f, r1	; 63
     27e:	cf ef       	ldi	r28, 0xFF	; 255
     280:	d0 e4       	ldi	r29, 0x40	; 64
     282:	de bf       	out	0x3e, r29	; 62
     284:	cd bf       	out	0x3d, r28	; 61

00000286 <__do_copy_data>:
     286:	11 e0       	ldi	r17, 0x01	; 1
     288:	a0 e0       	ldi	r26, 0x00	; 0
     28a:	b1 e0       	ldi	r27, 0x01	; 1
     28c:	e4 e3       	ldi	r30, 0x34	; 52
     28e:	f7 e1       	ldi	r31, 0x17	; 23
     290:	00 e0       	ldi	r16, 0x00	; 0
     292:	0b bf       	out	0x3b, r16	; 59
     294:	02 c0       	rjmp	.+4      	; 0x29a <__do_copy_data+0x14>
     296:	07 90       	elpm	r0, Z+
     298:	0d 92       	st	X+, r0
     29a:	a4 36       	cpi	r26, 0x64	; 100
     29c:	b1 07       	cpc	r27, r17
     29e:	d9 f7       	brne	.-10     	; 0x296 <__do_copy_data+0x10>

000002a0 <__do_clear_bss>:
     2a0:	29 e0       	ldi	r18, 0x09	; 9
     2a2:	a4 e6       	ldi	r26, 0x64	; 100
     2a4:	b1 e0       	ldi	r27, 0x01	; 1
     2a6:	01 c0       	rjmp	.+2      	; 0x2aa <.do_clear_bss_start>

000002a8 <.do_clear_bss_loop>:
     2a8:	1d 92       	st	X+, r1

000002aa <.do_clear_bss_start>:
     2aa:	a6 3a       	cpi	r26, 0xA6	; 166
     2ac:	b2 07       	cpc	r27, r18
     2ae:	e1 f7       	brne	.-8      	; 0x2a8 <.do_clear_bss_loop>
     2b0:	43 d5       	rcall	.+2694   	; 0xd38 <main>
     2b2:	0c 94 98 0b 	jmp	0x1730	; 0x1730 <_exit>

000002b6 <__bad_interrupt>:
     2b6:	a4 ce       	rjmp	.-696    	; 0x0 <__vectors>

000002b8 <pvPortMalloc>:
     2b8:	cf 93       	push	r28
     2ba:	df 93       	push	r29
     2bc:	ec 01       	movw	r28, r24
     2be:	fe d7       	rcall	.+4092   	; 0x12bc <vTaskSuspendAll>
     2c0:	20 91 64 01 	lds	r18, 0x0164	; 0x800164 <__data_end>
     2c4:	30 91 65 01 	lds	r19, 0x0165	; 0x800165 <__data_end+0x1>
     2c8:	c9 01       	movw	r24, r18
     2ca:	8c 0f       	add	r24, r28
     2cc:	9d 1f       	adc	r25, r29
     2ce:	8c 3d       	cpi	r24, 0xDC	; 220
     2d0:	45 e0       	ldi	r20, 0x05	; 5
     2d2:	94 07       	cpc	r25, r20
     2d4:	58 f4       	brcc	.+22     	; 0x2ec <pvPortMalloc+0x34>
     2d6:	28 17       	cp	r18, r24
     2d8:	39 07       	cpc	r19, r25
     2da:	58 f4       	brcc	.+22     	; 0x2f2 <pvPortMalloc+0x3a>
     2dc:	e9 01       	movw	r28, r18
     2de:	ca 59       	subi	r28, 0x9A	; 154
     2e0:	de 4f       	sbci	r29, 0xFE	; 254
     2e2:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <__data_end+0x1>
     2e6:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <__data_end>
     2ea:	05 c0       	rjmp	.+10     	; 0x2f6 <pvPortMalloc+0x3e>
     2ec:	c0 e0       	ldi	r28, 0x00	; 0
     2ee:	d0 e0       	ldi	r29, 0x00	; 0
     2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <pvPortMalloc+0x3e>
     2f2:	c0 e0       	ldi	r28, 0x00	; 0
     2f4:	d0 e0       	ldi	r29, 0x00	; 0
     2f6:	0e 94 28 0a 	call	0x1450	; 0x1450 <xTaskResumeAll>
     2fa:	ce 01       	movw	r24, r28
     2fc:	df 91       	pop	r29
     2fe:	cf 91       	pop	r28
     300:	08 95       	ret

00000302 <vPortFree>:
     302:	08 95       	ret

00000304 <vListInitialise>:
     304:	fc 01       	movw	r30, r24
     306:	03 96       	adiw	r24, 0x03	; 3
     308:	92 83       	std	Z+2, r25	; 0x02
     30a:	81 83       	std	Z+1, r24	; 0x01
     30c:	2f ef       	ldi	r18, 0xFF	; 255
     30e:	3f ef       	ldi	r19, 0xFF	; 255
     310:	34 83       	std	Z+4, r19	; 0x04
     312:	23 83       	std	Z+3, r18	; 0x03
     314:	96 83       	std	Z+6, r25	; 0x06
     316:	85 83       	std	Z+5, r24	; 0x05
     318:	90 87       	std	Z+8, r25	; 0x08
     31a:	87 83       	std	Z+7, r24	; 0x07
     31c:	10 82       	st	Z, r1
     31e:	08 95       	ret

00000320 <vListInitialiseItem>:
     320:	fc 01       	movw	r30, r24
     322:	11 86       	std	Z+9, r1	; 0x09
     324:	10 86       	std	Z+8, r1	; 0x08
     326:	08 95       	ret

00000328 <vListInsertEnd>:
     328:	cf 93       	push	r28
     32a:	df 93       	push	r29
     32c:	fc 01       	movw	r30, r24
     32e:	db 01       	movw	r26, r22
     330:	21 81       	ldd	r18, Z+1	; 0x01
     332:	32 81       	ldd	r19, Z+2	; 0x02
     334:	e9 01       	movw	r28, r18
     336:	8a 81       	ldd	r24, Y+2	; 0x02
     338:	9b 81       	ldd	r25, Y+3	; 0x03
     33a:	13 96       	adiw	r26, 0x03	; 3
     33c:	9c 93       	st	X, r25
     33e:	8e 93       	st	-X, r24
     340:	12 97       	sbiw	r26, 0x02	; 2
     342:	81 81       	ldd	r24, Z+1	; 0x01
     344:	92 81       	ldd	r25, Z+2	; 0x02
     346:	15 96       	adiw	r26, 0x05	; 5
     348:	9c 93       	st	X, r25
     34a:	8e 93       	st	-X, r24
     34c:	14 97       	sbiw	r26, 0x04	; 4
     34e:	8a 81       	ldd	r24, Y+2	; 0x02
     350:	9b 81       	ldd	r25, Y+3	; 0x03
     352:	ec 01       	movw	r28, r24
     354:	7d 83       	std	Y+5, r23	; 0x05
     356:	6c 83       	std	Y+4, r22	; 0x04
     358:	e9 01       	movw	r28, r18
     35a:	7b 83       	std	Y+3, r23	; 0x03
     35c:	6a 83       	std	Y+2, r22	; 0x02
     35e:	72 83       	std	Z+2, r23	; 0x02
     360:	61 83       	std	Z+1, r22	; 0x01
     362:	19 96       	adiw	r26, 0x09	; 9
     364:	fc 93       	st	X, r31
     366:	ee 93       	st	-X, r30
     368:	18 97       	sbiw	r26, 0x08	; 8
     36a:	80 81       	ld	r24, Z
     36c:	8f 5f       	subi	r24, 0xFF	; 255
     36e:	80 83       	st	Z, r24
     370:	df 91       	pop	r29
     372:	cf 91       	pop	r28
     374:	08 95       	ret

00000376 <vListInsert>:
     376:	cf 93       	push	r28
     378:	df 93       	push	r29
     37a:	eb 01       	movw	r28, r22
     37c:	48 81       	ld	r20, Y
     37e:	59 81       	ldd	r21, Y+1	; 0x01
     380:	4f 3f       	cpi	r20, 0xFF	; 255
     382:	2f ef       	ldi	r18, 0xFF	; 255
     384:	52 07       	cpc	r21, r18
     386:	31 f4       	brne	.+12     	; 0x394 <vListInsert+0x1e>
     388:	dc 01       	movw	r26, r24
     38a:	17 96       	adiw	r26, 0x07	; 7
     38c:	ed 91       	ld	r30, X+
     38e:	fc 91       	ld	r31, X
     390:	18 97       	sbiw	r26, 0x08	; 8
     392:	17 c0       	rjmp	.+46     	; 0x3c2 <vListInsert+0x4c>
     394:	fc 01       	movw	r30, r24
     396:	33 96       	adiw	r30, 0x03	; 3
     398:	dc 01       	movw	r26, r24
     39a:	15 96       	adiw	r26, 0x05	; 5
     39c:	2d 91       	ld	r18, X+
     39e:	3c 91       	ld	r19, X
     3a0:	16 97       	sbiw	r26, 0x06	; 6
     3a2:	d9 01       	movw	r26, r18
     3a4:	2d 91       	ld	r18, X+
     3a6:	3c 91       	ld	r19, X
     3a8:	42 17       	cp	r20, r18
     3aa:	53 07       	cpc	r21, r19
     3ac:	50 f0       	brcs	.+20     	; 0x3c2 <vListInsert+0x4c>
     3ae:	02 80       	ldd	r0, Z+2	; 0x02
     3b0:	f3 81       	ldd	r31, Z+3	; 0x03
     3b2:	e0 2d       	mov	r30, r0
     3b4:	a2 81       	ldd	r26, Z+2	; 0x02
     3b6:	b3 81       	ldd	r27, Z+3	; 0x03
     3b8:	2d 91       	ld	r18, X+
     3ba:	3c 91       	ld	r19, X
     3bc:	42 17       	cp	r20, r18
     3be:	53 07       	cpc	r21, r19
     3c0:	b0 f7       	brcc	.-20     	; 0x3ae <vListInsert+0x38>
     3c2:	a2 81       	ldd	r26, Z+2	; 0x02
     3c4:	b3 81       	ldd	r27, Z+3	; 0x03
     3c6:	bb 83       	std	Y+3, r27	; 0x03
     3c8:	aa 83       	std	Y+2, r26	; 0x02
     3ca:	15 96       	adiw	r26, 0x05	; 5
     3cc:	dc 93       	st	X, r29
     3ce:	ce 93       	st	-X, r28
     3d0:	14 97       	sbiw	r26, 0x04	; 4
     3d2:	fd 83       	std	Y+5, r31	; 0x05
     3d4:	ec 83       	std	Y+4, r30	; 0x04
     3d6:	d3 83       	std	Z+3, r29	; 0x03
     3d8:	c2 83       	std	Z+2, r28	; 0x02
     3da:	99 87       	std	Y+9, r25	; 0x09
     3dc:	88 87       	std	Y+8, r24	; 0x08
     3de:	fc 01       	movw	r30, r24
     3e0:	20 81       	ld	r18, Z
     3e2:	2f 5f       	subi	r18, 0xFF	; 255
     3e4:	20 83       	st	Z, r18
     3e6:	df 91       	pop	r29
     3e8:	cf 91       	pop	r28
     3ea:	08 95       	ret

000003ec <vListRemove>:
     3ec:	fc 01       	movw	r30, r24
     3ee:	a2 81       	ldd	r26, Z+2	; 0x02
     3f0:	b3 81       	ldd	r27, Z+3	; 0x03
     3f2:	84 81       	ldd	r24, Z+4	; 0x04
     3f4:	95 81       	ldd	r25, Z+5	; 0x05
     3f6:	15 96       	adiw	r26, 0x05	; 5
     3f8:	9c 93       	st	X, r25
     3fa:	8e 93       	st	-X, r24
     3fc:	14 97       	sbiw	r26, 0x04	; 4
     3fe:	a4 81       	ldd	r26, Z+4	; 0x04
     400:	b5 81       	ldd	r27, Z+5	; 0x05
     402:	82 81       	ldd	r24, Z+2	; 0x02
     404:	93 81       	ldd	r25, Z+3	; 0x03
     406:	13 96       	adiw	r26, 0x03	; 3
     408:	9c 93       	st	X, r25
     40a:	8e 93       	st	-X, r24
     40c:	12 97       	sbiw	r26, 0x02	; 2
     40e:	a0 85       	ldd	r26, Z+8	; 0x08
     410:	b1 85       	ldd	r27, Z+9	; 0x09
     412:	11 96       	adiw	r26, 0x01	; 1
     414:	8d 91       	ld	r24, X+
     416:	9c 91       	ld	r25, X
     418:	12 97       	sbiw	r26, 0x02	; 2
     41a:	e8 17       	cp	r30, r24
     41c:	f9 07       	cpc	r31, r25
     41e:	31 f4       	brne	.+12     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
     420:	84 81       	ldd	r24, Z+4	; 0x04
     422:	95 81       	ldd	r25, Z+5	; 0x05
     424:	12 96       	adiw	r26, 0x02	; 2
     426:	9c 93       	st	X, r25
     428:	8e 93       	st	-X, r24
     42a:	11 97       	sbiw	r26, 0x01	; 1
     42c:	11 86       	std	Z+9, r1	; 0x09
     42e:	10 86       	std	Z+8, r1	; 0x08
     430:	8c 91       	ld	r24, X
     432:	81 50       	subi	r24, 0x01	; 1
     434:	8c 93       	st	X, r24
     436:	08 95       	ret

00000438 <write>:
//////////////////////////////////////////////////////////////////////// LOCAL VARIABLES ////////////////////////////////////////////////////////////////////////

enum MotorState {READ_MOTION, READ_KEY_INIT, READ_KEY_WAIT, READ_KEY_INIT_2, READ_KEY, LOCK, UNLOCK} motor_state;

void Motor_Init(){
	motor_state = READ_MOTION;
     438:	28 98       	cbi	0x05, 0	; 5
     43a:	66 23       	and	r22, r22
     43c:	11 f0       	breq	.+4      	; 0x442 <write+0xa>
     43e:	2a 9a       	sbi	0x05, 2	; 5
     440:	15 c0       	rjmp	.+42     	; 0x46c <write+0x34>
     442:	2a 98       	cbi	0x05, 2	; 5
     444:	13 c0       	rjmp	.+38     	; 0x46c <write+0x34>
     446:	ac 01       	movw	r20, r24
     448:	02 2e       	mov	r0, r18
     44a:	02 c0       	rjmp	.+4      	; 0x450 <write+0x18>
     44c:	55 95       	asr	r21
     44e:	47 95       	ror	r20
     450:	0a 94       	dec	r0
     452:	e2 f7       	brpl	.-8      	; 0x44c <write+0x14>
     454:	40 ff       	sbrs	r20, 0
     456:	02 c0       	rjmp	.+4      	; 0x45c <write+0x24>
     458:	2b 9a       	sbi	0x05, 3	; 5
     45a:	01 c0       	rjmp	.+2      	; 0x45e <write+0x26>
     45c:	2b 98       	cbi	0x05, 3	; 5
     45e:	2c 9a       	sbi	0x05, 4	; 5
     460:	2c 98       	cbi	0x05, 4	; 5
     462:	21 50       	subi	r18, 0x01	; 1
     464:	31 09       	sbc	r19, r1
     466:	78 f7       	brcc	.-34     	; 0x446 <write+0xe>
     468:	28 9a       	sbi	0x05, 0	; 5
     46a:	08 95       	ret
     46c:	27 e0       	ldi	r18, 0x07	; 7
     46e:	30 e0       	ldi	r19, 0x00	; 0
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	e9 cf       	rjmp	.-46     	; 0x446 <write+0xe>

00000474 <write_cmd>:
     474:	60 e0       	ldi	r22, 0x00	; 0
     476:	e0 cf       	rjmp	.-64     	; 0x438 <write>
     478:	08 95       	ret

0000047a <GetKeypadKey>:
     47a:	8f ee       	ldi	r24, 0xEF	; 239
     47c:	88 b9       	out	0x08, r24	; 8
     47e:	00 00       	nop
     480:	30 9b       	sbis	0x06, 0	; 6
     482:	29 c0       	rjmp	.+82     	; 0x4d6 <GetKeypadKey+0x5c>
     484:	31 9b       	sbis	0x06, 1	; 6
     486:	29 c0       	rjmp	.+82     	; 0x4da <GetKeypadKey+0x60>
     488:	32 9b       	sbis	0x06, 2	; 6
     48a:	29 c0       	rjmp	.+82     	; 0x4de <GetKeypadKey+0x64>
     48c:	33 9b       	sbis	0x06, 3	; 6
     48e:	29 c0       	rjmp	.+82     	; 0x4e2 <GetKeypadKey+0x68>
     490:	8f ed       	ldi	r24, 0xDF	; 223
     492:	88 b9       	out	0x08, r24	; 8
     494:	00 00       	nop
     496:	30 9b       	sbis	0x06, 0	; 6
     498:	26 c0       	rjmp	.+76     	; 0x4e6 <GetKeypadKey+0x6c>
     49a:	31 9b       	sbis	0x06, 1	; 6
     49c:	26 c0       	rjmp	.+76     	; 0x4ea <GetKeypadKey+0x70>
     49e:	32 9b       	sbis	0x06, 2	; 6
     4a0:	26 c0       	rjmp	.+76     	; 0x4ee <GetKeypadKey+0x74>
     4a2:	33 9b       	sbis	0x06, 3	; 6
     4a4:	26 c0       	rjmp	.+76     	; 0x4f2 <GetKeypadKey+0x78>
     4a6:	8f eb       	ldi	r24, 0xBF	; 191
     4a8:	88 b9       	out	0x08, r24	; 8
     4aa:	00 00       	nop
     4ac:	30 9b       	sbis	0x06, 0	; 6
     4ae:	23 c0       	rjmp	.+70     	; 0x4f6 <GetKeypadKey+0x7c>
     4b0:	31 9b       	sbis	0x06, 1	; 6
     4b2:	23 c0       	rjmp	.+70     	; 0x4fa <GetKeypadKey+0x80>
     4b4:	32 9b       	sbis	0x06, 2	; 6
     4b6:	23 c0       	rjmp	.+70     	; 0x4fe <GetKeypadKey+0x84>
     4b8:	33 9b       	sbis	0x06, 3	; 6
     4ba:	23 c0       	rjmp	.+70     	; 0x502 <GetKeypadKey+0x88>
     4bc:	8f e7       	ldi	r24, 0x7F	; 127
     4be:	88 b9       	out	0x08, r24	; 8
     4c0:	00 00       	nop
     4c2:	30 9b       	sbis	0x06, 0	; 6
     4c4:	20 c0       	rjmp	.+64     	; 0x506 <GetKeypadKey+0x8c>
     4c6:	31 9b       	sbis	0x06, 1	; 6
     4c8:	20 c0       	rjmp	.+64     	; 0x50a <GetKeypadKey+0x90>
     4ca:	32 9b       	sbis	0x06, 2	; 6
     4cc:	20 c0       	rjmp	.+64     	; 0x50e <GetKeypadKey+0x94>
     4ce:	33 9b       	sbis	0x06, 3	; 6
     4d0:	20 c0       	rjmp	.+64     	; 0x512 <GetKeypadKey+0x98>
     4d2:	80 e0       	ldi	r24, 0x00	; 0
     4d4:	08 95       	ret
     4d6:	81 e3       	ldi	r24, 0x31	; 49
     4d8:	08 95       	ret
     4da:	84 e3       	ldi	r24, 0x34	; 52
     4dc:	08 95       	ret
     4de:	87 e3       	ldi	r24, 0x37	; 55
     4e0:	08 95       	ret
     4e2:	8a e2       	ldi	r24, 0x2A	; 42
     4e4:	08 95       	ret
     4e6:	82 e3       	ldi	r24, 0x32	; 50
     4e8:	08 95       	ret
     4ea:	85 e3       	ldi	r24, 0x35	; 53
     4ec:	08 95       	ret
     4ee:	88 e3       	ldi	r24, 0x38	; 56
     4f0:	08 95       	ret
     4f2:	80 e3       	ldi	r24, 0x30	; 48
     4f4:	08 95       	ret
     4f6:	83 e3       	ldi	r24, 0x33	; 51
     4f8:	08 95       	ret
     4fa:	86 e3       	ldi	r24, 0x36	; 54
     4fc:	08 95       	ret
     4fe:	89 e3       	ldi	r24, 0x39	; 57
     500:	08 95       	ret
     502:	83 e2       	ldi	r24, 0x23	; 35
     504:	08 95       	ret
     506:	81 e4       	ldi	r24, 0x41	; 65
     508:	08 95       	ret
     50a:	82 e4       	ldi	r24, 0x42	; 66
     50c:	08 95       	ret
     50e:	83 e4       	ldi	r24, 0x43	; 67
     510:	08 95       	ret
     512:	84 e4       	ldi	r24, 0x44	; 68
     514:	08 95       	ret

00000516 <nokia_lcd_init>:
     516:	cf 93       	push	r28
     518:	df 93       	push	r29
     51a:	20 9a       	sbi	0x04, 0	; 4
     51c:	21 9a       	sbi	0x04, 1	; 4
     51e:	22 9a       	sbi	0x04, 2	; 4
     520:	23 9a       	sbi	0x04, 3	; 4
     522:	24 9a       	sbi	0x04, 4	; 4
     524:	29 9a       	sbi	0x05, 1	; 5
     526:	28 9a       	sbi	0x05, 0	; 5
     528:	83 ec       	ldi	r24, 0xC3	; 195
     52a:	99 e0       	ldi	r25, 0x09	; 9
     52c:	01 97       	sbiw	r24, 0x01	; 1
     52e:	f1 f7       	brne	.-4      	; 0x52c <nokia_lcd_init+0x16>
     530:	00 c0       	rjmp	.+0      	; 0x532 <nokia_lcd_init+0x1c>
     532:	00 00       	nop
     534:	29 98       	cbi	0x05, 1	; 5
     536:	8b e5       	ldi	r24, 0x5B	; 91
     538:	94 e4       	ldi	r25, 0x44	; 68
     53a:	01 97       	sbiw	r24, 0x01	; 1
     53c:	f1 f7       	brne	.-4      	; 0x53a <nokia_lcd_init+0x24>
     53e:	00 c0       	rjmp	.+0      	; 0x540 <nokia_lcd_init+0x2a>
     540:	00 00       	nop
     542:	29 9a       	sbi	0x05, 1	; 5
     544:	28 98       	cbi	0x05, 0	; 5
     546:	81 e2       	ldi	r24, 0x21	; 33
     548:	95 df       	rcall	.-214    	; 0x474 <write_cmd>
     54a:	83 e1       	ldi	r24, 0x13	; 19
     54c:	93 df       	rcall	.-218    	; 0x474 <write_cmd>
     54e:	86 e0       	ldi	r24, 0x06	; 6
     550:	91 df       	rcall	.-222    	; 0x474 <write_cmd>
     552:	82 ec       	ldi	r24, 0xC2	; 194
     554:	8f df       	rcall	.-226    	; 0x474 <write_cmd>
     556:	80 e2       	ldi	r24, 0x20	; 32
     558:	8d df       	rcall	.-230    	; 0x474 <write_cmd>
     55a:	89 e0       	ldi	r24, 0x09	; 9
     55c:	8b df       	rcall	.-234    	; 0x474 <write_cmd>
     55e:	80 e8       	ldi	r24, 0x80	; 128
     560:	89 df       	rcall	.-238    	; 0x474 <write_cmd>
     562:	80 e4       	ldi	r24, 0x40	; 64
     564:	87 df       	rcall	.-242    	; 0x474 <write_cmd>
     566:	c8 ef       	ldi	r28, 0xF8	; 248
     568:	d1 e0       	ldi	r29, 0x01	; 1
     56a:	61 e0       	ldi	r22, 0x01	; 1
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	64 df       	rcall	.-312    	; 0x438 <write>
     570:	21 97       	sbiw	r28, 0x01	; 1
     572:	d9 f7       	brne	.-10     	; 0x56a <nokia_lcd_init+0x54>
     574:	88 e0       	ldi	r24, 0x08	; 8
     576:	7e df       	rcall	.-260    	; 0x474 <write_cmd>
     578:	8c e0       	ldi	r24, 0x0C	; 12
     57a:	7c df       	rcall	.-264    	; 0x474 <write_cmd>
     57c:	df 91       	pop	r29
     57e:	cf 91       	pop	r28
     580:	08 95       	ret

00000582 <nokia_lcd_clear>:
     582:	80 e8       	ldi	r24, 0x80	; 128
     584:	77 df       	rcall	.-274    	; 0x474 <write_cmd>
     586:	80 e4       	ldi	r24, 0x40	; 64
     588:	75 df       	rcall	.-278    	; 0x474 <write_cmd>
     58a:	10 92 41 09 	sts	0x0941, r1	; 0x800941 <nokia_lcd+0x1f8>
     58e:	10 92 42 09 	sts	0x0942, r1	; 0x800942 <nokia_lcd+0x1f9>
     592:	e9 e4       	ldi	r30, 0x49	; 73
     594:	f7 e0       	ldi	r31, 0x07	; 7
     596:	81 e4       	ldi	r24, 0x41	; 65
     598:	99 e0       	ldi	r25, 0x09	; 9
     59a:	11 92       	st	Z+, r1
     59c:	e8 17       	cp	r30, r24
     59e:	f9 07       	cpc	r31, r25
     5a0:	e1 f7       	brne	.-8      	; 0x59a <nokia_lcd_clear+0x18>
     5a2:	08 95       	ret

000005a4 <nokia_lcd_set_pixel>:
     5a4:	26 2f       	mov	r18, r22
     5a6:	26 95       	lsr	r18
     5a8:	26 95       	lsr	r18
     5aa:	26 95       	lsr	r18
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	34 e5       	ldi	r19, 0x54	; 84
     5b0:	23 9f       	mul	r18, r19
     5b2:	80 0d       	add	r24, r0
     5b4:	91 1d       	adc	r25, r1
     5b6:	11 24       	eor	r1, r1
     5b8:	44 23       	and	r20, r20
     5ba:	79 f0       	breq	.+30     	; 0x5da <nokia_lcd_set_pixel+0x36>
     5bc:	fc 01       	movw	r30, r24
     5be:	e7 5b       	subi	r30, 0xB7	; 183
     5c0:	f8 4f       	sbci	r31, 0xF8	; 248
     5c2:	67 70       	andi	r22, 0x07	; 7
     5c4:	81 e0       	ldi	r24, 0x01	; 1
     5c6:	90 e0       	ldi	r25, 0x00	; 0
     5c8:	02 c0       	rjmp	.+4      	; 0x5ce <nokia_lcd_set_pixel+0x2a>
     5ca:	88 0f       	add	r24, r24
     5cc:	99 1f       	adc	r25, r25
     5ce:	6a 95       	dec	r22
     5d0:	e2 f7       	brpl	.-8      	; 0x5ca <nokia_lcd_set_pixel+0x26>
     5d2:	90 81       	ld	r25, Z
     5d4:	89 2b       	or	r24, r25
     5d6:	80 83       	st	Z, r24
     5d8:	08 95       	ret
     5da:	fc 01       	movw	r30, r24
     5dc:	e7 5b       	subi	r30, 0xB7	; 183
     5de:	f8 4f       	sbci	r31, 0xF8	; 248
     5e0:	67 70       	andi	r22, 0x07	; 7
     5e2:	81 e0       	ldi	r24, 0x01	; 1
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	02 c0       	rjmp	.+4      	; 0x5ec <nokia_lcd_set_pixel+0x48>
     5e8:	88 0f       	add	r24, r24
     5ea:	99 1f       	adc	r25, r25
     5ec:	6a 95       	dec	r22
     5ee:	e2 f7       	brpl	.-8      	; 0x5e8 <nokia_lcd_set_pixel+0x44>
     5f0:	80 95       	com	r24
     5f2:	90 81       	ld	r25, Z
     5f4:	89 23       	and	r24, r25
     5f6:	80 83       	st	Z, r24
     5f8:	08 95       	ret

000005fa <nokia_lcd_write_char>:
     5fa:	5f 92       	push	r5
     5fc:	6f 92       	push	r6
     5fe:	7f 92       	push	r7
     600:	8f 92       	push	r8
     602:	9f 92       	push	r9
     604:	af 92       	push	r10
     606:	bf 92       	push	r11
     608:	cf 92       	push	r12
     60a:	df 92       	push	r13
     60c:	ef 92       	push	r14
     60e:	ff 92       	push	r15
     610:	0f 93       	push	r16
     612:	1f 93       	push	r17
     614:	cf 93       	push	r28
     616:	df 93       	push	r29
     618:	56 2e       	mov	r5, r22
     61a:	26 2f       	mov	r18, r22
     61c:	30 e0       	ldi	r19, 0x00	; 0
     61e:	49 01       	movw	r8, r18
     620:	88 0c       	add	r8, r8
     622:	99 1c       	adc	r9, r9
     624:	88 0c       	add	r8, r8
     626:	99 1c       	adc	r9, r9
     628:	82 0e       	add	r8, r18
     62a:	93 1e       	adc	r9, r19
     62c:	18 14       	cp	r1, r8
     62e:	19 04       	cpc	r1, r9
     630:	0c f0       	brlt	.+2      	; 0x634 <nokia_lcd_write_char+0x3a>
     632:	5b c0       	rjmp	.+182    	; 0x6ea <nokia_lcd_write_char+0xf0>
     634:	89 01       	movw	r16, r18
     636:	00 0f       	add	r16, r16
     638:	11 1f       	adc	r17, r17
     63a:	00 0f       	add	r16, r16
     63c:	11 1f       	adc	r17, r17
     63e:	00 0f       	add	r16, r16
     640:	11 1f       	adc	r17, r17
     642:	02 1b       	sub	r16, r18
     644:	13 0b       	sbc	r17, r19
     646:	61 2c       	mov	r6, r1
     648:	a8 2e       	mov	r10, r24
     64a:	b1 2c       	mov	r11, r1
     64c:	c5 01       	movw	r24, r10
     64e:	80 97       	sbiw	r24, 0x20	; 32
     650:	5c 01       	movw	r10, r24
     652:	aa 0c       	add	r10, r10
     654:	bb 1c       	adc	r11, r11
     656:	aa 0c       	add	r10, r10
     658:	bb 1c       	adc	r11, r11
     65a:	a8 0e       	add	r10, r24
     65c:	b9 1e       	adc	r11, r25
     65e:	0f 2e       	mov	r0, r31
     660:	f2 e4       	ldi	r31, 0x42	; 66
     662:	cf 2e       	mov	r12, r31
     664:	f9 e0       	ldi	r31, 0x09	; 9
     666:	df 2e       	mov	r13, r31
     668:	f0 2d       	mov	r31, r0
     66a:	0f 2e       	mov	r0, r31
     66c:	f1 e4       	ldi	r31, 0x41	; 65
     66e:	ef 2e       	mov	r14, r31
     670:	f9 e0       	ldi	r31, 0x09	; 9
     672:	ff 2e       	mov	r15, r31
     674:	f0 2d       	mov	r31, r0
     676:	2b c0       	rjmp	.+86     	; 0x6ce <nokia_lcd_write_char+0xd4>
     678:	fe 01       	movw	r30, r28
     67a:	24 91       	lpm	r18, Z
     67c:	30 e0       	ldi	r19, 0x00	; 0
     67e:	87 2d       	mov	r24, r7
     680:	65 2d       	mov	r22, r5
     682:	0e 94 6d 0b 	call	0x16da	; 0x16da <__udivmodqi4>
     686:	02 c0       	rjmp	.+4      	; 0x68c <nokia_lcd_write_char+0x92>
     688:	35 95       	asr	r19
     68a:	27 95       	ror	r18
     68c:	8a 95       	dec	r24
     68e:	e2 f7       	brpl	.-8      	; 0x688 <nokia_lcd_write_char+0x8e>
     690:	20 ff       	sbrs	r18, 0
     692:	09 c0       	rjmp	.+18     	; 0x6a6 <nokia_lcd_write_char+0xac>
     694:	f6 01       	movw	r30, r12
     696:	60 81       	ld	r22, Z
     698:	67 0d       	add	r22, r7
     69a:	f7 01       	movw	r30, r14
     69c:	80 81       	ld	r24, Z
     69e:	41 e0       	ldi	r20, 0x01	; 1
     6a0:	86 0d       	add	r24, r6
     6a2:	80 df       	rcall	.-256    	; 0x5a4 <nokia_lcd_set_pixel>
     6a4:	08 c0       	rjmp	.+16     	; 0x6b6 <nokia_lcd_write_char+0xbc>
     6a6:	f6 01       	movw	r30, r12
     6a8:	60 81       	ld	r22, Z
     6aa:	67 0d       	add	r22, r7
     6ac:	f7 01       	movw	r30, r14
     6ae:	80 81       	ld	r24, Z
     6b0:	40 e0       	ldi	r20, 0x00	; 0
     6b2:	86 0d       	add	r24, r6
     6b4:	77 df       	rcall	.-274    	; 0x5a4 <nokia_lcd_set_pixel>
     6b6:	73 94       	inc	r7
     6b8:	87 2d       	mov	r24, r7
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	80 17       	cp	r24, r16
     6be:	91 07       	cpc	r25, r17
     6c0:	dc f2       	brlt	.-74     	; 0x678 <nokia_lcd_write_char+0x7e>
     6c2:	63 94       	inc	r6
     6c4:	86 2d       	mov	r24, r6
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	88 15       	cp	r24, r8
     6ca:	99 05       	cpc	r25, r9
     6cc:	74 f4       	brge	.+28     	; 0x6ea <nokia_lcd_write_char+0xf0>
     6ce:	10 16       	cp	r1, r16
     6d0:	11 06       	cpc	r1, r17
     6d2:	bc f7       	brge	.-18     	; 0x6c2 <nokia_lcd_write_char+0xc8>
     6d4:	86 2d       	mov	r24, r6
     6d6:	65 2d       	mov	r22, r5
     6d8:	0e 94 6d 0b 	call	0x16da	; 0x16da <__udivmodqi4>
     6dc:	e5 01       	movw	r28, r10
     6de:	c8 0f       	add	r28, r24
     6e0:	d1 1d       	adc	r29, r1
     6e2:	c6 56       	subi	r28, 0x66	; 102
     6e4:	df 4f       	sbci	r29, 0xFF	; 255
     6e6:	71 2c       	mov	r7, r1
     6e8:	c7 cf       	rjmp	.-114    	; 0x678 <nokia_lcd_write_char+0x7e>
     6ea:	80 91 41 09 	lds	r24, 0x0941	; 0x800941 <nokia_lcd+0x1f8>
     6ee:	91 e0       	ldi	r25, 0x01	; 1
     6f0:	98 0f       	add	r25, r24
     6f2:	85 2d       	mov	r24, r5
     6f4:	88 0f       	add	r24, r24
     6f6:	88 0f       	add	r24, r24
     6f8:	85 0d       	add	r24, r5
     6fa:	89 0f       	add	r24, r25
     6fc:	84 35       	cpi	r24, 0x54	; 84
     6fe:	18 f4       	brcc	.+6      	; 0x706 <nokia_lcd_write_char+0x10c>
     700:	80 93 41 09 	sts	0x0941, r24	; 0x800941 <nokia_lcd+0x1f8>
     704:	0e c0       	rjmp	.+28     	; 0x722 <nokia_lcd_write_char+0x128>
     706:	10 92 41 09 	sts	0x0941, r1	; 0x800941 <nokia_lcd+0x1f8>
     70a:	e2 e4       	ldi	r30, 0x42	; 66
     70c:	f9 e0       	ldi	r31, 0x09	; 9
     70e:	80 81       	ld	r24, Z
     710:	91 e0       	ldi	r25, 0x01	; 1
     712:	98 0f       	add	r25, r24
     714:	85 2d       	mov	r24, r5
     716:	88 0f       	add	r24, r24
     718:	88 0f       	add	r24, r24
     71a:	88 0f       	add	r24, r24
     71c:	85 19       	sub	r24, r5
     71e:	89 0f       	add	r24, r25
     720:	80 83       	st	Z, r24
     722:	80 91 42 09 	lds	r24, 0x0942	; 0x800942 <nokia_lcd+0x1f9>
     726:	80 33       	cpi	r24, 0x30	; 48
     728:	20 f0       	brcs	.+8      	; 0x732 <nokia_lcd_write_char+0x138>
     72a:	10 92 41 09 	sts	0x0941, r1	; 0x800941 <nokia_lcd+0x1f8>
     72e:	10 92 42 09 	sts	0x0942, r1	; 0x800942 <nokia_lcd+0x1f9>
     732:	df 91       	pop	r29
     734:	cf 91       	pop	r28
     736:	1f 91       	pop	r17
     738:	0f 91       	pop	r16
     73a:	ff 90       	pop	r15
     73c:	ef 90       	pop	r14
     73e:	df 90       	pop	r13
     740:	cf 90       	pop	r12
     742:	bf 90       	pop	r11
     744:	af 90       	pop	r10
     746:	9f 90       	pop	r9
     748:	8f 90       	pop	r8
     74a:	7f 90       	pop	r7
     74c:	6f 90       	pop	r6
     74e:	5f 90       	pop	r5
     750:	08 95       	ret

00000752 <nokia_lcd_write_string>:
     752:	1f 93       	push	r17
     754:	cf 93       	push	r28
     756:	df 93       	push	r29
     758:	ec 01       	movw	r28, r24
     75a:	88 81       	ld	r24, Y
     75c:	88 23       	and	r24, r24
     75e:	39 f0       	breq	.+14     	; 0x76e <nokia_lcd_write_string+0x1c>
     760:	16 2f       	mov	r17, r22
     762:	21 96       	adiw	r28, 0x01	; 1
     764:	61 2f       	mov	r22, r17
     766:	49 df       	rcall	.-366    	; 0x5fa <nokia_lcd_write_char>
     768:	89 91       	ld	r24, Y+
     76a:	81 11       	cpse	r24, r1
     76c:	fb cf       	rjmp	.-10     	; 0x764 <nokia_lcd_write_string+0x12>
     76e:	df 91       	pop	r29
     770:	cf 91       	pop	r28
     772:	1f 91       	pop	r17
     774:	08 95       	ret

00000776 <nokia_lcd_render>:
     776:	0f 93       	push	r16
     778:	1f 93       	push	r17
     77a:	cf 93       	push	r28
     77c:	df 93       	push	r29
     77e:	80 e8       	ldi	r24, 0x80	; 128
     780:	79 de       	rcall	.-782    	; 0x474 <write_cmd>
     782:	80 e4       	ldi	r24, 0x40	; 64
     784:	77 de       	rcall	.-786    	; 0x474 <write_cmd>
     786:	c9 e4       	ldi	r28, 0x49	; 73
     788:	d7 e0       	ldi	r29, 0x07	; 7
     78a:	01 e4       	ldi	r16, 0x41	; 65
     78c:	19 e0       	ldi	r17, 0x09	; 9
     78e:	61 e0       	ldi	r22, 0x01	; 1
     790:	89 91       	ld	r24, Y+
     792:	52 de       	rcall	.-860    	; 0x438 <write>
     794:	c0 17       	cp	r28, r16
     796:	d1 07       	cpc	r29, r17
     798:	d1 f7       	brne	.-12     	; 0x78e <nokia_lcd_render+0x18>
     79a:	df 91       	pop	r29
     79c:	cf 91       	pop	r28
     79e:	1f 91       	pop	r17
     7a0:	0f 91       	pop	r16
     7a2:	08 95       	ret

000007a4 <initUSART>:
     7a4:	81 30       	cpi	r24, 0x01	; 1
     7a6:	81 f0       	breq	.+32     	; 0x7c8 <initUSART+0x24>
     7a8:	e1 ec       	ldi	r30, 0xC1	; 193
     7aa:	f0 e0       	ldi	r31, 0x00	; 0
     7ac:	80 81       	ld	r24, Z
     7ae:	88 61       	ori	r24, 0x18	; 24
     7b0:	80 83       	st	Z, r24
     7b2:	e2 ec       	ldi	r30, 0xC2	; 194
     7b4:	f0 e0       	ldi	r31, 0x00	; 0
     7b6:	80 81       	ld	r24, Z
     7b8:	86 60       	ori	r24, 0x06	; 6
     7ba:	80 83       	st	Z, r24
     7bc:	85 e0       	ldi	r24, 0x05	; 5
     7be:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     7c2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     7c6:	08 95       	ret
     7c8:	e9 ec       	ldi	r30, 0xC9	; 201
     7ca:	f0 e0       	ldi	r31, 0x00	; 0
     7cc:	80 81       	ld	r24, Z
     7ce:	88 61       	ori	r24, 0x18	; 24
     7d0:	80 83       	st	Z, r24
     7d2:	ea ec       	ldi	r30, 0xCA	; 202
     7d4:	f0 e0       	ldi	r31, 0x00	; 0
     7d6:	80 81       	ld	r24, Z
     7d8:	86 60       	ori	r24, 0x06	; 6
     7da:	80 83       	st	Z, r24
     7dc:	85 e0       	ldi	r24, 0x05	; 5
     7de:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
     7e2:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
     7e6:	08 95       	ret

000007e8 <USART_Flush>:
     7e8:	81 30       	cpi	r24, 0x01	; 1
     7ea:	29 f4       	brne	.+10     	; 0x7f6 <USART_Flush+0xe>
     7ec:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     7f0:	88 23       	and	r24, r24
     7f2:	74 f0       	brlt	.+28     	; 0x810 <USART_Flush+0x28>
     7f4:	08 95       	ret
     7f6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     7fa:	88 23       	and	r24, r24
     7fc:	8c f4       	brge	.+34     	; 0x820 <USART_Flush+0x38>
     7fe:	a6 ec       	ldi	r26, 0xC6	; 198
     800:	b0 e0       	ldi	r27, 0x00	; 0
     802:	e0 ec       	ldi	r30, 0xC0	; 192
     804:	f0 e0       	ldi	r31, 0x00	; 0
     806:	8c 91       	ld	r24, X
     808:	80 81       	ld	r24, Z
     80a:	88 23       	and	r24, r24
     80c:	e4 f3       	brlt	.-8      	; 0x806 <USART_Flush+0x1e>
     80e:	08 95       	ret
     810:	ae ec       	ldi	r26, 0xCE	; 206
     812:	b0 e0       	ldi	r27, 0x00	; 0
     814:	e8 ec       	ldi	r30, 0xC8	; 200
     816:	f0 e0       	ldi	r31, 0x00	; 0
     818:	8c 91       	ld	r24, X
     81a:	80 81       	ld	r24, Z
     81c:	88 23       	and	r24, r24
     81e:	e4 f3       	brlt	.-8      	; 0x818 <USART_Flush+0x30>
     820:	08 95       	ret

00000822 <USART_Receive>:
     822:	81 30       	cpi	r24, 0x01	; 1
     824:	41 f0       	breq	.+16     	; 0x836 <USART_Receive+0x14>
     826:	e0 ec       	ldi	r30, 0xC0	; 192
     828:	f0 e0       	ldi	r31, 0x00	; 0
     82a:	80 81       	ld	r24, Z
     82c:	88 23       	and	r24, r24
     82e:	ec f7       	brge	.-6      	; 0x82a <USART_Receive+0x8>
     830:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     834:	08 95       	ret
     836:	e8 ec       	ldi	r30, 0xC8	; 200
     838:	f0 e0       	ldi	r31, 0x00	; 0
     83a:	80 81       	ld	r24, Z
     83c:	88 23       	and	r24, r24
     83e:	ec f7       	brge	.-6      	; 0x83a <USART_Receive+0x18>
     840:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     844:	08 95       	ret

00000846 <Motor_Tick>:
}

void Motor_Tick()
{
     846:	df 92       	push	r13
     848:	ef 92       	push	r14
     84a:	ff 92       	push	r15
     84c:	0f 93       	push	r16
     84e:	1f 93       	push	r17
     850:	cf 93       	push	r28
     852:	df 93       	push	r29
	
	char garage_button = (GetBit(~PIND, 3)); //if button is pressed then = 8
     854:	89 b1       	in	r24, 0x09	; 9
	return (bin_value ? pin | (0x01 << number) : pin & ~(0x01 << number));
}

unsigned char GetBit(unsigned char port, unsigned char number)
{
	return ( port & (0x01 << number) );
     856:	80 95       	com	r24
     858:	38 2f       	mov	r19, r24
     85a:	38 70       	andi	r19, 0x08	; 8
	char motion_sensor = (GetBit(~PIND, 2)); //if motion is sensed then = 4
     85c:	89 b1       	in	r24, 0x09	; 9
     85e:	80 95       	com	r24
     860:	28 2f       	mov	r18, r24
     862:	24 70       	andi	r18, 0x04	; 4
	switch(motor_state)
     864:	e0 91 9d 09 	lds	r30, 0x099D	; 0x80099d <motor_state>
     868:	8e 2f       	mov	r24, r30
     86a:	90 e0       	ldi	r25, 0x00	; 0
     86c:	87 30       	cpi	r24, 0x07	; 7
     86e:	91 05       	cpc	r25, r1
     870:	08 f0       	brcs	.+2      	; 0x874 <Motor_Tick+0x2e>
     872:	57 c0       	rjmp	.+174    	; 0x922 <Motor_Tick+0xdc>
     874:	fc 01       	movw	r30, r24
     876:	ea 5b       	subi	r30, 0xBA	; 186
     878:	ff 4f       	sbci	r31, 0xFF	; 255
     87a:	3b c7       	rjmp	.+3702   	; 0x16f2 <__tablejump2__>
	{	
		case READ_MOTION:
			if(motion_sensor == 4){motor_state = READ_KEY_INIT;}
     87c:	24 30       	cpi	r18, 0x04	; 4
     87e:	09 f0       	breq	.+2      	; 0x882 <Motor_Tick+0x3c>
     880:	12 c2       	rjmp	.+1060   	; 0xca6 <Motor_Tick+0x460>
     882:	81 e0       	ldi	r24, 0x01	; 1
     884:	80 93 9d 09 	sts	0x099D, r24	; 0x80099d <motor_state>
     888:	12 c2       	rjmp	.+1060   	; 0xcae <Motor_Tick+0x468>
			else if(motion_sensor == 0){motor_state = READ_MOTION;}
			break;
		
		case READ_KEY_INIT:
			if(checker == 1){motor_state = READ_KEY_WAIT;}
     88a:	80 91 45 07 	lds	r24, 0x0745	; 0x800745 <checker>
     88e:	81 30       	cpi	r24, 0x01	; 1
     890:	09 f0       	breq	.+2      	; 0x894 <Motor_Tick+0x4e>
     892:	0d c2       	rjmp	.+1050   	; 0xcae <Motor_Tick+0x468>
     894:	82 e0       	ldi	r24, 0x02	; 2
     896:	80 93 9d 09 	sts	0x099D, r24	; 0x80099d <motor_state>
     89a:	20 c2       	rjmp	.+1088   	; 0xcdc <Motor_Tick+0x496>
			else if (checker == 0){motor_state = READ_KEY_INIT;}
			break;
			
		case READ_KEY_WAIT:
			if(cnt > 200){motor_state = READ_KEY_INIT_2; cnt = 0;}
     89c:	80 91 47 07 	lds	r24, 0x0747	; 0x800747 <cnt>
     8a0:	89 3c       	cpi	r24, 0xC9	; 201
     8a2:	30 f0       	brcs	.+12     	; 0x8b0 <Motor_Tick+0x6a>
     8a4:	83 e0       	ldi	r24, 0x03	; 3
     8a6:	80 93 9d 09 	sts	0x099D, r24	; 0x80099d <motor_state>
     8aa:	10 92 47 07 	sts	0x0747, r1	; 0x800747 <cnt>
     8ae:	10 c2       	rjmp	.+1056   	; 0xcd0 <Motor_Tick+0x48a>
			else{motor_state = READ_KEY_WAIT; cnt = cnt + 1;}
     8b0:	8f 5f       	subi	r24, 0xFF	; 255
     8b2:	80 93 47 07 	sts	0x0747, r24	; 0x800747 <cnt>
     8b6:	12 c2       	rjmp	.+1060   	; 0xcdc <Motor_Tick+0x496>
			break;
			
		case READ_KEY_INIT_2:
			if(checker2 == 1){motor_state = READ_KEY;}
     8b8:	80 91 44 07 	lds	r24, 0x0744	; 0x800744 <checker2>
     8bc:	81 30       	cpi	r24, 0x01	; 1
     8be:	09 f0       	breq	.+2      	; 0x8c2 <Motor_Tick+0x7c>
     8c0:	07 c2       	rjmp	.+1038   	; 0xcd0 <Motor_Tick+0x48a>
     8c2:	84 e0       	ldi	r24, 0x04	; 4
     8c4:	80 93 9d 09 	sts	0x099D, r24	; 0x80099d <motor_state>
     8c8:	f8 c1       	rjmp	.+1008   	; 0xcba <Motor_Tick+0x474>
			else if (checker2 == 0){motor_state = READ_KEY_INIT_2;}
			break;
			
		case READ_KEY:
			if (lr == 2){motor_state = UNLOCK;}
     8ca:	80 91 43 07 	lds	r24, 0x0743	; 0x800743 <lr>
     8ce:	82 30       	cpi	r24, 0x02	; 2
     8d0:	09 f0       	breq	.+2      	; 0x8d4 <Motor_Tick+0x8e>
     8d2:	f3 c1       	rjmp	.+998    	; 0xcba <Motor_Tick+0x474>
     8d4:	86 e0       	ldi	r24, 0x06	; 6
     8d6:	80 93 9d 09 	sts	0x099D, r24	; 0x80099d <motor_state>
     8da:	13 c1       	rjmp	.+550    	; 0xb02 <Motor_Tick+0x2bc>
			else {motor_state = READ_KEY;}
			break;
		
		case UNLOCK:
			if(cnt > 200) {motor_state = LOCK; cnt = 0; motion_sensor = 0;}
     8dc:	80 91 47 07 	lds	r24, 0x0747	; 0x800747 <cnt>
     8e0:	89 3c       	cpi	r24, 0xC9	; 201
     8e2:	30 f0       	brcs	.+12     	; 0x8f0 <Motor_Tick+0xaa>
     8e4:	85 e0       	ldi	r24, 0x05	; 5
     8e6:	80 93 9d 09 	sts	0x099D, r24	; 0x80099d <motor_state>
     8ea:	10 92 47 07 	sts	0x0747, r1	; 0x800747 <cnt>
     8ee:	eb c1       	rjmp	.+982    	; 0xcc6 <Motor_Tick+0x480>
			else {motor_state = UNLOCK; cnt = cnt + 1;}
     8f0:	8f 5f       	subi	r24, 0xFF	; 255
     8f2:	80 93 47 07 	sts	0x0747, r24	; 0x800747 <cnt>
			}
			numPhases = 1024; //(90 / 5.625) * 64
			break;
		
		case UNLOCK:
			if(lr){
     8f6:	80 91 43 07 	lds	r24, 0x0743	; 0x800743 <lr>
     8fa:	88 23       	and	r24, r24
     8fc:	09 f4       	brne	.+2      	; 0x900 <Motor_Tick+0xba>
     8fe:	19 c1       	rjmp	.+562    	; 0xb32 <Motor_Tick+0x2ec>
     900:	00 c1       	rjmp	.+512    	; 0xb02 <Motor_Tick+0x2bc>
			if(cnt > 200) {motor_state = LOCK; cnt = 0; motion_sensor = 0;}
			else {motor_state = UNLOCK; cnt = cnt + 1;}
			break;
			
		case LOCK:
			if(cnt > 200) {motor_state = READ_MOTION; cnt = 0; lr = 0; motion_sensor = 0;}
     902:	80 91 47 07 	lds	r24, 0x0747	; 0x800747 <cnt>
     906:	89 3c       	cpi	r24, 0xC9	; 201
     908:	40 f0       	brcs	.+16     	; 0x91a <Motor_Tick+0xd4>
     90a:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <motor_state>
     90e:	10 92 47 07 	sts	0x0747, r1	; 0x800747 <cnt>
     912:	10 92 43 07 	sts	0x0743, r1	; 0x800743 <lr>
			
			
	switch(motor_state)
	{
		case READ_MOTION:
			PORTD = SetBit(PORTD,4,0); //GARAGE LIGHT OFF
     916:	5c 98       	cbi	0x0b, 4	; 11
     918:	07 c0       	rjmp	.+14     	; 0x928 <Motor_Tick+0xe2>
			else {motor_state = UNLOCK; cnt = cnt + 1;}
			break;
			
		case LOCK:
			if(cnt > 200) {motor_state = READ_MOTION; cnt = 0; lr = 0; motion_sensor = 0;}
			else {motor_state = LOCK; cnt = cnt + 1;}
     91a:	8f 5f       	subi	r24, 0xFF	; 255
     91c:	80 93 47 07 	sts	0x0747, r24	; 0x800747 <cnt>
     920:	d2 c1       	rjmp	.+932    	; 0xcc6 <Motor_Tick+0x480>
			break;
		
		default:
			motor_state = READ_MOTION;
     922:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <motor_state>
	switch(motor_state)
	{
		case READ_MOTION:
			PORTD = SetBit(PORTD,4,0); //GARAGE LIGHT OFF
			if (motion_sensor == 0){
				nokia_lcd_clear();
     926:	bf c1       	rjmp	.+894    	; 0xca6 <Motor_Tick+0x460>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     928:	2c de       	rcall	.-936    	; 0x582 <nokia_lcd_clear>
     92a:	01 e4       	ldi	r16, 0x41	; 65
     92c:	19 e0       	ldi	r17, 0x09	; 9
     92e:	83 e2       	ldi	r24, 0x23	; 35
     930:	f8 01       	movw	r30, r16
    nokia_lcd.cursor_y = y;
     932:	80 83       	st	Z, r24
     934:	c2 e4       	ldi	r28, 0x42	; 66
     936:	d9 e0       	ldi	r29, 0x09	; 9
				nokia_lcd_set_cursor(35, 0);
				nokia_lcd_write_string("No", 2);
     938:	18 82       	st	Y, r1
     93a:	62 e0       	ldi	r22, 0x02	; 2
     93c:	8a e0       	ldi	r24, 0x0A	; 10
     93e:	91 e0       	ldi	r25, 0x01	; 1
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     940:	08 df       	rcall	.-496    	; 0x752 <nokia_lcd_write_string>
     942:	8f e0       	ldi	r24, 0x0F	; 15
     944:	f8 01       	movw	r30, r16
    nokia_lcd.cursor_y = y;
     946:	80 83       	st	Z, r24
				nokia_lcd_set_cursor(15, 20);
				nokia_lcd_write_string("Motion", 2);
     948:	84 e1       	ldi	r24, 0x14	; 20
     94a:	88 83       	st	Y, r24
     94c:	62 e0       	ldi	r22, 0x02	; 2
				//nokia_lcd_write_char(motion_sensor + '0', 1);
				//nokia_lcd_write_char(garage_button + '0', 1);
			}
			nokia_lcd_render();
     94e:	8d e0       	ldi	r24, 0x0D	; 13
			break;
			
		case READ_KEY_INIT:
			if((USART_HasReceived(0))){
				bt_check = 1;
     950:	91 e0       	ldi	r25, 0x01	; 1
     952:	ff de       	rcall	.-514    	; 0x752 <nokia_lcd_write_string>
				key = USART_Receive(0);
     954:	10 df       	rcall	.-480    	; 0x776 <nokia_lcd_render>
     956:	c2 c1       	rjmp	.+900    	; 0xcdc <Motor_Tick+0x496>
     958:	c1 e0       	ldi	r28, 0x01	; 1
     95a:	c0 93 46 07 	sts	0x0746, r28	; 0x800746 <bt_check>
				USART_Flush(0);
     95e:	80 e0       	ldi	r24, 0x00	; 0
				checker = 1;
     960:	60 df       	rcall	.-320    	; 0x822 <USART_Receive>
     962:	80 93 9f 09 	sts	0x099F, r24	; 0x80099f <key>
			}
			else{
				bt_check = 0;
     966:	80 e0       	ldi	r24, 0x00	; 0
     968:	3f df       	rcall	.-386    	; 0x7e8 <USART_Flush>
				key = GetKeypadKey();
     96a:	c0 93 45 07 	sts	0x0745, r28	; 0x800745 <checker>
     96e:	0d c0       	rjmp	.+26     	; 0x98a <Motor_Tick+0x144>
				if ((key != '\0')){
     970:	10 92 46 07 	sts	0x0746, r1	; 0x800746 <bt_check>
					checker = 1;
     974:	82 dd       	rcall	.-1276   	; 0x47a <GetKeypadKey>
     976:	80 93 9f 09 	sts	0x099F, r24	; 0x80099f <key>
				}
				else{
					checker = 0;
     97a:	88 23       	and	r24, r24
     97c:	21 f0       	breq	.+8      	; 0x986 <Motor_Tick+0x140>
				}
			}
			
				
			nokia_lcd_clear();
     97e:	81 e0       	ldi	r24, 0x01	; 1
     980:	80 93 45 07 	sts	0x0745, r24	; 0x800745 <checker>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     984:	02 c0       	rjmp	.+4      	; 0x98a <Motor_Tick+0x144>
     986:	10 92 45 07 	sts	0x0745, r1	; 0x800745 <checker>
     98a:	fb dd       	rcall	.-1034   	; 0x582 <nokia_lcd_clear>
     98c:	01 e4       	ldi	r16, 0x41	; 65
     98e:	19 e0       	ldi	r17, 0x09	; 9
    nokia_lcd.cursor_y = y;
     990:	0f 2e       	mov	r0, r31
     992:	fa e0       	ldi	r31, 0x0A	; 10
     994:	ff 2e       	mov	r15, r31
			nokia_lcd_set_cursor(10, 0);
			nokia_lcd_write_string("PASSCODE?", 1);
     996:	f0 2d       	mov	r31, r0
     998:	f8 01       	movw	r30, r16
     99a:	f0 82       	st	Z, r15
     99c:	c2 e4       	ldi	r28, 0x42	; 66
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     99e:	d9 e0       	ldi	r29, 0x09	; 9
    nokia_lcd.cursor_y = y;
     9a0:	18 82       	st	Y, r1
     9a2:	61 e0       	ldi	r22, 0x01	; 1
     9a4:	84 e1       	ldi	r24, 0x14	; 20
     9a6:	91 e0       	ldi	r25, 0x01	; 1
     9a8:	d4 de       	rcall	.-600    	; 0x752 <nokia_lcd_write_string>
			
			nokia_lcd_set_cursor(10, 30);
			nokia_lcd_write_string("Entry: ", 1);
     9aa:	f8 01       	movw	r30, r16
     9ac:	f0 82       	st	Z, r15
     9ae:	0f 2e       	mov	r0, r31
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     9b0:	fe e1       	ldi	r31, 0x1E	; 30
     9b2:	ff 2e       	mov	r15, r31
			nokia_lcd_set_cursor(65, 30);
			nokia_lcd_write_char(key, 1);
     9b4:	f0 2d       	mov	r31, r0
     9b6:	f8 82       	st	Y, r15
     9b8:	61 e0       	ldi	r22, 0x01	; 1
     9ba:	8e e1       	ldi	r24, 0x1E	; 30
			nokia_lcd_render();
     9bc:	91 e0       	ldi	r25, 0x01	; 1
     9be:	c9 de       	rcall	.-622    	; 0x752 <nokia_lcd_write_string>
			break;
     9c0:	81 e4       	ldi	r24, 0x41	; 65
		case READ_KEY_WAIT:
			break;
			
		case READ_KEY_INIT_2:
			if((USART_HasReceived(0))){
				bt_check = 1;
     9c2:	f8 01       	movw	r30, r16
     9c4:	80 83       	st	Z, r24
     9c6:	f8 82       	st	Y, r15
				key2 = USART_Receive(0);
     9c8:	61 e0       	ldi	r22, 0x01	; 1
     9ca:	80 91 9f 09 	lds	r24, 0x099F	; 0x80099f <key>
     9ce:	15 de       	rcall	.-982    	; 0x5fa <nokia_lcd_write_char>
				USART_Flush(0);
     9d0:	d2 de       	rcall	.-604    	; 0x776 <nokia_lcd_render>
     9d2:	84 c1       	rjmp	.+776    	; 0xcdc <Motor_Tick+0x496>
     9d4:	c1 e0       	ldi	r28, 0x01	; 1
				checker2 = 1;
     9d6:	c0 93 46 07 	sts	0x0746, r28	; 0x800746 <bt_check>
     9da:	80 e0       	ldi	r24, 0x00	; 0
			}
			else{
				
				if(bt_check == 1){bt_check = 1;}
     9dc:	22 df       	rcall	.-444    	; 0x822 <USART_Receive>
     9de:	80 93 a4 09 	sts	0x09A4, r24	; 0x8009a4 <key2>
				else{bt_check = 0;}
     9e2:	80 e0       	ldi	r24, 0x00	; 0
     9e4:	01 df       	rcall	.-510    	; 0x7e8 <USART_Flush>
					
				key2 = GetKeypadKey();
     9e6:	c0 93 44 07 	sts	0x0744, r28	; 0x800744 <checker2>
     9ea:	11 c0       	rjmp	.+34     	; 0xa0e <Motor_Tick+0x1c8>
     9ec:	80 91 46 07 	lds	r24, 0x0746	; 0x800746 <bt_check>
				if ((key2 != '\0')){
     9f0:	81 30       	cpi	r24, 0x01	; 1
					checker2 = 1;
     9f2:	11 f0       	breq	.+4      	; 0x9f8 <Motor_Tick+0x1b2>
     9f4:	10 92 46 07 	sts	0x0746, r1	; 0x800746 <bt_check>
     9f8:	40 dd       	rcall	.-1408   	; 0x47a <GetKeypadKey>
				}
				else{
					checker2 = 0;
     9fa:	80 93 a4 09 	sts	0x09A4, r24	; 0x8009a4 <key2>
				}
			}
			
			nokia_lcd_clear();
     9fe:	88 23       	and	r24, r24
     a00:	21 f0       	breq	.+8      	; 0xa0a <Motor_Tick+0x1c4>
     a02:	81 e0       	ldi	r24, 0x01	; 1
     a04:	80 93 44 07 	sts	0x0744, r24	; 0x800744 <checker2>
     a08:	02 c0       	rjmp	.+4      	; 0xa0e <Motor_Tick+0x1c8>
     a0a:	10 92 44 07 	sts	0x0744, r1	; 0x800744 <checker2>
    nokia_lcd.cursor_y = y;
     a0e:	b9 dd       	rcall	.-1166   	; 0x582 <nokia_lcd_clear>
     a10:	01 e4       	ldi	r16, 0x41	; 65
			nokia_lcd_set_cursor(10, 0);
			nokia_lcd_write_string("PASSCODE?", 1);
     a12:	19 e0       	ldi	r17, 0x09	; 9
     a14:	0f 2e       	mov	r0, r31
     a16:	fa e0       	ldi	r31, 0x0A	; 10
     a18:	ff 2e       	mov	r15, r31
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     a1a:	f0 2d       	mov	r31, r0
    nokia_lcd.cursor_y = y;
     a1c:	f8 01       	movw	r30, r16
     a1e:	f0 82       	st	Z, r15
     a20:	c2 e4       	ldi	r28, 0x42	; 66
     a22:	d9 e0       	ldi	r29, 0x09	; 9
     a24:	18 82       	st	Y, r1
			
			nokia_lcd_set_cursor(10, 30);
			nokia_lcd_write_string("Entry: ", 1);
     a26:	61 e0       	ldi	r22, 0x01	; 1
     a28:	84 e1       	ldi	r24, 0x14	; 20
     a2a:	91 e0       	ldi	r25, 0x01	; 1
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     a2c:	92 de       	rcall	.-732    	; 0x752 <nokia_lcd_write_string>
     a2e:	f8 01       	movw	r30, r16
     a30:	f0 82       	st	Z, r15
    nokia_lcd.cursor_y = y;
     a32:	0f 2e       	mov	r0, r31
			nokia_lcd_set_cursor(65, 30);
			nokia_lcd_write_char(key, 1);
     a34:	fe e1       	ldi	r31, 0x1E	; 30
     a36:	ff 2e       	mov	r15, r31
     a38:	f0 2d       	mov	r31, r0
     a3a:	f8 82       	st	Y, r15
     a3c:	61 e0       	ldi	r22, 0x01	; 1
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     a3e:	8e e1       	ldi	r24, 0x1E	; 30
     a40:	91 e0       	ldi	r25, 0x01	; 1
    nokia_lcd.cursor_y = y;
     a42:	87 de       	rcall	.-754    	; 0x752 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(70, 30);
			nokia_lcd_write_char(key2, 1);
     a44:	81 e4       	ldi	r24, 0x41	; 65
     a46:	f8 01       	movw	r30, r16
     a48:	80 83       	st	Z, r24
     a4a:	f8 82       	st	Y, r15
     a4c:	61 e0       	ldi	r22, 0x01	; 1
			nokia_lcd_render();
     a4e:	80 91 9f 09 	lds	r24, 0x099F	; 0x80099f <key>
			break;
     a52:	d3 dd       	rcall	.-1114   	; 0x5fa <nokia_lcd_write_char>
			
			
		case READ_KEY:
			if(((key == '1') && (key2 == '2')) || (bt_check)){ //LOCK = 1 2
     a54:	86 e4       	ldi	r24, 0x46	; 70
     a56:	f8 01       	movw	r30, r16
     a58:	80 83       	st	Z, r24
     a5a:	f8 82       	st	Y, r15
     a5c:	61 e0       	ldi	r22, 0x01	; 1
     a5e:	80 91 a4 09 	lds	r24, 0x09A4	; 0x8009a4 <key2>
				lr = 2;
     a62:	cb dd       	rcall	.-1130   	; 0x5fa <nokia_lcd_write_char>
     a64:	88 de       	rcall	.-752    	; 0x776 <nokia_lcd_render>
     a66:	3a c1       	rjmp	.+628    	; 0xcdc <Motor_Tick+0x496>
     a68:	80 91 a4 09 	lds	r24, 0x09A4	; 0x8009a4 <key2>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     a6c:	82 33       	cpi	r24, 0x32	; 50
     a6e:	21 f0       	breq	.+8      	; 0xa78 <Motor_Tick+0x232>
     a70:	80 91 46 07 	lds	r24, 0x0746	; 0x800746 <bt_check>
    nokia_lcd.cursor_y = y;
     a74:	88 23       	and	r24, r24
     a76:	21 f0       	breq	.+8      	; 0xa80 <Motor_Tick+0x23a>
     a78:	82 e0       	ldi	r24, 0x02	; 2
     a7a:	80 93 43 07 	sts	0x0743, r24	; 0x800743 <lr>
     a7e:	34 c0       	rjmp	.+104    	; 0xae8 <Motor_Tick+0x2a2>
			}
			else{
				nokia_lcd_clear();
				nokia_lcd_set_cursor(0, 10);
				nokia_lcd_write_string("WRONG PASSWORD", 1);
     a80:	80 dd       	rcall	.-1280   	; 0x582 <nokia_lcd_clear>
     a82:	01 e4       	ldi	r16, 0x41	; 65
     a84:	19 e0       	ldi	r17, 0x09	; 9
     a86:	f8 01       	movw	r30, r16
     a88:	10 82       	st	Z, r1
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     a8a:	c2 e4       	ldi	r28, 0x42	; 66
    nokia_lcd.cursor_y = y;
     a8c:	d9 e0       	ldi	r29, 0x09	; 9
				nokia_lcd_set_cursor(0, 20);
				nokia_lcd_write_string("RESTART BOARD", 1);
     a8e:	0f 2e       	mov	r0, r31
     a90:	fa e0       	ldi	r31, 0x0A	; 10
     a92:	ff 2e       	mov	r15, r31
     a94:	f0 2d       	mov	r31, r0
     a96:	f8 82       	st	Y, r15
     a98:	61 e0       	ldi	r22, 0x01	; 1
     a9a:	86 e2       	ldi	r24, 0x26	; 38
     a9c:	91 e0       	ldi	r25, 0x01	; 1
     a9e:	59 de       	rcall	.-846    	; 0x752 <nokia_lcd_write_string>
				nokia_lcd_set_cursor(10, 30);
				nokia_lcd_write_string("Entry: ", 1);
     aa0:	f8 01       	movw	r30, r16
     aa2:	10 82       	st	Z, r1
     aa4:	84 e1       	ldi	r24, 0x14	; 20
     aa6:	88 83       	st	Y, r24
     aa8:	61 e0       	ldi	r22, 0x01	; 1
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     aaa:	85 e3       	ldi	r24, 0x35	; 53
     aac:	91 e0       	ldi	r25, 0x01	; 1
     aae:	51 de       	rcall	.-862    	; 0x752 <nokia_lcd_write_string>
    nokia_lcd.cursor_y = y;
     ab0:	f8 01       	movw	r30, r16
				nokia_lcd_set_cursor(65, 30);
				nokia_lcd_write_char(key, 1);
     ab2:	f0 82       	st	Z, r15
     ab4:	0f 2e       	mov	r0, r31
     ab6:	fe e1       	ldi	r31, 0x1E	; 30
     ab8:	ff 2e       	mov	r15, r31
     aba:	f0 2d       	mov	r31, r0
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     abc:	f8 82       	st	Y, r15
     abe:	61 e0       	ldi	r22, 0x01	; 1
     ac0:	8e e1       	ldi	r24, 0x1E	; 30
    nokia_lcd.cursor_y = y;
     ac2:	91 e0       	ldi	r25, 0x01	; 1
				nokia_lcd_set_cursor(70, 30);
				nokia_lcd_write_char(key2, 1);
     ac4:	46 de       	rcall	.-884    	; 0x752 <nokia_lcd_write_string>
     ac6:	81 e4       	ldi	r24, 0x41	; 65
     ac8:	f8 01       	movw	r30, r16
     aca:	80 83       	st	Z, r24
     acc:	f8 82       	st	Y, r15
				nokia_lcd_render();
     ace:	61 e0       	ldi	r22, 0x01	; 1
     ad0:	80 91 9f 09 	lds	r24, 0x099F	; 0x80099f <key>
			}
			numPhases = 1024; //(90 / 5.625) * 64
     ad4:	92 dd       	rcall	.-1244   	; 0x5fa <nokia_lcd_write_char>
     ad6:	86 e4       	ldi	r24, 0x46	; 70
     ad8:	f8 01       	movw	r30, r16
     ada:	80 83       	st	Z, r24
     adc:	f8 82       	st	Y, r15
     ade:	61 e0       	ldi	r22, 0x01	; 1
     ae0:	80 91 a4 09 	lds	r24, 0x09A4	; 0x8009a4 <key2>
     ae4:	8a dd       	rcall	.-1260   	; 0x5fa <nokia_lcd_write_char>
     ae6:	47 de       	rcall	.-882    	; 0x776 <nokia_lcd_render>
     ae8:	80 e0       	ldi	r24, 0x00	; 0
			break;
     aea:	94 e0       	ldi	r25, 0x04	; 4
		
		case UNLOCK:
			if(lr){
				if (temp < 7) {temp = temp + 1;}
     aec:	a0 e0       	ldi	r26, 0x00	; 0
     aee:	b0 e0       	ldi	r27, 0x00	; 0
     af0:	80 93 a0 09 	sts	0x09A0, r24	; 0x8009a0 <numPhases>
     af4:	90 93 a1 09 	sts	0x09A1, r25	; 0x8009a1 <numPhases+0x1>
     af8:	a0 93 a2 09 	sts	0x09A2, r26	; 0x8009a2 <numPhases+0x2>
				else {temp = 0;}
     afc:	b0 93 a3 09 	sts	0x09A3, r27	; 0x8009a3 <numPhases+0x3>
			
				if((numPhases - 1) == 0)
     b00:	ed c0       	rjmp	.+474    	; 0xcdc <Motor_Tick+0x496>
     b02:	80 91 48 07 	lds	r24, 0x0748	; 0x800748 <temp>
     b06:	87 30       	cpi	r24, 0x07	; 7
     b08:	20 f4       	brcc	.+8      	; 0xb12 <Motor_Tick+0x2cc>
     b0a:	8f 5f       	subi	r24, 0xFF	; 255
     b0c:	80 93 48 07 	sts	0x0748, r24	; 0x800748 <temp>
     b10:	02 c0       	rjmp	.+4      	; 0xb16 <Motor_Tick+0x2d0>
     b12:	10 92 48 07 	sts	0x0748, r1	; 0x800748 <temp>
				{
					lr = 0;
     b16:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <numPhases>
				}
			} 
			if(garage_button == 8){PORTA = (loc[temp] << 4); PORTD = ((0x01 << 4) | PORTD); room = 2;}
     b1a:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <numPhases+0x1>
     b1e:	a0 91 a2 09 	lds	r26, 0x09A2	; 0x8009a2 <numPhases+0x2>
     b22:	b0 91 a3 09 	lds	r27, 0x09A3	; 0x8009a3 <numPhases+0x3>
     b26:	01 97       	sbiw	r24, 0x01	; 1
     b28:	a1 05       	cpc	r26, r1
     b2a:	b1 05       	cpc	r27, r1
     b2c:	11 f4       	brne	.+4      	; 0xb32 <Motor_Tick+0x2ec>
     b2e:	10 92 43 07 	sts	0x0743, r1	; 0x800743 <lr>
     b32:	38 30       	cpi	r19, 0x08	; 8
     b34:	71 f4       	brne	.+28     	; 0xb52 <Motor_Tick+0x30c>
			else{PORTA = loc[temp]; PORTD = SetBit(PORTD,4,0); room = 1;}
     b36:	e0 91 48 07 	lds	r30, 0x0748	; 0x800748 <temp>
     b3a:	f0 e0       	ldi	r31, 0x00	; 0
     b3c:	e0 50       	subi	r30, 0x00	; 0
     b3e:	ff 4f       	sbci	r31, 0xFF	; 255
     b40:	80 81       	ld	r24, Z
     b42:	82 95       	swap	r24
     b44:	80 7f       	andi	r24, 0xF0	; 240
     b46:	82 b9       	out	0x02, r24	; 2
     b48:	5c 9a       	sbi	0x0b, 4	; 11
				
			nokia_lcd_clear();
     b4a:	82 e0       	ldi	r24, 0x02	; 2
     b4c:	80 93 42 07 	sts	0x0742, r24	; 0x800742 <room>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     b50:	0b c0       	rjmp	.+22     	; 0xb68 <Motor_Tick+0x322>
     b52:	e0 91 48 07 	lds	r30, 0x0748	; 0x800748 <temp>
     b56:	f0 e0       	ldi	r31, 0x00	; 0
     b58:	e0 50       	subi	r30, 0x00	; 0
     b5a:	ff 4f       	sbci	r31, 0xFF	; 255
    nokia_lcd.cursor_y = y;
     b5c:	80 81       	ld	r24, Z
     b5e:	82 b9       	out	0x02, r24	; 2
     b60:	5c 98       	cbi	0x0b, 4	; 11
     b62:	81 e0       	ldi	r24, 0x01	; 1
			nokia_lcd_set_cursor(10, 20);
			nokia_lcd_write_string("UNLOCKING!", 1);
     b64:	80 93 42 07 	sts	0x0742, r24	; 0x800742 <room>
     b68:	0c dd       	rcall	.-1512   	; 0x582 <nokia_lcd_clear>
     b6a:	01 e4       	ldi	r16, 0x41	; 65
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     b6c:	19 e0       	ldi	r17, 0x09	; 9
     b6e:	0f 2e       	mov	r0, r31
    nokia_lcd.cursor_y = y;
     b70:	fa e0       	ldi	r31, 0x0A	; 10
     b72:	ff 2e       	mov	r15, r31
     b74:	f0 2d       	mov	r31, r0
     b76:	f8 01       	movw	r30, r16
     b78:	f0 82       	st	Z, r15
			nokia_lcd_set_cursor(10, 30);
			nokia_lcd_write_string("Entry: ", 1);
     b7a:	c2 e4       	ldi	r28, 0x42	; 66
     b7c:	d9 e0       	ldi	r29, 0x09	; 9
     b7e:	84 e1       	ldi	r24, 0x14	; 20
     b80:	88 83       	st	Y, r24
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     b82:	61 e0       	ldi	r22, 0x01	; 1
     b84:	83 e4       	ldi	r24, 0x43	; 67
     b86:	91 e0       	ldi	r25, 0x01	; 1
     b88:	e4 dd       	rcall	.-1080   	; 0x752 <nokia_lcd_write_string>
			nokia_lcd_set_cursor(65, 30);
			nokia_lcd_write_char(key, 1);
     b8a:	f8 01       	movw	r30, r16
     b8c:	f0 82       	st	Z, r15
     b8e:	0f 2e       	mov	r0, r31
     b90:	fe e1       	ldi	r31, 0x1E	; 30
     b92:	ef 2e       	mov	r14, r31
     b94:	f0 2d       	mov	r31, r0
     b96:	e8 82       	st	Y, r14
     b98:	61 e0       	ldi	r22, 0x01	; 1
    nokia_lcd.cursor_y = y;
     b9a:	8e e1       	ldi	r24, 0x1E	; 30
			nokia_lcd_set_cursor(70, 30);
			nokia_lcd_write_char(key2, 1);
     b9c:	91 e0       	ldi	r25, 0x01	; 1
     b9e:	d9 dd       	rcall	.-1102   	; 0x752 <nokia_lcd_write_string>
     ba0:	0f 2e       	mov	r0, r31
     ba2:	f1 e4       	ldi	r31, 0x41	; 65
     ba4:	df 2e       	mov	r13, r31
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     ba6:	f0 2d       	mov	r31, r0
     ba8:	f8 01       	movw	r30, r16
    nokia_lcd.cursor_y = y;
     baa:	d0 82       	st	Z, r13
     bac:	e8 82       	st	Y, r14
     bae:	61 e0       	ldi	r22, 0x01	; 1
     bb0:	80 91 9f 09 	lds	r24, 0x099F	; 0x80099f <key>
			nokia_lcd_set_cursor(10, 40);
			nokia_lcd_write_string("Room: ", 1);
     bb4:	22 dd       	rcall	.-1468   	; 0x5fa <nokia_lcd_write_char>
     bb6:	86 e4       	ldi	r24, 0x46	; 70
     bb8:	f8 01       	movw	r30, r16
     bba:	80 83       	st	Z, r24
     bbc:	e8 82       	st	Y, r14
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     bbe:	61 e0       	ldi	r22, 0x01	; 1
     bc0:	80 91 a4 09 	lds	r24, 0x09A4	; 0x8009a4 <key2>
			nokia_lcd_set_cursor(65, 40);
			nokia_lcd_write_char(room + '0', 1);
     bc4:	1a dd       	rcall	.-1484   	; 0x5fa <nokia_lcd_write_char>
     bc6:	f8 01       	movw	r30, r16
     bc8:	f0 82       	st	Z, r15
     bca:	0f 2e       	mov	r0, r31
     bcc:	f8 e2       	ldi	r31, 0x28	; 40
     bce:	ff 2e       	mov	r15, r31
			nokia_lcd_render();
     bd0:	f0 2d       	mov	r31, r0
     bd2:	f8 82       	st	Y, r15
			break;
     bd4:	61 e0       	ldi	r22, 0x01	; 1
			
		case LOCK:
			if(lr){
				if (temp > 0) {temp = temp - 1;}
     bd6:	8e e4       	ldi	r24, 0x4E	; 78
     bd8:	91 e0       	ldi	r25, 0x01	; 1
     bda:	bb dd       	rcall	.-1162   	; 0x752 <nokia_lcd_write_string>
     bdc:	f8 01       	movw	r30, r16
     bde:	d0 82       	st	Z, r13
     be0:	f8 82       	st	Y, r15
     be2:	80 91 42 07 	lds	r24, 0x0742	; 0x800742 <room>
				else {temp = 7;}
     be6:	61 e0       	ldi	r22, 0x01	; 1
     be8:	80 5d       	subi	r24, 0xD0	; 208
     bea:	07 dd       	rcall	.-1522   	; 0x5fa <nokia_lcd_write_char>
			
				if((numPhases - 1) == 0)
     bec:	c4 dd       	rcall	.-1144   	; 0x776 <nokia_lcd_render>
     bee:	76 c0       	rjmp	.+236    	; 0xcdc <Motor_Tick+0x496>
     bf0:	80 91 48 07 	lds	r24, 0x0748	; 0x800748 <temp>
     bf4:	88 23       	and	r24, r24
     bf6:	21 f0       	breq	.+8      	; 0xc00 <Motor_Tick+0x3ba>
     bf8:	81 50       	subi	r24, 0x01	; 1
     bfa:	80 93 48 07 	sts	0x0748, r24	; 0x800748 <temp>
     bfe:	03 c0       	rjmp	.+6      	; 0xc06 <Motor_Tick+0x3c0>
     c00:	87 e0       	ldi	r24, 0x07	; 7
				{
					lr = 0;
     c02:	80 93 48 07 	sts	0x0748, r24	; 0x800748 <temp>
				}
				
			}
			if(garage_button == 8){PORTA = (loc[temp] << 4); PORTD = ((0x01 << 4) | PORTD); room = 2;}
     c06:	80 91 a0 09 	lds	r24, 0x09A0	; 0x8009a0 <numPhases>
     c0a:	90 91 a1 09 	lds	r25, 0x09A1	; 0x8009a1 <numPhases+0x1>
     c0e:	a0 91 a2 09 	lds	r26, 0x09A2	; 0x8009a2 <numPhases+0x2>
     c12:	b0 91 a3 09 	lds	r27, 0x09A3	; 0x8009a3 <numPhases+0x3>
     c16:	01 97       	sbiw	r24, 0x01	; 1
     c18:	a1 05       	cpc	r26, r1
     c1a:	b1 05       	cpc	r27, r1
     c1c:	11 f4       	brne	.+4      	; 0xc22 <Motor_Tick+0x3dc>
     c1e:	10 92 43 07 	sts	0x0743, r1	; 0x800743 <lr>
     c22:	38 30       	cpi	r19, 0x08	; 8
			else{PORTA = loc[temp]; PORTD = SetBit(PORTD,4,0); room = 1;}
     c24:	71 f4       	brne	.+28     	; 0xc42 <Motor_Tick+0x3fc>
     c26:	e0 91 48 07 	lds	r30, 0x0748	; 0x800748 <temp>
     c2a:	f0 e0       	ldi	r31, 0x00	; 0
     c2c:	e0 50       	subi	r30, 0x00	; 0
     c2e:	ff 4f       	sbci	r31, 0xFF	; 255
     c30:	80 81       	ld	r24, Z
     c32:	82 95       	swap	r24
			
			nokia_lcd_clear();
     c34:	80 7f       	andi	r24, 0xF0	; 240
     c36:	82 b9       	out	0x02, r24	; 2
     c38:	5c 9a       	sbi	0x0b, 4	; 11
     c3a:	82 e0       	ldi	r24, 0x02	; 2
     c3c:	80 93 42 07 	sts	0x0742, r24	; 0x800742 <room>
     c40:	0b c0       	rjmp	.+22     	; 0xc58 <Motor_Tick+0x412>
     c42:	e0 91 48 07 	lds	r30, 0x0748	; 0x800748 <temp>
    nokia_lcd.cursor_y = y;
     c46:	f0 e0       	ldi	r31, 0x00	; 0
     c48:	e0 50       	subi	r30, 0x00	; 0
     c4a:	ff 4f       	sbci	r31, 0xFF	; 255
     c4c:	80 81       	ld	r24, Z
			nokia_lcd_set_cursor(10, 20);
			nokia_lcd_write_string("LOCKING!", 1);
     c4e:	82 b9       	out	0x02, r24	; 2
     c50:	5c 98       	cbi	0x0b, 4	; 11
     c52:	81 e0       	ldi	r24, 0x01	; 1
     c54:	80 93 42 07 	sts	0x0742, r24	; 0x800742 <room>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     c58:	94 dc       	rcall	.-1752   	; 0x582 <nokia_lcd_clear>
     c5a:	01 e4       	ldi	r16, 0x41	; 65
    nokia_lcd.cursor_y = y;
     c5c:	19 e0       	ldi	r17, 0x09	; 9
     c5e:	0f 2e       	mov	r0, r31
     c60:	fa e0       	ldi	r31, 0x0A	; 10
     c62:	ff 2e       	mov	r15, r31
     c64:	f0 2d       	mov	r31, r0
			nokia_lcd_set_cursor(10, 40);
			nokia_lcd_write_string("Room: ", 1);
     c66:	f8 01       	movw	r30, r16
     c68:	f0 82       	st	Z, r15
     c6a:	c2 e4       	ldi	r28, 0x42	; 66
     c6c:	d9 e0       	ldi	r29, 0x09	; 9
     c6e:	84 e1       	ldi	r24, 0x14	; 20
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     c70:	88 83       	st	Y, r24
     c72:	61 e0       	ldi	r22, 0x01	; 1
     c74:	85 e4       	ldi	r24, 0x45	; 69
    nokia_lcd.cursor_y = y;
     c76:	91 e0       	ldi	r25, 0x01	; 1
			nokia_lcd_set_cursor(65, 40);
			nokia_lcd_write_char(room + '0', 1);
     c78:	6c dd       	rcall	.-1320   	; 0x752 <nokia_lcd_write_string>
     c7a:	f8 01       	movw	r30, r16
     c7c:	f0 82       	st	Z, r15
     c7e:	0f 2e       	mov	r0, r31
     c80:	f8 e2       	ldi	r31, 0x28	; 40
     c82:	ff 2e       	mov	r15, r31
			nokia_lcd_render();
     c84:	f0 2d       	mov	r31, r0
     c86:	f8 82       	st	Y, r15
			break;
		
		default:
			break;
	}
}
     c88:	61 e0       	ldi	r22, 0x01	; 1
			
			
	switch(motor_state)
	{
		case READ_MOTION:
			PORTD = SetBit(PORTD,4,0); //GARAGE LIGHT OFF
     c8a:	8e e4       	ldi	r24, 0x4E	; 78
			if (motion_sensor == 0){
     c8c:	91 e0       	ldi	r25, 0x01	; 1
     c8e:	61 dd       	rcall	.-1342   	; 0x752 <nokia_lcd_write_string>
     c90:	81 e4       	ldi	r24, 0x41	; 65
//Functionality - checks if USART has recieved data
//Parameter: usartNum specifies which USART is checked
//Returns: 1 if true else 0
unsigned char USART_HasReceived(unsigned char usartNum)
{
	return (usartNum != 1) ? (UCSR0A & (1 << RXC0)) : (UCSR1A & (1 << RXC1));
     c92:	f8 01       	movw	r30, r16
     c94:	80 83       	st	Z, r24
			}
			nokia_lcd_render();
			break;
			
		case READ_KEY_INIT:
			if((USART_HasReceived(0))){
     c96:	f8 82       	st	Y, r15
     c98:	80 91 42 07 	lds	r24, 0x0742	; 0x800742 <room>
     c9c:	61 e0       	ldi	r22, 0x01	; 1
			nokia_lcd_render();
			break;
			
			
		case READ_KEY:
			if(((key == '1') && (key2 == '2')) || (bt_check)){ //LOCK = 1 2
     c9e:	80 5d       	subi	r24, 0xD0	; 208
     ca0:	ac dc       	rcall	.-1704   	; 0x5fa <nokia_lcd_write_char>
     ca2:	69 dd       	rcall	.-1326   	; 0x776 <nokia_lcd_render>
     ca4:	1b c0       	rjmp	.+54     	; 0xcdc <Motor_Tick+0x496>
     ca6:	5c 98       	cbi	0x0b, 4	; 11
     ca8:	21 11       	cpse	r18, r1
			nokia_lcd_write_char(room + '0', 1);
			nokia_lcd_render();
			break;
			
		case LOCK:
			if(lr){
     caa:	54 ce       	rjmp	.-856    	; 0x954 <Motor_Tick+0x10e>
     cac:	3d ce       	rjmp	.-902    	; 0x928 <Motor_Tick+0xe2>
     cae:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     cb2:	88 23       	and	r24, r24
     cb4:	0c f4       	brge	.+2      	; 0xcb8 <Motor_Tick+0x472>
     cb6:	50 ce       	rjmp	.-864    	; 0x958 <Motor_Tick+0x112>
			
		case READ_KEY_WAIT:
			break;
			
		case READ_KEY_INIT_2:
			if((USART_HasReceived(0))){
     cb8:	5b ce       	rjmp	.-842    	; 0x970 <Motor_Tick+0x12a>
     cba:	80 91 9f 09 	lds	r24, 0x099F	; 0x80099f <key>
     cbe:	81 33       	cpi	r24, 0x31	; 49
			break;
		
		default:
			break;
	}
}
     cc0:	09 f0       	breq	.+2      	; 0xcc4 <Motor_Tick+0x47e>
     cc2:	d6 ce       	rjmp	.-596    	; 0xa70 <Motor_Tick+0x22a>
     cc4:	d1 ce       	rjmp	.-606    	; 0xa68 <Motor_Tick+0x222>
     cc6:	80 91 43 07 	lds	r24, 0x0743	; 0x800743 <lr>
     cca:	81 11       	cpse	r24, r1
     ccc:	91 cf       	rjmp	.-222    	; 0xbf0 <Motor_Tick+0x3aa>
     cce:	a9 cf       	rjmp	.-174    	; 0xc22 <Motor_Tick+0x3dc>
     cd0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     cd4:	88 23       	and	r24, r24
     cd6:	0c f0       	brlt	.+2      	; 0xcda <Motor_Tick+0x494>
     cd8:	89 ce       	rjmp	.-750    	; 0x9ec <Motor_Tick+0x1a6>
     cda:	7c ce       	rjmp	.-776    	; 0x9d4 <Motor_Tick+0x18e>
     cdc:	df 91       	pop	r29
     cde:	cf 91       	pop	r28
     ce0:	1f 91       	pop	r17
     ce2:	0f 91       	pop	r16
     ce4:	ff 90       	pop	r15
     ce6:	ef 90       	pop	r14
     ce8:	df 90       	pop	r13
     cea:	08 95       	ret

00000cec <MotorTask>:
//////////////////////////////////////////////////////////////////////// LOCAL VARIABLES ////////////////////////////////////////////////////////////////////////

enum MotorState {READ_MOTION, READ_KEY_INIT, READ_KEY_WAIT, READ_KEY_INIT_2, READ_KEY, LOCK, UNLOCK} motor_state;

void Motor_Init(){
	motor_state = READ_MOTION;
     cec:	10 92 9d 09 	sts	0x099D, r1	; 0x80099d <motor_state>
{
	Motor_Init();
   for(;;) 
   { 	
	Motor_Tick();
	vTaskDelay(3); 
     cf0:	aa dd       	rcall	.-1196   	; 0x846 <Motor_Tick>
     cf2:	83 e0       	ldi	r24, 0x03	; 3
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	30 d4       	rcall	.+2144   	; 0x1558 <vTaskDelay>
     cf8:	fb cf       	rjmp	.-10     	; 0xcf0 <MotorTask+0x4>

00000cfa <StartSecPulse>:
   } 
}

void StartSecPulse(unsigned portBASE_TYPE Priority)
{
     cfa:	af 92       	push	r10
     cfc:	bf 92       	push	r11
     cfe:	cf 92       	push	r12
     d00:	df 92       	push	r13
     d02:	ef 92       	push	r14
     d04:	ff 92       	push	r15
     d06:	0f 93       	push	r16
	xTaskCreate(MotorTask, (signed portCHAR *)"MotorTask", configMINIMAL_STACK_SIZE, NULL, Priority, NULL );
     d08:	a1 2c       	mov	r10, r1
     d0a:	b1 2c       	mov	r11, r1
     d0c:	c1 2c       	mov	r12, r1
     d0e:	d1 2c       	mov	r13, r1
     d10:	e1 2c       	mov	r14, r1
     d12:	f1 2c       	mov	r15, r1
     d14:	08 2f       	mov	r16, r24
     d16:	20 e0       	ldi	r18, 0x00	; 0
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	45 e5       	ldi	r20, 0x55	; 85
     d1c:	50 e0       	ldi	r21, 0x00	; 0
     d1e:	65 e5       	ldi	r22, 0x55	; 85
     d20:	71 e0       	ldi	r23, 0x01	; 1
     d22:	86 e7       	ldi	r24, 0x76	; 118
     d24:	96 e0       	ldi	r25, 0x06	; 6
     d26:	ae d1       	rcall	.+860    	; 0x1084 <xTaskGenericCreate>
}
     d28:	0f 91       	pop	r16
     d2a:	ff 90       	pop	r15
     d2c:	ef 90       	pop	r14
     d2e:	df 90       	pop	r13
     d30:	cf 90       	pop	r12
     d32:	bf 90       	pop	r11
     d34:	af 90       	pop	r10
     d36:	08 95       	ret

00000d38 <main>:
 
int main(void) 
{
   DDRA = 0xFF; PORTA = 0x00; //stepper
     d38:	8f ef       	ldi	r24, 0xFF	; 255
     d3a:	81 b9       	out	0x01, r24	; 1
     d3c:	12 b8       	out	0x02, r1	; 2
   DDRB = 0xFF; PORTB = 0x00; //NOKIA 5110
     d3e:	84 b9       	out	0x04, r24	; 4
     d40:	15 b8       	out	0x05, r1	; 5
   DDRC = 0xF0, PORTC = 0x0F; //calculator
     d42:	80 ef       	ldi	r24, 0xF0	; 240
     d44:	87 b9       	out	0x07, r24	; 7
     d46:	8f e0       	ldi	r24, 0x0F	; 15
     d48:	88 b9       	out	0x08, r24	; 8
   DDRD = 0xF2; PORTD = 0x0D; //D0 (Rx of Bluetooth), D2 (IR sensor), and D3 (button) inputs and rest outputs for lightbulbs and Tx of Bluetooth
     d4a:	82 ef       	ldi	r24, 0xF2	; 242
     d4c:	8a b9       	out	0x0a, r24	; 10
     d4e:	8d e0       	ldi	r24, 0x0D	; 13
        nokia_lcd.screen[i] = 0x00;
}
  
void nokia_lcd_power(uint8_t on)
{
    write_cmd(on ? 0x20 : 0x24);
     d50:	8b b9       	out	0x0b, r24	; 11
   
   nokia_lcd_init();
   nokia_lcd_power(1);
   initUSART(0);
     d52:	e1 db       	rcall	.-2110   	; 0x516 <nokia_lcd_init>
   
   //Start Tasks  
   StartSecPulse(1);
     d54:	80 e2       	ldi	r24, 0x20	; 32
     d56:	8e db       	rcall	.-2276   	; 0x474 <write_cmd>
     d58:	80 e0       	ldi	r24, 0x00	; 0
    //RunSchedular 
   vTaskStartScheduler();
     d5a:	24 dd       	rcall	.-1464   	; 0x7a4 <initUSART>
     d5c:	81 e0       	ldi	r24, 0x01	; 1
   eeprom_write_byte(0, password)
   password = eeprom_read_byte(0);
   eeprom_update_byte(0, )
   */
   return 0; 
}
     d5e:	cd df       	rcall	.-102    	; 0xcfa <StartSecPulse>
     d60:	84 d2       	rcall	.+1288   	; 0x126a <vTaskStartScheduler>
     d62:	80 e0       	ldi	r24, 0x00	; 0
     d64:	90 e0       	ldi	r25, 0x00	; 0
     d66:	08 95       	ret

00000d68 <pxPortInitialiseStack>:
     d68:	31 e1       	ldi	r19, 0x11	; 17
     d6a:	fc 01       	movw	r30, r24
     d6c:	30 83       	st	Z, r19
     d6e:	31 97       	sbiw	r30, 0x01	; 1
     d70:	22 e2       	ldi	r18, 0x22	; 34
     d72:	20 83       	st	Z, r18
     d74:	31 97       	sbiw	r30, 0x01	; 1
     d76:	a3 e3       	ldi	r26, 0x33	; 51
     d78:	a0 83       	st	Z, r26
     d7a:	31 97       	sbiw	r30, 0x01	; 1
     d7c:	60 83       	st	Z, r22
     d7e:	31 97       	sbiw	r30, 0x01	; 1
     d80:	70 83       	st	Z, r23
     d82:	31 97       	sbiw	r30, 0x01	; 1
     d84:	10 82       	st	Z, r1
     d86:	31 97       	sbiw	r30, 0x01	; 1
     d88:	60 e8       	ldi	r22, 0x80	; 128
     d8a:	60 83       	st	Z, r22
     d8c:	31 97       	sbiw	r30, 0x01	; 1
     d8e:	10 82       	st	Z, r1
     d90:	31 97       	sbiw	r30, 0x01	; 1
     d92:	62 e0       	ldi	r22, 0x02	; 2
     d94:	60 83       	st	Z, r22
     d96:	31 97       	sbiw	r30, 0x01	; 1
     d98:	63 e0       	ldi	r22, 0x03	; 3
     d9a:	60 83       	st	Z, r22
     d9c:	31 97       	sbiw	r30, 0x01	; 1
     d9e:	64 e0       	ldi	r22, 0x04	; 4
     da0:	60 83       	st	Z, r22
     da2:	31 97       	sbiw	r30, 0x01	; 1
     da4:	65 e0       	ldi	r22, 0x05	; 5
     da6:	60 83       	st	Z, r22
     da8:	31 97       	sbiw	r30, 0x01	; 1
     daa:	66 e0       	ldi	r22, 0x06	; 6
     dac:	60 83       	st	Z, r22
     dae:	31 97       	sbiw	r30, 0x01	; 1
     db0:	67 e0       	ldi	r22, 0x07	; 7
     db2:	60 83       	st	Z, r22
     db4:	31 97       	sbiw	r30, 0x01	; 1
     db6:	68 e0       	ldi	r22, 0x08	; 8
     db8:	60 83       	st	Z, r22
     dba:	31 97       	sbiw	r30, 0x01	; 1
     dbc:	69 e0       	ldi	r22, 0x09	; 9
     dbe:	60 83       	st	Z, r22
     dc0:	31 97       	sbiw	r30, 0x01	; 1
     dc2:	60 e1       	ldi	r22, 0x10	; 16
     dc4:	60 83       	st	Z, r22
     dc6:	31 97       	sbiw	r30, 0x01	; 1
     dc8:	30 83       	st	Z, r19
     dca:	31 97       	sbiw	r30, 0x01	; 1
     dcc:	32 e1       	ldi	r19, 0x12	; 18
     dce:	30 83       	st	Z, r19
     dd0:	31 97       	sbiw	r30, 0x01	; 1
     dd2:	33 e1       	ldi	r19, 0x13	; 19
     dd4:	30 83       	st	Z, r19
     dd6:	31 97       	sbiw	r30, 0x01	; 1
     dd8:	34 e1       	ldi	r19, 0x14	; 20
     dda:	30 83       	st	Z, r19
     ddc:	31 97       	sbiw	r30, 0x01	; 1
     dde:	35 e1       	ldi	r19, 0x15	; 21
     de0:	30 83       	st	Z, r19
     de2:	31 97       	sbiw	r30, 0x01	; 1
     de4:	36 e1       	ldi	r19, 0x16	; 22
     de6:	30 83       	st	Z, r19
     de8:	31 97       	sbiw	r30, 0x01	; 1
     dea:	37 e1       	ldi	r19, 0x17	; 23
     dec:	30 83       	st	Z, r19
     dee:	31 97       	sbiw	r30, 0x01	; 1
     df0:	38 e1       	ldi	r19, 0x18	; 24
     df2:	30 83       	st	Z, r19
     df4:	31 97       	sbiw	r30, 0x01	; 1
     df6:	39 e1       	ldi	r19, 0x19	; 25
     df8:	30 83       	st	Z, r19
     dfa:	31 97       	sbiw	r30, 0x01	; 1
     dfc:	30 e2       	ldi	r19, 0x20	; 32
     dfe:	30 83       	st	Z, r19
     e00:	31 97       	sbiw	r30, 0x01	; 1
     e02:	31 e2       	ldi	r19, 0x21	; 33
     e04:	30 83       	st	Z, r19
     e06:	31 97       	sbiw	r30, 0x01	; 1
     e08:	20 83       	st	Z, r18
     e0a:	31 97       	sbiw	r30, 0x01	; 1
     e0c:	23 e2       	ldi	r18, 0x23	; 35
     e0e:	20 83       	st	Z, r18
     e10:	31 97       	sbiw	r30, 0x01	; 1
     e12:	40 83       	st	Z, r20
     e14:	31 97       	sbiw	r30, 0x01	; 1
     e16:	50 83       	st	Z, r21
     e18:	31 97       	sbiw	r30, 0x01	; 1
     e1a:	26 e2       	ldi	r18, 0x26	; 38
     e1c:	20 83       	st	Z, r18
     e1e:	31 97       	sbiw	r30, 0x01	; 1
     e20:	27 e2       	ldi	r18, 0x27	; 39
     e22:	20 83       	st	Z, r18
     e24:	31 97       	sbiw	r30, 0x01	; 1
     e26:	28 e2       	ldi	r18, 0x28	; 40
     e28:	20 83       	st	Z, r18
     e2a:	31 97       	sbiw	r30, 0x01	; 1
     e2c:	29 e2       	ldi	r18, 0x29	; 41
     e2e:	20 83       	st	Z, r18
     e30:	31 97       	sbiw	r30, 0x01	; 1
     e32:	20 e3       	ldi	r18, 0x30	; 48
     e34:	20 83       	st	Z, r18
     e36:	31 97       	sbiw	r30, 0x01	; 1
     e38:	21 e3       	ldi	r18, 0x31	; 49
     e3a:	20 83       	st	Z, r18
     e3c:	86 97       	sbiw	r24, 0x26	; 38
     e3e:	08 95       	ret

00000e40 <xPortStartScheduler>:
     e40:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     e44:	8c e7       	ldi	r24, 0x7C	; 124
     e46:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     e4a:	8b e0       	ldi	r24, 0x0B	; 11
     e4c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     e50:	ef e6       	ldi	r30, 0x6F	; 111
     e52:	f0 e0       	ldi	r31, 0x00	; 0
     e54:	80 81       	ld	r24, Z
     e56:	82 60       	ori	r24, 0x02	; 2
     e58:	80 83       	st	Z, r24
     e5a:	a0 91 9b 09 	lds	r26, 0x099B	; 0x80099b <pxCurrentTCB>
     e5e:	b0 91 9c 09 	lds	r27, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
     e62:	cd 91       	ld	r28, X+
     e64:	cd bf       	out	0x3d, r28	; 61
     e66:	dd 91       	ld	r29, X+
     e68:	de bf       	out	0x3e, r29	; 62
     e6a:	ff 91       	pop	r31
     e6c:	ef 91       	pop	r30
     e6e:	df 91       	pop	r29
     e70:	cf 91       	pop	r28
     e72:	bf 91       	pop	r27
     e74:	af 91       	pop	r26
     e76:	9f 91       	pop	r25
     e78:	8f 91       	pop	r24
     e7a:	7f 91       	pop	r23
     e7c:	6f 91       	pop	r22
     e7e:	5f 91       	pop	r21
     e80:	4f 91       	pop	r20
     e82:	3f 91       	pop	r19
     e84:	2f 91       	pop	r18
     e86:	1f 91       	pop	r17
     e88:	0f 91       	pop	r16
     e8a:	ff 90       	pop	r15
     e8c:	ef 90       	pop	r14
     e8e:	df 90       	pop	r13
     e90:	cf 90       	pop	r12
     e92:	bf 90       	pop	r11
     e94:	af 90       	pop	r10
     e96:	9f 90       	pop	r9
     e98:	8f 90       	pop	r8
     e9a:	7f 90       	pop	r7
     e9c:	6f 90       	pop	r6
     e9e:	5f 90       	pop	r5
     ea0:	4f 90       	pop	r4
     ea2:	3f 90       	pop	r3
     ea4:	2f 90       	pop	r2
     ea6:	1f 90       	pop	r1
     ea8:	0f 90       	pop	r0
     eaa:	0f be       	out	0x3f, r0	; 63
     eac:	0f 90       	pop	r0
     eae:	08 95       	ret
     eb0:	81 e0       	ldi	r24, 0x01	; 1
     eb2:	08 95       	ret

00000eb4 <vPortYield>:
     eb4:	0f 92       	push	r0
     eb6:	0f b6       	in	r0, 0x3f	; 63
     eb8:	f8 94       	cli
     eba:	0f 92       	push	r0
     ebc:	1f 92       	push	r1
     ebe:	11 24       	eor	r1, r1
     ec0:	2f 92       	push	r2
     ec2:	3f 92       	push	r3
     ec4:	4f 92       	push	r4
     ec6:	5f 92       	push	r5
     ec8:	6f 92       	push	r6
     eca:	7f 92       	push	r7
     ecc:	8f 92       	push	r8
     ece:	9f 92       	push	r9
     ed0:	af 92       	push	r10
     ed2:	bf 92       	push	r11
     ed4:	cf 92       	push	r12
     ed6:	df 92       	push	r13
     ed8:	ef 92       	push	r14
     eda:	ff 92       	push	r15
     edc:	0f 93       	push	r16
     ede:	1f 93       	push	r17
     ee0:	2f 93       	push	r18
     ee2:	3f 93       	push	r19
     ee4:	4f 93       	push	r20
     ee6:	5f 93       	push	r21
     ee8:	6f 93       	push	r22
     eea:	7f 93       	push	r23
     eec:	8f 93       	push	r24
     eee:	9f 93       	push	r25
     ef0:	af 93       	push	r26
     ef2:	bf 93       	push	r27
     ef4:	cf 93       	push	r28
     ef6:	df 93       	push	r29
     ef8:	ef 93       	push	r30
     efa:	ff 93       	push	r31
     efc:	a0 91 9b 09 	lds	r26, 0x099B	; 0x80099b <pxCurrentTCB>
     f00:	b0 91 9c 09 	lds	r27, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
     f04:	0d b6       	in	r0, 0x3d	; 61
     f06:	0d 92       	st	X+, r0
     f08:	0e b6       	in	r0, 0x3e	; 62
     f0a:	0d 92       	st	X+, r0
     f0c:	7a d3       	rcall	.+1780   	; 0x1602 <vTaskSwitchContext>
     f0e:	a0 91 9b 09 	lds	r26, 0x099B	; 0x80099b <pxCurrentTCB>
     f12:	b0 91 9c 09 	lds	r27, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
     f16:	cd 91       	ld	r28, X+
     f18:	cd bf       	out	0x3d, r28	; 61
     f1a:	dd 91       	ld	r29, X+
     f1c:	de bf       	out	0x3e, r29	; 62
     f1e:	ff 91       	pop	r31
     f20:	ef 91       	pop	r30
     f22:	df 91       	pop	r29
     f24:	cf 91       	pop	r28
     f26:	bf 91       	pop	r27
     f28:	af 91       	pop	r26
     f2a:	9f 91       	pop	r25
     f2c:	8f 91       	pop	r24
     f2e:	7f 91       	pop	r23
     f30:	6f 91       	pop	r22
     f32:	5f 91       	pop	r21
     f34:	4f 91       	pop	r20
     f36:	3f 91       	pop	r19
     f38:	2f 91       	pop	r18
     f3a:	1f 91       	pop	r17
     f3c:	0f 91       	pop	r16
     f3e:	ff 90       	pop	r15
     f40:	ef 90       	pop	r14
     f42:	df 90       	pop	r13
     f44:	cf 90       	pop	r12
     f46:	bf 90       	pop	r11
     f48:	af 90       	pop	r10
     f4a:	9f 90       	pop	r9
     f4c:	8f 90       	pop	r8
     f4e:	7f 90       	pop	r7
     f50:	6f 90       	pop	r6
     f52:	5f 90       	pop	r5
     f54:	4f 90       	pop	r4
     f56:	3f 90       	pop	r3
     f58:	2f 90       	pop	r2
     f5a:	1f 90       	pop	r1
     f5c:	0f 90       	pop	r0
     f5e:	0f be       	out	0x3f, r0	; 63
     f60:	0f 90       	pop	r0
     f62:	08 95       	ret

00000f64 <vPortYieldFromTick>:
     f64:	0f 92       	push	r0
     f66:	0f b6       	in	r0, 0x3f	; 63
     f68:	f8 94       	cli
     f6a:	0f 92       	push	r0
     f6c:	1f 92       	push	r1
     f6e:	11 24       	eor	r1, r1
     f70:	2f 92       	push	r2
     f72:	3f 92       	push	r3
     f74:	4f 92       	push	r4
     f76:	5f 92       	push	r5
     f78:	6f 92       	push	r6
     f7a:	7f 92       	push	r7
     f7c:	8f 92       	push	r8
     f7e:	9f 92       	push	r9
     f80:	af 92       	push	r10
     f82:	bf 92       	push	r11
     f84:	cf 92       	push	r12
     f86:	df 92       	push	r13
     f88:	ef 92       	push	r14
     f8a:	ff 92       	push	r15
     f8c:	0f 93       	push	r16
     f8e:	1f 93       	push	r17
     f90:	2f 93       	push	r18
     f92:	3f 93       	push	r19
     f94:	4f 93       	push	r20
     f96:	5f 93       	push	r21
     f98:	6f 93       	push	r22
     f9a:	7f 93       	push	r23
     f9c:	8f 93       	push	r24
     f9e:	9f 93       	push	r25
     fa0:	af 93       	push	r26
     fa2:	bf 93       	push	r27
     fa4:	cf 93       	push	r28
     fa6:	df 93       	push	r29
     fa8:	ef 93       	push	r30
     faa:	ff 93       	push	r31
     fac:	a0 91 9b 09 	lds	r26, 0x099B	; 0x80099b <pxCurrentTCB>
     fb0:	b0 91 9c 09 	lds	r27, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
     fb4:	0d b6       	in	r0, 0x3d	; 61
     fb6:	0d 92       	st	X+, r0
     fb8:	0e b6       	in	r0, 0x3e	; 62
     fba:	0d 92       	st	X+, r0
     fbc:	85 d1       	rcall	.+778    	; 0x12c8 <vTaskIncrementTick>
     fbe:	21 d3       	rcall	.+1602   	; 0x1602 <vTaskSwitchContext>
     fc0:	a0 91 9b 09 	lds	r26, 0x099B	; 0x80099b <pxCurrentTCB>
     fc4:	b0 91 9c 09 	lds	r27, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
     fc8:	cd 91       	ld	r28, X+
     fca:	cd bf       	out	0x3d, r28	; 61
     fcc:	dd 91       	ld	r29, X+
     fce:	de bf       	out	0x3e, r29	; 62
     fd0:	ff 91       	pop	r31
     fd2:	ef 91       	pop	r30
     fd4:	df 91       	pop	r29
     fd6:	cf 91       	pop	r28
     fd8:	bf 91       	pop	r27
     fda:	af 91       	pop	r26
     fdc:	9f 91       	pop	r25
     fde:	8f 91       	pop	r24
     fe0:	7f 91       	pop	r23
     fe2:	6f 91       	pop	r22
     fe4:	5f 91       	pop	r21
     fe6:	4f 91       	pop	r20
     fe8:	3f 91       	pop	r19
     fea:	2f 91       	pop	r18
     fec:	1f 91       	pop	r17
     fee:	0f 91       	pop	r16
     ff0:	ff 90       	pop	r15
     ff2:	ef 90       	pop	r14
     ff4:	df 90       	pop	r13
     ff6:	cf 90       	pop	r12
     ff8:	bf 90       	pop	r11
     ffa:	af 90       	pop	r10
     ffc:	9f 90       	pop	r9
     ffe:	8f 90       	pop	r8
    1000:	7f 90       	pop	r7
    1002:	6f 90       	pop	r6
    1004:	5f 90       	pop	r5
    1006:	4f 90       	pop	r4
    1008:	3f 90       	pop	r3
    100a:	2f 90       	pop	r2
    100c:	1f 90       	pop	r1
    100e:	0f 90       	pop	r0
    1010:	0f be       	out	0x3f, r0	; 63
    1012:	0f 90       	pop	r0
    1014:	08 95       	ret

00001016 <__vector_13>:
    1016:	a6 df       	rcall	.-180    	; 0xf64 <vPortYieldFromTick>
    1018:	18 95       	reti

0000101a <prvAddCurrentTaskToDelayedList>:
    101a:	cf 93       	push	r28
    101c:	df 93       	push	r29
    101e:	ec 01       	movw	r28, r24
    1020:	e0 91 9b 09 	lds	r30, 0x099B	; 0x80099b <pxCurrentTCB>
    1024:	f0 91 9c 09 	lds	r31, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
    1028:	93 83       	std	Z+3, r25	; 0x03
    102a:	82 83       	std	Z+2, r24	; 0x02
    102c:	80 91 4b 09 	lds	r24, 0x094B	; 0x80094b <xTickCount>
    1030:	90 91 4c 09 	lds	r25, 0x094C	; 0x80094c <xTickCount+0x1>
    1034:	c8 17       	cp	r28, r24
    1036:	d9 07       	cpc	r29, r25
    1038:	60 f4       	brcc	.+24     	; 0x1052 <prvAddCurrentTaskToDelayedList+0x38>
    103a:	60 91 9b 09 	lds	r22, 0x099B	; 0x80099b <pxCurrentTCB>
    103e:	70 91 9c 09 	lds	r23, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
    1042:	80 91 61 09 	lds	r24, 0x0961	; 0x800961 <pxOverflowDelayedTaskList>
    1046:	90 91 62 09 	lds	r25, 0x0962	; 0x800962 <pxOverflowDelayedTaskList+0x1>
    104a:	6e 5f       	subi	r22, 0xFE	; 254
    104c:	7f 4f       	sbci	r23, 0xFF	; 255
    104e:	93 d9       	rcall	.-3290   	; 0x376 <vListInsert>
    1050:	16 c0       	rjmp	.+44     	; 0x107e <prvAddCurrentTaskToDelayedList+0x64>
    1052:	60 91 9b 09 	lds	r22, 0x099B	; 0x80099b <pxCurrentTCB>
    1056:	70 91 9c 09 	lds	r23, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
    105a:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <pxDelayedTaskList>
    105e:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <pxDelayedTaskList+0x1>
    1062:	6e 5f       	subi	r22, 0xFE	; 254
    1064:	7f 4f       	sbci	r23, 0xFF	; 255
    1066:	87 d9       	rcall	.-3314   	; 0x376 <vListInsert>
    1068:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <xNextTaskUnblockTime>
    106c:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <xNextTaskUnblockTime+0x1>
    1070:	c8 17       	cp	r28, r24
    1072:	d9 07       	cpc	r29, r25
    1074:	20 f4       	brcc	.+8      	; 0x107e <prvAddCurrentTaskToDelayedList+0x64>
    1076:	d0 93 09 01 	sts	0x0109, r29	; 0x800109 <xNextTaskUnblockTime+0x1>
    107a:	c0 93 08 01 	sts	0x0108, r28	; 0x800108 <xNextTaskUnblockTime>
    107e:	df 91       	pop	r29
    1080:	cf 91       	pop	r28
    1082:	08 95       	ret

00001084 <xTaskGenericCreate>:
    1084:	4f 92       	push	r4
    1086:	5f 92       	push	r5
    1088:	6f 92       	push	r6
    108a:	7f 92       	push	r7
    108c:	8f 92       	push	r8
    108e:	9f 92       	push	r9
    1090:	af 92       	push	r10
    1092:	bf 92       	push	r11
    1094:	cf 92       	push	r12
    1096:	df 92       	push	r13
    1098:	ef 92       	push	r14
    109a:	ff 92       	push	r15
    109c:	0f 93       	push	r16
    109e:	1f 93       	push	r17
    10a0:	cf 93       	push	r28
    10a2:	df 93       	push	r29
    10a4:	5c 01       	movw	r10, r24
    10a6:	4b 01       	movw	r8, r22
    10a8:	3a 01       	movw	r6, r20
    10aa:	29 01       	movw	r4, r18
    10ac:	81 e2       	ldi	r24, 0x21	; 33
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	03 d9       	rcall	.-3578   	; 0x2b8 <pvPortMalloc>
    10b2:	ec 01       	movw	r28, r24
    10b4:	89 2b       	or	r24, r25
    10b6:	09 f4       	brne	.+2      	; 0x10ba <xTaskGenericCreate+0x36>
    10b8:	c6 c0       	rjmp	.+396    	; 0x1246 <xTaskGenericCreate+0x1c2>
    10ba:	c1 14       	cp	r12, r1
    10bc:	d1 04       	cpc	r13, r1
    10be:	09 f0       	breq	.+2      	; 0x10c2 <xTaskGenericCreate+0x3e>
    10c0:	be c0       	rjmp	.+380    	; 0x123e <xTaskGenericCreate+0x1ba>
    10c2:	c3 01       	movw	r24, r6
    10c4:	f9 d8       	rcall	.-3598   	; 0x2b8 <pvPortMalloc>
    10c6:	98 8f       	std	Y+24, r25	; 0x18
    10c8:	8f 8b       	std	Y+23, r24	; 0x17
    10ca:	00 97       	sbiw	r24, 0x00	; 0
    10cc:	19 f4       	brne	.+6      	; 0x10d4 <xTaskGenericCreate+0x50>
    10ce:	ce 01       	movw	r24, r28
    10d0:	18 d9       	rcall	.-3536   	; 0x302 <vPortFree>
    10d2:	b9 c0       	rjmp	.+370    	; 0x1246 <xTaskGenericCreate+0x1c2>
    10d4:	a3 01       	movw	r20, r6
    10d6:	65 ea       	ldi	r22, 0xA5	; 165
    10d8:	70 e0       	ldi	r23, 0x00	; 0
    10da:	14 d3       	rcall	.+1576   	; 0x1704 <memset>
    10dc:	93 01       	movw	r18, r6
    10de:	21 50       	subi	r18, 0x01	; 1
    10e0:	31 09       	sbc	r19, r1
    10e2:	8f 89       	ldd	r24, Y+23	; 0x17
    10e4:	98 8d       	ldd	r25, Y+24	; 0x18
    10e6:	3c 01       	movw	r6, r24
    10e8:	62 0e       	add	r6, r18
    10ea:	73 1e       	adc	r7, r19
    10ec:	48 e0       	ldi	r20, 0x08	; 8
    10ee:	50 e0       	ldi	r21, 0x00	; 0
    10f0:	b4 01       	movw	r22, r8
    10f2:	ce 01       	movw	r24, r28
    10f4:	49 96       	adiw	r24, 0x19	; 25
    10f6:	0d d3       	rcall	.+1562   	; 0x1712 <strncpy>
    10f8:	18 a2       	std	Y+32, r1	; 0x20
    10fa:	10 2f       	mov	r17, r16
    10fc:	04 30       	cpi	r16, 0x04	; 4
    10fe:	08 f0       	brcs	.+2      	; 0x1102 <xTaskGenericCreate+0x7e>
    1100:	13 e0       	ldi	r17, 0x03	; 3
    1102:	1e 8b       	std	Y+22, r17	; 0x16
    1104:	6e 01       	movw	r12, r28
    1106:	82 e0       	ldi	r24, 0x02	; 2
    1108:	c8 0e       	add	r12, r24
    110a:	d1 1c       	adc	r13, r1
    110c:	c6 01       	movw	r24, r12
    110e:	08 d9       	rcall	.-3568   	; 0x320 <vListInitialiseItem>
    1110:	ce 01       	movw	r24, r28
    1112:	0c 96       	adiw	r24, 0x0c	; 12
    1114:	05 d9       	rcall	.-3574   	; 0x320 <vListInitialiseItem>
    1116:	d9 87       	std	Y+9, r29	; 0x09
    1118:	c8 87       	std	Y+8, r28	; 0x08
    111a:	84 e0       	ldi	r24, 0x04	; 4
    111c:	90 e0       	ldi	r25, 0x00	; 0
    111e:	81 1b       	sub	r24, r17
    1120:	91 09       	sbc	r25, r1
    1122:	9d 87       	std	Y+13, r25	; 0x0d
    1124:	8c 87       	std	Y+12, r24	; 0x0c
    1126:	db 8b       	std	Y+19, r29	; 0x13
    1128:	ca 8b       	std	Y+18, r28	; 0x12
    112a:	a2 01       	movw	r20, r4
    112c:	b5 01       	movw	r22, r10
    112e:	c3 01       	movw	r24, r6
    1130:	1b de       	rcall	.-970    	; 0xd68 <pxPortInitialiseStack>
    1132:	99 83       	std	Y+1, r25	; 0x01
    1134:	88 83       	st	Y, r24
    1136:	e1 14       	cp	r14, r1
    1138:	f1 04       	cpc	r15, r1
    113a:	19 f0       	breq	.+6      	; 0x1142 <xTaskGenericCreate+0xbe>
    113c:	f7 01       	movw	r30, r14
    113e:	d1 83       	std	Z+1, r29	; 0x01
    1140:	c0 83       	st	Z, r28
    1142:	0f b6       	in	r0, 0x3f	; 63
    1144:	f8 94       	cli
    1146:	0f 92       	push	r0
    1148:	80 91 4d 09 	lds	r24, 0x094D	; 0x80094d <uxCurrentNumberOfTasks>
    114c:	8f 5f       	subi	r24, 0xFF	; 255
    114e:	80 93 4d 09 	sts	0x094D, r24	; 0x80094d <uxCurrentNumberOfTasks>
    1152:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <pxCurrentTCB>
    1156:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
    115a:	89 2b       	or	r24, r25
    115c:	69 f5       	brne	.+90     	; 0x11b8 <xTaskGenericCreate+0x134>
    115e:	d0 93 9c 09 	sts	0x099C, r29	; 0x80099c <pxCurrentTCB+0x1>
    1162:	c0 93 9b 09 	sts	0x099B, r28	; 0x80099b <pxCurrentTCB>
    1166:	80 91 4d 09 	lds	r24, 0x094D	; 0x80094d <uxCurrentNumberOfTasks>
    116a:	81 30       	cpi	r24, 0x01	; 1
    116c:	a1 f5       	brne	.+104    	; 0x11d6 <xTaskGenericCreate+0x152>
    116e:	87 e7       	ldi	r24, 0x77	; 119
    1170:	99 e0       	ldi	r25, 0x09	; 9
    1172:	c8 d8       	rcall	.-3696   	; 0x304 <vListInitialise>
    1174:	80 e8       	ldi	r24, 0x80	; 128
    1176:	99 e0       	ldi	r25, 0x09	; 9
    1178:	c5 d8       	rcall	.-3702   	; 0x304 <vListInitialise>
    117a:	89 e8       	ldi	r24, 0x89	; 137
    117c:	99 e0       	ldi	r25, 0x09	; 9
    117e:	c2 d8       	rcall	.-3708   	; 0x304 <vListInitialise>
    1180:	82 e9       	ldi	r24, 0x92	; 146
    1182:	99 e0       	ldi	r25, 0x09	; 9
    1184:	bf d8       	rcall	.-3714   	; 0x304 <vListInitialise>
    1186:	8e e6       	ldi	r24, 0x6E	; 110
    1188:	99 e0       	ldi	r25, 0x09	; 9
    118a:	bc d8       	rcall	.-3720   	; 0x304 <vListInitialise>
    118c:	85 e6       	ldi	r24, 0x65	; 101
    118e:	99 e0       	ldi	r25, 0x09	; 9
    1190:	b9 d8       	rcall	.-3726   	; 0x304 <vListInitialise>
    1192:	88 e5       	ldi	r24, 0x58	; 88
    1194:	99 e0       	ldi	r25, 0x09	; 9
    1196:	b6 d8       	rcall	.-3732   	; 0x304 <vListInitialise>
    1198:	8f e4       	ldi	r24, 0x4F	; 79
    119a:	99 e0       	ldi	r25, 0x09	; 9
    119c:	b3 d8       	rcall	.-3738   	; 0x304 <vListInitialise>
    119e:	8e e6       	ldi	r24, 0x6E	; 110
    11a0:	99 e0       	ldi	r25, 0x09	; 9
    11a2:	90 93 64 09 	sts	0x0964, r25	; 0x800964 <pxDelayedTaskList+0x1>
    11a6:	80 93 63 09 	sts	0x0963, r24	; 0x800963 <pxDelayedTaskList>
    11aa:	85 e6       	ldi	r24, 0x65	; 101
    11ac:	99 e0       	ldi	r25, 0x09	; 9
    11ae:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <pxOverflowDelayedTaskList+0x1>
    11b2:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <pxOverflowDelayedTaskList>
    11b6:	0f c0       	rjmp	.+30     	; 0x11d6 <xTaskGenericCreate+0x152>
    11b8:	80 91 48 09 	lds	r24, 0x0948	; 0x800948 <xSchedulerRunning>
    11bc:	81 11       	cpse	r24, r1
    11be:	0b c0       	rjmp	.+22     	; 0x11d6 <xTaskGenericCreate+0x152>
    11c0:	e0 91 9b 09 	lds	r30, 0x099B	; 0x80099b <pxCurrentTCB>
    11c4:	f0 91 9c 09 	lds	r31, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
    11c8:	86 89       	ldd	r24, Z+22	; 0x16
    11ca:	08 17       	cp	r16, r24
    11cc:	20 f0       	brcs	.+8      	; 0x11d6 <xTaskGenericCreate+0x152>
    11ce:	d0 93 9c 09 	sts	0x099C, r29	; 0x80099c <pxCurrentTCB+0x1>
    11d2:	c0 93 9b 09 	sts	0x099B, r28	; 0x80099b <pxCurrentTCB>
    11d6:	8e 89       	ldd	r24, Y+22	; 0x16
    11d8:	90 91 4a 09 	lds	r25, 0x094A	; 0x80094a <uxTopUsedPriority>
    11dc:	98 17       	cp	r25, r24
    11de:	10 f4       	brcc	.+4      	; 0x11e4 <xTaskGenericCreate+0x160>
    11e0:	80 93 4a 09 	sts	0x094A, r24	; 0x80094a <uxTopUsedPriority>
    11e4:	90 91 43 09 	lds	r25, 0x0943	; 0x800943 <uxTaskNumber>
    11e8:	9f 5f       	subi	r25, 0xFF	; 255
    11ea:	90 93 43 09 	sts	0x0943, r25	; 0x800943 <uxTaskNumber>
    11ee:	90 91 49 09 	lds	r25, 0x0949	; 0x800949 <uxTopReadyPriority>
    11f2:	98 17       	cp	r25, r24
    11f4:	10 f4       	brcc	.+4      	; 0x11fa <xTaskGenericCreate+0x176>
    11f6:	80 93 49 09 	sts	0x0949, r24	; 0x800949 <uxTopReadyPriority>
    11fa:	90 e0       	ldi	r25, 0x00	; 0
    11fc:	9c 01       	movw	r18, r24
    11fe:	22 0f       	add	r18, r18
    1200:	33 1f       	adc	r19, r19
    1202:	22 0f       	add	r18, r18
    1204:	33 1f       	adc	r19, r19
    1206:	22 0f       	add	r18, r18
    1208:	33 1f       	adc	r19, r19
    120a:	82 0f       	add	r24, r18
    120c:	93 1f       	adc	r25, r19
    120e:	b6 01       	movw	r22, r12
    1210:	89 58       	subi	r24, 0x89	; 137
    1212:	96 4f       	sbci	r25, 0xF6	; 246
    1214:	89 d8       	rcall	.-3822   	; 0x328 <vListInsertEnd>
    1216:	0f 90       	pop	r0
    1218:	0f be       	out	0x3f, r0	; 63
    121a:	80 91 48 09 	lds	r24, 0x0948	; 0x800948 <xSchedulerRunning>
    121e:	88 23       	and	r24, r24
    1220:	51 f0       	breq	.+20     	; 0x1236 <xTaskGenericCreate+0x1b2>
    1222:	e0 91 9b 09 	lds	r30, 0x099B	; 0x80099b <pxCurrentTCB>
    1226:	f0 91 9c 09 	lds	r31, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
    122a:	86 89       	ldd	r24, Z+22	; 0x16
    122c:	80 17       	cp	r24, r16
    122e:	28 f4       	brcc	.+10     	; 0x123a <xTaskGenericCreate+0x1b6>
    1230:	41 de       	rcall	.-894    	; 0xeb4 <vPortYield>
    1232:	81 e0       	ldi	r24, 0x01	; 1
    1234:	09 c0       	rjmp	.+18     	; 0x1248 <xTaskGenericCreate+0x1c4>
    1236:	81 e0       	ldi	r24, 0x01	; 1
    1238:	07 c0       	rjmp	.+14     	; 0x1248 <xTaskGenericCreate+0x1c4>
    123a:	81 e0       	ldi	r24, 0x01	; 1
    123c:	05 c0       	rjmp	.+10     	; 0x1248 <xTaskGenericCreate+0x1c4>
    123e:	d8 8e       	std	Y+24, r13	; 0x18
    1240:	cf 8a       	std	Y+23, r12	; 0x17
    1242:	c6 01       	movw	r24, r12
    1244:	47 cf       	rjmp	.-370    	; 0x10d4 <xTaskGenericCreate+0x50>
    1246:	8f ef       	ldi	r24, 0xFF	; 255
    1248:	df 91       	pop	r29
    124a:	cf 91       	pop	r28
    124c:	1f 91       	pop	r17
    124e:	0f 91       	pop	r16
    1250:	ff 90       	pop	r15
    1252:	ef 90       	pop	r14
    1254:	df 90       	pop	r13
    1256:	cf 90       	pop	r12
    1258:	bf 90       	pop	r11
    125a:	af 90       	pop	r10
    125c:	9f 90       	pop	r9
    125e:	8f 90       	pop	r8
    1260:	7f 90       	pop	r7
    1262:	6f 90       	pop	r6
    1264:	5f 90       	pop	r5
    1266:	4f 90       	pop	r4
    1268:	08 95       	ret

0000126a <vTaskStartScheduler>:
    126a:	af 92       	push	r10
    126c:	bf 92       	push	r11
    126e:	cf 92       	push	r12
    1270:	df 92       	push	r13
    1272:	ef 92       	push	r14
    1274:	ff 92       	push	r15
    1276:	0f 93       	push	r16
    1278:	a1 2c       	mov	r10, r1
    127a:	b1 2c       	mov	r11, r1
    127c:	c1 2c       	mov	r12, r1
    127e:	d1 2c       	mov	r13, r1
    1280:	e1 2c       	mov	r14, r1
    1282:	f1 2c       	mov	r15, r1
    1284:	00 e0       	ldi	r16, 0x00	; 0
    1286:	20 e0       	ldi	r18, 0x00	; 0
    1288:	30 e0       	ldi	r19, 0x00	; 0
    128a:	45 e5       	ldi	r20, 0x55	; 85
    128c:	50 e0       	ldi	r21, 0x00	; 0
    128e:	6f e5       	ldi	r22, 0x5F	; 95
    1290:	71 e0       	ldi	r23, 0x01	; 1
    1292:	88 ec       	ldi	r24, 0xC8	; 200
    1294:	9a e0       	ldi	r25, 0x0A	; 10
    1296:	f6 de       	rcall	.-532    	; 0x1084 <xTaskGenericCreate>
    1298:	81 30       	cpi	r24, 0x01	; 1
    129a:	41 f4       	brne	.+16     	; 0x12ac <vTaskStartScheduler+0x42>
    129c:	f8 94       	cli
    129e:	80 93 48 09 	sts	0x0948, r24	; 0x800948 <xSchedulerRunning>
    12a2:	10 92 4c 09 	sts	0x094C, r1	; 0x80094c <xTickCount+0x1>
    12a6:	10 92 4b 09 	sts	0x094B, r1	; 0x80094b <xTickCount>
    12aa:	ca dd       	rcall	.-1132   	; 0xe40 <xPortStartScheduler>
    12ac:	0f 91       	pop	r16
    12ae:	ff 90       	pop	r15
    12b0:	ef 90       	pop	r14
    12b2:	df 90       	pop	r13
    12b4:	cf 90       	pop	r12
    12b6:	bf 90       	pop	r11
    12b8:	af 90       	pop	r10
    12ba:	08 95       	ret

000012bc <vTaskSuspendAll>:
    12bc:	80 91 47 09 	lds	r24, 0x0947	; 0x800947 <uxSchedulerSuspended>
    12c0:	8f 5f       	subi	r24, 0xFF	; 255
    12c2:	80 93 47 09 	sts	0x0947, r24	; 0x800947 <uxSchedulerSuspended>
    12c6:	08 95       	ret

000012c8 <vTaskIncrementTick>:
    12c8:	0f 93       	push	r16
    12ca:	1f 93       	push	r17
    12cc:	cf 93       	push	r28
    12ce:	df 93       	push	r29
    12d0:	80 91 47 09 	lds	r24, 0x0947	; 0x800947 <uxSchedulerSuspended>
    12d4:	81 11       	cpse	r24, r1
    12d6:	b2 c0       	rjmp	.+356    	; 0x143c <vTaskIncrementTick+0x174>
    12d8:	80 91 4b 09 	lds	r24, 0x094B	; 0x80094b <xTickCount>
    12dc:	90 91 4c 09 	lds	r25, 0x094C	; 0x80094c <xTickCount+0x1>
    12e0:	01 96       	adiw	r24, 0x01	; 1
    12e2:	90 93 4c 09 	sts	0x094C, r25	; 0x80094c <xTickCount+0x1>
    12e6:	80 93 4b 09 	sts	0x094B, r24	; 0x80094b <xTickCount>
    12ea:	80 91 4b 09 	lds	r24, 0x094B	; 0x80094b <xTickCount>
    12ee:	90 91 4c 09 	lds	r25, 0x094C	; 0x80094c <xTickCount+0x1>
    12f2:	89 2b       	or	r24, r25
    12f4:	99 f5       	brne	.+102    	; 0x135c <vTaskIncrementTick+0x94>
    12f6:	80 91 63 09 	lds	r24, 0x0963	; 0x800963 <pxDelayedTaskList>
    12fa:	90 91 64 09 	lds	r25, 0x0964	; 0x800964 <pxDelayedTaskList+0x1>
    12fe:	20 91 61 09 	lds	r18, 0x0961	; 0x800961 <pxOverflowDelayedTaskList>
    1302:	30 91 62 09 	lds	r19, 0x0962	; 0x800962 <pxOverflowDelayedTaskList+0x1>
    1306:	30 93 64 09 	sts	0x0964, r19	; 0x800964 <pxDelayedTaskList+0x1>
    130a:	20 93 63 09 	sts	0x0963, r18	; 0x800963 <pxDelayedTaskList>
    130e:	90 93 62 09 	sts	0x0962, r25	; 0x800962 <pxOverflowDelayedTaskList+0x1>
    1312:	80 93 61 09 	sts	0x0961, r24	; 0x800961 <pxOverflowDelayedTaskList>
    1316:	80 91 44 09 	lds	r24, 0x0944	; 0x800944 <xNumOfOverflows>
    131a:	8f 5f       	subi	r24, 0xFF	; 255
    131c:	80 93 44 09 	sts	0x0944, r24	; 0x800944 <xNumOfOverflows>
    1320:	e0 91 63 09 	lds	r30, 0x0963	; 0x800963 <pxDelayedTaskList>
    1324:	f0 91 64 09 	lds	r31, 0x0964	; 0x800964 <pxDelayedTaskList+0x1>
    1328:	80 81       	ld	r24, Z
    132a:	81 11       	cpse	r24, r1
    132c:	07 c0       	rjmp	.+14     	; 0x133c <vTaskIncrementTick+0x74>
    132e:	8f ef       	ldi	r24, 0xFF	; 255
    1330:	9f ef       	ldi	r25, 0xFF	; 255
    1332:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <xNextTaskUnblockTime+0x1>
    1336:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <xNextTaskUnblockTime>
    133a:	10 c0       	rjmp	.+32     	; 0x135c <vTaskIncrementTick+0x94>
    133c:	e0 91 63 09 	lds	r30, 0x0963	; 0x800963 <pxDelayedTaskList>
    1340:	f0 91 64 09 	lds	r31, 0x0964	; 0x800964 <pxDelayedTaskList+0x1>
    1344:	05 80       	ldd	r0, Z+5	; 0x05
    1346:	f6 81       	ldd	r31, Z+6	; 0x06
    1348:	e0 2d       	mov	r30, r0
    134a:	06 80       	ldd	r0, Z+6	; 0x06
    134c:	f7 81       	ldd	r31, Z+7	; 0x07
    134e:	e0 2d       	mov	r30, r0
    1350:	82 81       	ldd	r24, Z+2	; 0x02
    1352:	93 81       	ldd	r25, Z+3	; 0x03
    1354:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <xNextTaskUnblockTime+0x1>
    1358:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <xNextTaskUnblockTime>
    135c:	20 91 4b 09 	lds	r18, 0x094B	; 0x80094b <xTickCount>
    1360:	30 91 4c 09 	lds	r19, 0x094C	; 0x80094c <xTickCount+0x1>
    1364:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <xNextTaskUnblockTime>
    1368:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <xNextTaskUnblockTime+0x1>
    136c:	28 17       	cp	r18, r24
    136e:	39 07       	cpc	r19, r25
    1370:	08 f4       	brcc	.+2      	; 0x1374 <vTaskIncrementTick+0xac>
    1372:	69 c0       	rjmp	.+210    	; 0x1446 <vTaskIncrementTick+0x17e>
    1374:	e0 91 63 09 	lds	r30, 0x0963	; 0x800963 <pxDelayedTaskList>
    1378:	f0 91 64 09 	lds	r31, 0x0964	; 0x800964 <pxDelayedTaskList+0x1>
    137c:	80 81       	ld	r24, Z
    137e:	88 23       	and	r24, r24
    1380:	99 f0       	breq	.+38     	; 0x13a8 <vTaskIncrementTick+0xe0>
    1382:	e0 91 63 09 	lds	r30, 0x0963	; 0x800963 <pxDelayedTaskList>
    1386:	f0 91 64 09 	lds	r31, 0x0964	; 0x800964 <pxDelayedTaskList+0x1>
    138a:	05 80       	ldd	r0, Z+5	; 0x05
    138c:	f6 81       	ldd	r31, Z+6	; 0x06
    138e:	e0 2d       	mov	r30, r0
    1390:	c6 81       	ldd	r28, Z+6	; 0x06
    1392:	d7 81       	ldd	r29, Z+7	; 0x07
    1394:	8a 81       	ldd	r24, Y+2	; 0x02
    1396:	9b 81       	ldd	r25, Y+3	; 0x03
    1398:	20 91 4b 09 	lds	r18, 0x094B	; 0x80094b <xTickCount>
    139c:	30 91 4c 09 	lds	r19, 0x094C	; 0x80094c <xTickCount+0x1>
    13a0:	28 17       	cp	r18, r24
    13a2:	39 07       	cpc	r19, r25
    13a4:	f8 f4       	brcc	.+62     	; 0x13e4 <vTaskIncrementTick+0x11c>
    13a6:	19 c0       	rjmp	.+50     	; 0x13da <vTaskIncrementTick+0x112>
    13a8:	8f ef       	ldi	r24, 0xFF	; 255
    13aa:	9f ef       	ldi	r25, 0xFF	; 255
    13ac:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <xNextTaskUnblockTime+0x1>
    13b0:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <xNextTaskUnblockTime>
    13b4:	48 c0       	rjmp	.+144    	; 0x1446 <vTaskIncrementTick+0x17e>
    13b6:	e0 91 63 09 	lds	r30, 0x0963	; 0x800963 <pxDelayedTaskList>
    13ba:	f0 91 64 09 	lds	r31, 0x0964	; 0x800964 <pxDelayedTaskList+0x1>
    13be:	05 80       	ldd	r0, Z+5	; 0x05
    13c0:	f6 81       	ldd	r31, Z+6	; 0x06
    13c2:	e0 2d       	mov	r30, r0
    13c4:	c6 81       	ldd	r28, Z+6	; 0x06
    13c6:	d7 81       	ldd	r29, Z+7	; 0x07
    13c8:	8a 81       	ldd	r24, Y+2	; 0x02
    13ca:	9b 81       	ldd	r25, Y+3	; 0x03
    13cc:	20 91 4b 09 	lds	r18, 0x094B	; 0x80094b <xTickCount>
    13d0:	30 91 4c 09 	lds	r19, 0x094C	; 0x80094c <xTickCount+0x1>
    13d4:	28 17       	cp	r18, r24
    13d6:	39 07       	cpc	r19, r25
    13d8:	28 f4       	brcc	.+10     	; 0x13e4 <vTaskIncrementTick+0x11c>
    13da:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <xNextTaskUnblockTime+0x1>
    13de:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <xNextTaskUnblockTime>
    13e2:	31 c0       	rjmp	.+98     	; 0x1446 <vTaskIncrementTick+0x17e>
    13e4:	8e 01       	movw	r16, r28
    13e6:	0e 5f       	subi	r16, 0xFE	; 254
    13e8:	1f 4f       	sbci	r17, 0xFF	; 255
    13ea:	c8 01       	movw	r24, r16
    13ec:	0e 94 f6 01 	call	0x3ec	; 0x3ec <vListRemove>
    13f0:	8c 89       	ldd	r24, Y+20	; 0x14
    13f2:	9d 89       	ldd	r25, Y+21	; 0x15
    13f4:	89 2b       	or	r24, r25
    13f6:	21 f0       	breq	.+8      	; 0x1400 <vTaskIncrementTick+0x138>
    13f8:	ce 01       	movw	r24, r28
    13fa:	0c 96       	adiw	r24, 0x0c	; 12
    13fc:	0e 94 f6 01 	call	0x3ec	; 0x3ec <vListRemove>
    1400:	8e 89       	ldd	r24, Y+22	; 0x16
    1402:	90 91 49 09 	lds	r25, 0x0949	; 0x800949 <uxTopReadyPriority>
    1406:	98 17       	cp	r25, r24
    1408:	10 f4       	brcc	.+4      	; 0x140e <vTaskIncrementTick+0x146>
    140a:	80 93 49 09 	sts	0x0949, r24	; 0x800949 <uxTopReadyPriority>
    140e:	90 e0       	ldi	r25, 0x00	; 0
    1410:	9c 01       	movw	r18, r24
    1412:	22 0f       	add	r18, r18
    1414:	33 1f       	adc	r19, r19
    1416:	22 0f       	add	r18, r18
    1418:	33 1f       	adc	r19, r19
    141a:	22 0f       	add	r18, r18
    141c:	33 1f       	adc	r19, r19
    141e:	82 0f       	add	r24, r18
    1420:	93 1f       	adc	r25, r19
    1422:	b8 01       	movw	r22, r16
    1424:	89 58       	subi	r24, 0x89	; 137
    1426:	96 4f       	sbci	r25, 0xF6	; 246
    1428:	0e 94 94 01 	call	0x328	; 0x328 <vListInsertEnd>
    142c:	e0 91 63 09 	lds	r30, 0x0963	; 0x800963 <pxDelayedTaskList>
    1430:	f0 91 64 09 	lds	r31, 0x0964	; 0x800964 <pxDelayedTaskList+0x1>
    1434:	80 81       	ld	r24, Z
    1436:	81 11       	cpse	r24, r1
    1438:	be cf       	rjmp	.-132    	; 0x13b6 <vTaskIncrementTick+0xee>
    143a:	b6 cf       	rjmp	.-148    	; 0x13a8 <vTaskIncrementTick+0xe0>
    143c:	80 91 46 09 	lds	r24, 0x0946	; 0x800946 <uxMissedTicks>
    1440:	8f 5f       	subi	r24, 0xFF	; 255
    1442:	80 93 46 09 	sts	0x0946, r24	; 0x800946 <uxMissedTicks>
    1446:	df 91       	pop	r29
    1448:	cf 91       	pop	r28
    144a:	1f 91       	pop	r17
    144c:	0f 91       	pop	r16
    144e:	08 95       	ret

00001450 <xTaskResumeAll>:
    1450:	cf 92       	push	r12
    1452:	df 92       	push	r13
    1454:	ef 92       	push	r14
    1456:	ff 92       	push	r15
    1458:	0f 93       	push	r16
    145a:	1f 93       	push	r17
    145c:	cf 93       	push	r28
    145e:	df 93       	push	r29
    1460:	0f b6       	in	r0, 0x3f	; 63
    1462:	f8 94       	cli
    1464:	0f 92       	push	r0
    1466:	80 91 47 09 	lds	r24, 0x0947	; 0x800947 <uxSchedulerSuspended>
    146a:	81 50       	subi	r24, 0x01	; 1
    146c:	80 93 47 09 	sts	0x0947, r24	; 0x800947 <uxSchedulerSuspended>
    1470:	80 91 47 09 	lds	r24, 0x0947	; 0x800947 <uxSchedulerSuspended>
    1474:	81 11       	cpse	r24, r1
    1476:	62 c0       	rjmp	.+196    	; 0x153c <xTaskResumeAll+0xec>
    1478:	80 91 4d 09 	lds	r24, 0x094D	; 0x80094d <uxCurrentNumberOfTasks>
    147c:	81 11       	cpse	r24, r1
    147e:	32 c0       	rjmp	.+100    	; 0x14e4 <xTaskResumeAll+0x94>
    1480:	60 c0       	rjmp	.+192    	; 0x1542 <xTaskResumeAll+0xf2>
    1482:	d7 01       	movw	r26, r14
    1484:	15 96       	adiw	r26, 0x05	; 5
    1486:	ed 91       	ld	r30, X+
    1488:	fc 91       	ld	r31, X
    148a:	16 97       	sbiw	r26, 0x06	; 6
    148c:	c6 81       	ldd	r28, Z+6	; 0x06
    148e:	d7 81       	ldd	r29, Z+7	; 0x07
    1490:	ce 01       	movw	r24, r28
    1492:	0c 96       	adiw	r24, 0x0c	; 12
    1494:	0e 94 f6 01 	call	0x3ec	; 0x3ec <vListRemove>
    1498:	8e 01       	movw	r16, r28
    149a:	0e 5f       	subi	r16, 0xFE	; 254
    149c:	1f 4f       	sbci	r17, 0xFF	; 255
    149e:	c8 01       	movw	r24, r16
    14a0:	0e 94 f6 01 	call	0x3ec	; 0x3ec <vListRemove>
    14a4:	8e 89       	ldd	r24, Y+22	; 0x16
    14a6:	90 91 49 09 	lds	r25, 0x0949	; 0x800949 <uxTopReadyPriority>
    14aa:	98 17       	cp	r25, r24
    14ac:	10 f4       	brcc	.+4      	; 0x14b2 <xTaskResumeAll+0x62>
    14ae:	80 93 49 09 	sts	0x0949, r24	; 0x800949 <uxTopReadyPriority>
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	9c 01       	movw	r18, r24
    14b6:	22 0f       	add	r18, r18
    14b8:	33 1f       	adc	r19, r19
    14ba:	22 0f       	add	r18, r18
    14bc:	33 1f       	adc	r19, r19
    14be:	22 0f       	add	r18, r18
    14c0:	33 1f       	adc	r19, r19
    14c2:	82 0f       	add	r24, r18
    14c4:	93 1f       	adc	r25, r19
    14c6:	b8 01       	movw	r22, r16
    14c8:	89 58       	subi	r24, 0x89	; 137
    14ca:	96 4f       	sbci	r25, 0xF6	; 246
    14cc:	0e 94 94 01 	call	0x328	; 0x328 <vListInsertEnd>
    14d0:	e0 91 9b 09 	lds	r30, 0x099B	; 0x80099b <pxCurrentTCB>
    14d4:	f0 91 9c 09 	lds	r31, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
    14d8:	9e 89       	ldd	r25, Y+22	; 0x16
    14da:	86 89       	ldd	r24, Z+22	; 0x16
    14dc:	98 17       	cp	r25, r24
    14de:	58 f0       	brcs	.+22     	; 0x14f6 <xTaskResumeAll+0xa6>
    14e0:	dc 2c       	mov	r13, r12
    14e2:	09 c0       	rjmp	.+18     	; 0x14f6 <xTaskResumeAll+0xa6>
    14e4:	d1 2c       	mov	r13, r1
    14e6:	0f 2e       	mov	r0, r31
    14e8:	f8 e5       	ldi	r31, 0x58	; 88
    14ea:	ef 2e       	mov	r14, r31
    14ec:	f9 e0       	ldi	r31, 0x09	; 9
    14ee:	ff 2e       	mov	r15, r31
    14f0:	f0 2d       	mov	r31, r0
    14f2:	cc 24       	eor	r12, r12
    14f4:	c3 94       	inc	r12
    14f6:	f7 01       	movw	r30, r14
    14f8:	80 81       	ld	r24, Z
    14fa:	81 11       	cpse	r24, r1
    14fc:	c2 cf       	rjmp	.-124    	; 0x1482 <xTaskResumeAll+0x32>
    14fe:	80 91 46 09 	lds	r24, 0x0946	; 0x800946 <uxMissedTicks>
    1502:	88 23       	and	r24, r24
    1504:	79 f0       	breq	.+30     	; 0x1524 <xTaskResumeAll+0xd4>
    1506:	80 91 46 09 	lds	r24, 0x0946	; 0x800946 <uxMissedTicks>
    150a:	88 23       	and	r24, r24
    150c:	91 f0       	breq	.+36     	; 0x1532 <xTaskResumeAll+0xe2>
    150e:	dc de       	rcall	.-584    	; 0x12c8 <vTaskIncrementTick>
    1510:	80 91 46 09 	lds	r24, 0x0946	; 0x800946 <uxMissedTicks>
    1514:	81 50       	subi	r24, 0x01	; 1
    1516:	80 93 46 09 	sts	0x0946, r24	; 0x800946 <uxMissedTicks>
    151a:	80 91 46 09 	lds	r24, 0x0946	; 0x800946 <uxMissedTicks>
    151e:	81 11       	cpse	r24, r1
    1520:	f6 cf       	rjmp	.-20     	; 0x150e <xTaskResumeAll+0xbe>
    1522:	07 c0       	rjmp	.+14     	; 0x1532 <xTaskResumeAll+0xe2>
    1524:	f1 e0       	ldi	r31, 0x01	; 1
    1526:	df 16       	cp	r13, r31
    1528:	21 f0       	breq	.+8      	; 0x1532 <xTaskResumeAll+0xe2>
    152a:	80 91 45 09 	lds	r24, 0x0945	; 0x800945 <xMissedYield>
    152e:	81 30       	cpi	r24, 0x01	; 1
    1530:	39 f4       	brne	.+14     	; 0x1540 <xTaskResumeAll+0xf0>
    1532:	10 92 45 09 	sts	0x0945, r1	; 0x800945 <xMissedYield>
    1536:	be dc       	rcall	.-1668   	; 0xeb4 <vPortYield>
    1538:	81 e0       	ldi	r24, 0x01	; 1
    153a:	03 c0       	rjmp	.+6      	; 0x1542 <xTaskResumeAll+0xf2>
    153c:	80 e0       	ldi	r24, 0x00	; 0
    153e:	01 c0       	rjmp	.+2      	; 0x1542 <xTaskResumeAll+0xf2>
    1540:	80 e0       	ldi	r24, 0x00	; 0
    1542:	0f 90       	pop	r0
    1544:	0f be       	out	0x3f, r0	; 63
    1546:	df 91       	pop	r29
    1548:	cf 91       	pop	r28
    154a:	1f 91       	pop	r17
    154c:	0f 91       	pop	r16
    154e:	ff 90       	pop	r15
    1550:	ef 90       	pop	r14
    1552:	df 90       	pop	r13
    1554:	cf 90       	pop	r12
    1556:	08 95       	ret

00001558 <vTaskDelay>:
    1558:	cf 93       	push	r28
    155a:	df 93       	push	r29
    155c:	ec 01       	movw	r28, r24
    155e:	89 2b       	or	r24, r25
    1560:	99 f0       	breq	.+38     	; 0x1588 <vTaskDelay+0x30>
    1562:	ac de       	rcall	.-680    	; 0x12bc <vTaskSuspendAll>
    1564:	80 91 4b 09 	lds	r24, 0x094B	; 0x80094b <xTickCount>
    1568:	90 91 4c 09 	lds	r25, 0x094C	; 0x80094c <xTickCount+0x1>
    156c:	c8 0f       	add	r28, r24
    156e:	d9 1f       	adc	r29, r25
    1570:	80 91 9b 09 	lds	r24, 0x099B	; 0x80099b <pxCurrentTCB>
    1574:	90 91 9c 09 	lds	r25, 0x099C	; 0x80099c <pxCurrentTCB+0x1>
    1578:	02 96       	adiw	r24, 0x02	; 2
    157a:	0e 94 f6 01 	call	0x3ec	; 0x3ec <vListRemove>
    157e:	ce 01       	movw	r24, r28
    1580:	4c dd       	rcall	.-1384   	; 0x101a <prvAddCurrentTaskToDelayedList>
    1582:	66 df       	rcall	.-308    	; 0x1450 <xTaskResumeAll>
    1584:	81 11       	cpse	r24, r1
    1586:	01 c0       	rjmp	.+2      	; 0x158a <vTaskDelay+0x32>
    1588:	95 dc       	rcall	.-1750   	; 0xeb4 <vPortYield>
    158a:	df 91       	pop	r29
    158c:	cf 91       	pop	r28
    158e:	08 95       	ret

00001590 <prvIdleTask>:
    1590:	0f 2e       	mov	r0, r31
    1592:	ff e4       	ldi	r31, 0x4F	; 79
    1594:	ef 2e       	mov	r14, r31
    1596:	f9 e0       	ldi	r31, 0x09	; 9
    1598:	ff 2e       	mov	r15, r31
    159a:	f0 2d       	mov	r31, r0
    159c:	c7 e7       	ldi	r28, 0x77	; 119
    159e:	d9 e0       	ldi	r29, 0x09	; 9
    15a0:	80 91 4e 09 	lds	r24, 0x094E	; 0x80094e <uxTasksDeleted>
    15a4:	88 23       	and	r24, r24
    15a6:	41 f1       	breq	.+80     	; 0x15f8 <prvIdleTask+0x68>
    15a8:	89 de       	rcall	.-750    	; 0x12bc <vTaskSuspendAll>
    15aa:	d7 01       	movw	r26, r14
    15ac:	1c 91       	ld	r17, X
    15ae:	50 df       	rcall	.-352    	; 0x1450 <xTaskResumeAll>
    15b0:	11 23       	and	r17, r17
    15b2:	11 f1       	breq	.+68     	; 0x15f8 <prvIdleTask+0x68>
    15b4:	0f b6       	in	r0, 0x3f	; 63
    15b6:	f8 94       	cli
    15b8:	0f 92       	push	r0
    15ba:	d7 01       	movw	r26, r14
    15bc:	15 96       	adiw	r26, 0x05	; 5
    15be:	ed 91       	ld	r30, X+
    15c0:	fc 91       	ld	r31, X
    15c2:	16 97       	sbiw	r26, 0x06	; 6
    15c4:	06 81       	ldd	r16, Z+6	; 0x06
    15c6:	17 81       	ldd	r17, Z+7	; 0x07
    15c8:	c8 01       	movw	r24, r16
    15ca:	02 96       	adiw	r24, 0x02	; 2
    15cc:	0e 94 f6 01 	call	0x3ec	; 0x3ec <vListRemove>
    15d0:	80 91 4d 09 	lds	r24, 0x094D	; 0x80094d <uxCurrentNumberOfTasks>
    15d4:	81 50       	subi	r24, 0x01	; 1
    15d6:	80 93 4d 09 	sts	0x094D, r24	; 0x80094d <uxCurrentNumberOfTasks>
    15da:	80 91 4e 09 	lds	r24, 0x094E	; 0x80094e <uxTasksDeleted>
    15de:	81 50       	subi	r24, 0x01	; 1
    15e0:	80 93 4e 09 	sts	0x094E, r24	; 0x80094e <uxTasksDeleted>
    15e4:	0f 90       	pop	r0
    15e6:	0f be       	out	0x3f, r0	; 63
    15e8:	f8 01       	movw	r30, r16
    15ea:	87 89       	ldd	r24, Z+23	; 0x17
    15ec:	90 8d       	ldd	r25, Z+24	; 0x18
    15ee:	0e 94 81 01 	call	0x302	; 0x302 <vPortFree>
    15f2:	c8 01       	movw	r24, r16
    15f4:	0e 94 81 01 	call	0x302	; 0x302 <vPortFree>
    15f8:	88 81       	ld	r24, Y
    15fa:	82 30       	cpi	r24, 0x02	; 2
    15fc:	88 f2       	brcs	.-94     	; 0x15a0 <prvIdleTask+0x10>
    15fe:	5a dc       	rcall	.-1868   	; 0xeb4 <vPortYield>
    1600:	cf cf       	rjmp	.-98     	; 0x15a0 <prvIdleTask+0x10>

00001602 <vTaskSwitchContext>:
    1602:	80 91 47 09 	lds	r24, 0x0947	; 0x800947 <uxSchedulerSuspended>
    1606:	81 11       	cpse	r24, r1
    1608:	13 c0       	rjmp	.+38     	; 0x1630 <vTaskSwitchContext+0x2e>
    160a:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <uxTopReadyPriority>
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	fc 01       	movw	r30, r24
    1612:	ee 0f       	add	r30, r30
    1614:	ff 1f       	adc	r31, r31
    1616:	ee 0f       	add	r30, r30
    1618:	ff 1f       	adc	r31, r31
    161a:	ee 0f       	add	r30, r30
    161c:	ff 1f       	adc	r31, r31
    161e:	8e 0f       	add	r24, r30
    1620:	9f 1f       	adc	r25, r31
    1622:	fc 01       	movw	r30, r24
    1624:	e9 58       	subi	r30, 0x89	; 137
    1626:	f6 4f       	sbci	r31, 0xF6	; 246
    1628:	80 81       	ld	r24, Z
    162a:	88 23       	and	r24, r24
    162c:	29 f0       	breq	.+10     	; 0x1638 <vTaskSwitchContext+0x36>
    162e:	1b c0       	rjmp	.+54     	; 0x1666 <vTaskSwitchContext+0x64>
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	80 93 45 09 	sts	0x0945, r24	; 0x800945 <xMissedYield>
    1636:	08 95       	ret
    1638:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <uxTopReadyPriority>
    163c:	81 50       	subi	r24, 0x01	; 1
    163e:	80 93 49 09 	sts	0x0949, r24	; 0x800949 <uxTopReadyPriority>
    1642:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <uxTopReadyPriority>
    1646:	90 e0       	ldi	r25, 0x00	; 0
    1648:	fc 01       	movw	r30, r24
    164a:	ee 0f       	add	r30, r30
    164c:	ff 1f       	adc	r31, r31
    164e:	ee 0f       	add	r30, r30
    1650:	ff 1f       	adc	r31, r31
    1652:	ee 0f       	add	r30, r30
    1654:	ff 1f       	adc	r31, r31
    1656:	8e 0f       	add	r24, r30
    1658:	9f 1f       	adc	r25, r31
    165a:	fc 01       	movw	r30, r24
    165c:	e9 58       	subi	r30, 0x89	; 137
    165e:	f6 4f       	sbci	r31, 0xF6	; 246
    1660:	80 81       	ld	r24, Z
    1662:	88 23       	and	r24, r24
    1664:	49 f3       	breq	.-46     	; 0x1638 <vTaskSwitchContext+0x36>
    1666:	80 91 49 09 	lds	r24, 0x0949	; 0x800949 <uxTopReadyPriority>
    166a:	90 e0       	ldi	r25, 0x00	; 0
    166c:	9c 01       	movw	r18, r24
    166e:	22 0f       	add	r18, r18
    1670:	33 1f       	adc	r19, r19
    1672:	22 0f       	add	r18, r18
    1674:	33 1f       	adc	r19, r19
    1676:	22 0f       	add	r18, r18
    1678:	33 1f       	adc	r19, r19
    167a:	28 0f       	add	r18, r24
    167c:	39 1f       	adc	r19, r25
    167e:	d9 01       	movw	r26, r18
    1680:	a9 58       	subi	r26, 0x89	; 137
    1682:	b6 4f       	sbci	r27, 0xF6	; 246
    1684:	11 96       	adiw	r26, 0x01	; 1
    1686:	ed 91       	ld	r30, X+
    1688:	fc 91       	ld	r31, X
    168a:	12 97       	sbiw	r26, 0x02	; 2
    168c:	02 80       	ldd	r0, Z+2	; 0x02
    168e:	f3 81       	ldd	r31, Z+3	; 0x03
    1690:	e0 2d       	mov	r30, r0
    1692:	12 96       	adiw	r26, 0x02	; 2
    1694:	fc 93       	st	X, r31
    1696:	ee 93       	st	-X, r30
    1698:	11 97       	sbiw	r26, 0x01	; 1
    169a:	26 58       	subi	r18, 0x86	; 134
    169c:	36 4f       	sbci	r19, 0xF6	; 246
    169e:	e2 17       	cp	r30, r18
    16a0:	f3 07       	cpc	r31, r19
    16a2:	29 f4       	brne	.+10     	; 0x16ae <vTaskSwitchContext+0xac>
    16a4:	22 81       	ldd	r18, Z+2	; 0x02
    16a6:	33 81       	ldd	r19, Z+3	; 0x03
    16a8:	fd 01       	movw	r30, r26
    16aa:	32 83       	std	Z+2, r19	; 0x02
    16ac:	21 83       	std	Z+1, r18	; 0x01
    16ae:	fc 01       	movw	r30, r24
    16b0:	ee 0f       	add	r30, r30
    16b2:	ff 1f       	adc	r31, r31
    16b4:	ee 0f       	add	r30, r30
    16b6:	ff 1f       	adc	r31, r31
    16b8:	ee 0f       	add	r30, r30
    16ba:	ff 1f       	adc	r31, r31
    16bc:	8e 0f       	add	r24, r30
    16be:	9f 1f       	adc	r25, r31
    16c0:	fc 01       	movw	r30, r24
    16c2:	e9 58       	subi	r30, 0x89	; 137
    16c4:	f6 4f       	sbci	r31, 0xF6	; 246
    16c6:	01 80       	ldd	r0, Z+1	; 0x01
    16c8:	f2 81       	ldd	r31, Z+2	; 0x02
    16ca:	e0 2d       	mov	r30, r0
    16cc:	86 81       	ldd	r24, Z+6	; 0x06
    16ce:	97 81       	ldd	r25, Z+7	; 0x07
    16d0:	90 93 9c 09 	sts	0x099C, r25	; 0x80099c <pxCurrentTCB+0x1>
    16d4:	80 93 9b 09 	sts	0x099B, r24	; 0x80099b <pxCurrentTCB>
    16d8:	08 95       	ret

000016da <__udivmodqi4>:
    16da:	99 1b       	sub	r25, r25
    16dc:	79 e0       	ldi	r23, 0x09	; 9
    16de:	04 c0       	rjmp	.+8      	; 0x16e8 <__udivmodqi4_ep>

000016e0 <__udivmodqi4_loop>:
    16e0:	99 1f       	adc	r25, r25
    16e2:	96 17       	cp	r25, r22
    16e4:	08 f0       	brcs	.+2      	; 0x16e8 <__udivmodqi4_ep>
    16e6:	96 1b       	sub	r25, r22

000016e8 <__udivmodqi4_ep>:
    16e8:	88 1f       	adc	r24, r24
    16ea:	7a 95       	dec	r23
    16ec:	c9 f7       	brne	.-14     	; 0x16e0 <__udivmodqi4_loop>
    16ee:	80 95       	com	r24
    16f0:	08 95       	ret

000016f2 <__tablejump2__>:
    16f2:	ee 0f       	add	r30, r30
    16f4:	ff 1f       	adc	r31, r31
    16f6:	00 24       	eor	r0, r0
    16f8:	00 1c       	adc	r0, r0
    16fa:	0b be       	out	0x3b, r0	; 59
    16fc:	07 90       	elpm	r0, Z+
    16fe:	f6 91       	elpm	r31, Z
    1700:	e0 2d       	mov	r30, r0
    1702:	09 94       	ijmp

00001704 <memset>:
    1704:	dc 01       	movw	r26, r24
    1706:	01 c0       	rjmp	.+2      	; 0x170a <memset+0x6>
    1708:	6d 93       	st	X+, r22
    170a:	41 50       	subi	r20, 0x01	; 1
    170c:	50 40       	sbci	r21, 0x00	; 0
    170e:	e0 f7       	brcc	.-8      	; 0x1708 <memset+0x4>
    1710:	08 95       	ret

00001712 <strncpy>:
    1712:	fb 01       	movw	r30, r22
    1714:	dc 01       	movw	r26, r24
    1716:	41 50       	subi	r20, 0x01	; 1
    1718:	50 40       	sbci	r21, 0x00	; 0
    171a:	48 f0       	brcs	.+18     	; 0x172e <strncpy+0x1c>
    171c:	01 90       	ld	r0, Z+
    171e:	0d 92       	st	X+, r0
    1720:	00 20       	and	r0, r0
    1722:	c9 f7       	brne	.-14     	; 0x1716 <strncpy+0x4>
    1724:	01 c0       	rjmp	.+2      	; 0x1728 <strncpy+0x16>
    1726:	1d 92       	st	X+, r1
    1728:	41 50       	subi	r20, 0x01	; 1
    172a:	50 40       	sbci	r21, 0x00	; 0
    172c:	e0 f7       	brcc	.-8      	; 0x1726 <strncpy+0x14>
    172e:	08 95       	ret

00001730 <_exit>:
    1730:	f8 94       	cli

00001732 <__stop_program>:
    1732:	ff cf       	rjmp	.-2      	; 0x1732 <__stop_program>
