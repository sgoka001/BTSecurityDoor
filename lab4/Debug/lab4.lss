
lab4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000a6  00800100  00001890  00001924  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001890  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000842  008001a6  008001a6  000019ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000019ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000019fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000258  00000000  00000000  00001a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000034a4  00000000  00000000  00001c94  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001107  00000000  00000000  00005138  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001f9d  00000000  00000000  0000623f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000628  00000000  00000000  000081dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000fd4  00000000  00000000  00008804  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001f2e  00000000  00000000  000097d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000270  00000000  00000000  0000b706  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	40 c1       	rjmp	.+640    	; 0x282 <__ctors_end>
       2:	00 00       	nop
       4:	5c c1       	rjmp	.+696    	; 0x2be <__bad_interrupt>
       6:	00 00       	nop
       8:	5a c1       	rjmp	.+692    	; 0x2be <__bad_interrupt>
       a:	00 00       	nop
       c:	58 c1       	rjmp	.+688    	; 0x2be <__bad_interrupt>
       e:	00 00       	nop
      10:	56 c1       	rjmp	.+684    	; 0x2be <__bad_interrupt>
      12:	00 00       	nop
      14:	54 c1       	rjmp	.+680    	; 0x2be <__bad_interrupt>
      16:	00 00       	nop
      18:	52 c1       	rjmp	.+676    	; 0x2be <__bad_interrupt>
      1a:	00 00       	nop
      1c:	50 c1       	rjmp	.+672    	; 0x2be <__bad_interrupt>
      1e:	00 00       	nop
      20:	4e c1       	rjmp	.+668    	; 0x2be <__bad_interrupt>
      22:	00 00       	nop
      24:	4c c1       	rjmp	.+664    	; 0x2be <__bad_interrupt>
      26:	00 00       	nop
      28:	4a c1       	rjmp	.+660    	; 0x2be <__bad_interrupt>
      2a:	00 00       	nop
      2c:	48 c1       	rjmp	.+656    	; 0x2be <__bad_interrupt>
      2e:	00 00       	nop
      30:	46 c1       	rjmp	.+652    	; 0x2be <__bad_interrupt>
      32:	00 00       	nop
      34:	0c 94 b8 08 	jmp	0x1170	; 0x1170 <__vector_13>
      38:	42 c1       	rjmp	.+644    	; 0x2be <__bad_interrupt>
      3a:	00 00       	nop
      3c:	40 c1       	rjmp	.+640    	; 0x2be <__bad_interrupt>
      3e:	00 00       	nop
      40:	3e c1       	rjmp	.+636    	; 0x2be <__bad_interrupt>
      42:	00 00       	nop
      44:	3c c1       	rjmp	.+632    	; 0x2be <__bad_interrupt>
      46:	00 00       	nop
      48:	3a c1       	rjmp	.+628    	; 0x2be <__bad_interrupt>
      4a:	00 00       	nop
      4c:	38 c1       	rjmp	.+624    	; 0x2be <__bad_interrupt>
      4e:	00 00       	nop
      50:	36 c1       	rjmp	.+620    	; 0x2be <__bad_interrupt>
      52:	00 00       	nop
      54:	34 c1       	rjmp	.+616    	; 0x2be <__bad_interrupt>
      56:	00 00       	nop
      58:	32 c1       	rjmp	.+612    	; 0x2be <__bad_interrupt>
      5a:	00 00       	nop
      5c:	30 c1       	rjmp	.+608    	; 0x2be <__bad_interrupt>
      5e:	00 00       	nop
      60:	2e c1       	rjmp	.+604    	; 0x2be <__bad_interrupt>
      62:	00 00       	nop
      64:	2c c1       	rjmp	.+600    	; 0x2be <__bad_interrupt>
      66:	00 00       	nop
      68:	2a c1       	rjmp	.+596    	; 0x2be <__bad_interrupt>
      6a:	00 00       	nop
      6c:	28 c1       	rjmp	.+592    	; 0x2be <__bad_interrupt>
      6e:	00 00       	nop
      70:	26 c1       	rjmp	.+588    	; 0x2be <__bad_interrupt>
      72:	00 00       	nop
      74:	24 c1       	rjmp	.+584    	; 0x2be <__bad_interrupt>
      76:	00 00       	nop
      78:	22 c1       	rjmp	.+580    	; 0x2be <__bad_interrupt>
      7a:	00 00       	nop
      7c:	20 c1       	rjmp	.+576    	; 0x2be <__bad_interrupt>
      7e:	00 00       	nop
      80:	1e c1       	rjmp	.+572    	; 0x2be <__bad_interrupt>
      82:	00 00       	nop
      84:	1c c1       	rjmp	.+568    	; 0x2be <__bad_interrupt>
      86:	00 00       	nop
      88:	1a c1       	rjmp	.+564    	; 0x2be <__bad_interrupt>
      8a:	00 00       	nop
      8c:	43 04       	cpc	r4, r3
      8e:	4a 04       	cpc	r4, r10
      90:	5f 04       	cpc	r5, r15
      92:	6d 04       	cpc	r6, r13
      94:	76 04       	cpc	r7, r6
      96:	84 04       	cpc	r8, r4
      98:	92 04       	cpc	r9, r2
      9a:	a0 04       	cpc	r10, r0
      9c:	a9 04       	cpc	r10, r9
      9e:	c5 04       	cpc	r12, r5
      a0:	b2 04       	cpc	r11, r2

000000a2 <CHARSET>:
      a2:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      b2:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      c2:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
      d2:	1c 00 14 08 3e 08 14 08 08 3e 08 08 00 50 30 00     ....>....>...P0.
      e2:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
      f2:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     102:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     112:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     122:	29 1e 00 36 36 00 00 00 56 36 00 00 08 14 22 41     )..66...V6...."A
     132:	00 14 14 14 14 14 00 41 22 14 08 02 01 51 09 06     .......A"....Q..
     142:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     152:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     162:	09 09 01 3e 41 49 49 7a 7f 08 08 08 7f 00 41 7f     ...>AIIz......A.
     172:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     182:	40 7f 02 0c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     192:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1a2:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1b2:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 07 08 70     @ .?@8@?c...c..p
     1c2:	08 07 61 51 49 45 43 00 7f 41 41 00 02 04 08 10     ..aQIEC..AA.....
     1d2:	20 00 41 41 7f 00 04 02 01 02 04 40 40 40 40 40      .AA.......@@@@@
     1e2:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     1f2:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     202:	09 01 02 0c 52 52 52 3e 7f 08 04 04 78 00 44 7d     ....RRR>....x.D}
     212:	40 00 20 40 44 3d 00 7f 10 28 44 00 00 41 7f 40     @. @D=...(D..A.@
     222:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     232:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     242:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     252:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     262:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     272:	00 00 41 36 08 00 10 08 08 10 08 00 00 00 00 00     ..A6............

00000282 <__ctors_end>:
     282:	11 24       	eor	r1, r1
     284:	1f be       	out	0x3f, r1	; 63
     286:	cf ef       	ldi	r28, 0xFF	; 255
     288:	d0 e4       	ldi	r29, 0x40	; 64
     28a:	de bf       	out	0x3e, r29	; 62
     28c:	cd bf       	out	0x3d, r28	; 61

0000028e <__do_copy_data>:
     28e:	11 e0       	ldi	r17, 0x01	; 1
     290:	a0 e0       	ldi	r26, 0x00	; 0
     292:	b1 e0       	ldi	r27, 0x01	; 1
     294:	e0 e9       	ldi	r30, 0x90	; 144
     296:	f8 e1       	ldi	r31, 0x18	; 24
     298:	00 e0       	ldi	r16, 0x00	; 0
     29a:	0b bf       	out	0x3b, r16	; 59
     29c:	02 c0       	rjmp	.+4      	; 0x2a2 <__do_copy_data+0x14>
     29e:	07 90       	elpm	r0, Z+
     2a0:	0d 92       	st	X+, r0
     2a2:	a6 3a       	cpi	r26, 0xA6	; 166
     2a4:	b1 07       	cpc	r27, r17
     2a6:	d9 f7       	brne	.-10     	; 0x29e <__do_copy_data+0x10>

000002a8 <__do_clear_bss>:
     2a8:	29 e0       	ldi	r18, 0x09	; 9
     2aa:	a6 ea       	ldi	r26, 0xA6	; 166
     2ac:	b1 e0       	ldi	r27, 0x01	; 1
     2ae:	01 c0       	rjmp	.+2      	; 0x2b2 <.do_clear_bss_start>

000002b0 <.do_clear_bss_loop>:
     2b0:	1d 92       	st	X+, r1

000002b2 <.do_clear_bss_start>:
     2b2:	a8 3e       	cpi	r26, 0xE8	; 232
     2b4:	b2 07       	cpc	r27, r18
     2b6:	e1 f7       	brne	.-8      	; 0x2b0 <.do_clear_bss_loop>
     2b8:	ec d5       	rcall	.+3032   	; 0xe92 <main>
     2ba:	0c 94 46 0c 	jmp	0x188c	; 0x188c <_exit>

000002be <__bad_interrupt>:
     2be:	a0 ce       	rjmp	.-704    	; 0x0 <__vectors>

000002c0 <pvPortMalloc>:
     2c0:	cf 93       	push	r28
     2c2:	df 93       	push	r29
     2c4:	ec 01       	movw	r28, r24
     2c6:	0e 94 0c 0a 	call	0x1418	; 0x1418 <vTaskSuspendAll>
     2ca:	20 91 a6 01 	lds	r18, 0x01A6	; 0x8001a6 <__data_end>
     2ce:	30 91 a7 01 	lds	r19, 0x01A7	; 0x8001a7 <__data_end+0x1>
     2d2:	c9 01       	movw	r24, r18
     2d4:	8c 0f       	add	r24, r28
     2d6:	9d 1f       	adc	r25, r29
     2d8:	8c 3d       	cpi	r24, 0xDC	; 220
     2da:	45 e0       	ldi	r20, 0x05	; 5
     2dc:	94 07       	cpc	r25, r20
     2de:	58 f4       	brcc	.+22     	; 0x2f6 <pvPortMalloc+0x36>
     2e0:	28 17       	cp	r18, r24
     2e2:	39 07       	cpc	r19, r25
     2e4:	58 f4       	brcc	.+22     	; 0x2fc <pvPortMalloc+0x3c>
     2e6:	e9 01       	movw	r28, r18
     2e8:	c8 55       	subi	r28, 0x58	; 88
     2ea:	de 4f       	sbci	r29, 0xFE	; 254
     2ec:	90 93 a7 01 	sts	0x01A7, r25	; 0x8001a7 <__data_end+0x1>
     2f0:	80 93 a6 01 	sts	0x01A6, r24	; 0x8001a6 <__data_end>
     2f4:	05 c0       	rjmp	.+10     	; 0x300 <pvPortMalloc+0x40>
     2f6:	c0 e0       	ldi	r28, 0x00	; 0
     2f8:	d0 e0       	ldi	r29, 0x00	; 0
     2fa:	02 c0       	rjmp	.+4      	; 0x300 <pvPortMalloc+0x40>
     2fc:	c0 e0       	ldi	r28, 0x00	; 0
     2fe:	d0 e0       	ldi	r29, 0x00	; 0
     300:	0e 94 d6 0a 	call	0x15ac	; 0x15ac <xTaskResumeAll>
     304:	ce 01       	movw	r24, r28
     306:	df 91       	pop	r29
     308:	cf 91       	pop	r28
     30a:	08 95       	ret

0000030c <vPortFree>:
     30c:	08 95       	ret

0000030e <vListInitialise>:
     30e:	fc 01       	movw	r30, r24
     310:	03 96       	adiw	r24, 0x03	; 3
     312:	92 83       	std	Z+2, r25	; 0x02
     314:	81 83       	std	Z+1, r24	; 0x01
     316:	2f ef       	ldi	r18, 0xFF	; 255
     318:	3f ef       	ldi	r19, 0xFF	; 255
     31a:	34 83       	std	Z+4, r19	; 0x04
     31c:	23 83       	std	Z+3, r18	; 0x03
     31e:	96 83       	std	Z+6, r25	; 0x06
     320:	85 83       	std	Z+5, r24	; 0x05
     322:	90 87       	std	Z+8, r25	; 0x08
     324:	87 83       	std	Z+7, r24	; 0x07
     326:	10 82       	st	Z, r1
     328:	08 95       	ret

0000032a <vListInitialiseItem>:
     32a:	fc 01       	movw	r30, r24
     32c:	11 86       	std	Z+9, r1	; 0x09
     32e:	10 86       	std	Z+8, r1	; 0x08
     330:	08 95       	ret

00000332 <vListInsertEnd>:
     332:	cf 93       	push	r28
     334:	df 93       	push	r29
     336:	fc 01       	movw	r30, r24
     338:	db 01       	movw	r26, r22
     33a:	21 81       	ldd	r18, Z+1	; 0x01
     33c:	32 81       	ldd	r19, Z+2	; 0x02
     33e:	e9 01       	movw	r28, r18
     340:	8a 81       	ldd	r24, Y+2	; 0x02
     342:	9b 81       	ldd	r25, Y+3	; 0x03
     344:	13 96       	adiw	r26, 0x03	; 3
     346:	9c 93       	st	X, r25
     348:	8e 93       	st	-X, r24
     34a:	12 97       	sbiw	r26, 0x02	; 2
     34c:	81 81       	ldd	r24, Z+1	; 0x01
     34e:	92 81       	ldd	r25, Z+2	; 0x02
     350:	15 96       	adiw	r26, 0x05	; 5
     352:	9c 93       	st	X, r25
     354:	8e 93       	st	-X, r24
     356:	14 97       	sbiw	r26, 0x04	; 4
     358:	8a 81       	ldd	r24, Y+2	; 0x02
     35a:	9b 81       	ldd	r25, Y+3	; 0x03
     35c:	ec 01       	movw	r28, r24
     35e:	7d 83       	std	Y+5, r23	; 0x05
     360:	6c 83       	std	Y+4, r22	; 0x04
     362:	e9 01       	movw	r28, r18
     364:	7b 83       	std	Y+3, r23	; 0x03
     366:	6a 83       	std	Y+2, r22	; 0x02
     368:	72 83       	std	Z+2, r23	; 0x02
     36a:	61 83       	std	Z+1, r22	; 0x01
     36c:	19 96       	adiw	r26, 0x09	; 9
     36e:	fc 93       	st	X, r31
     370:	ee 93       	st	-X, r30
     372:	18 97       	sbiw	r26, 0x08	; 8
     374:	80 81       	ld	r24, Z
     376:	8f 5f       	subi	r24, 0xFF	; 255
     378:	80 83       	st	Z, r24
     37a:	df 91       	pop	r29
     37c:	cf 91       	pop	r28
     37e:	08 95       	ret

00000380 <vListInsert>:
     380:	cf 93       	push	r28
     382:	df 93       	push	r29
     384:	eb 01       	movw	r28, r22
     386:	48 81       	ld	r20, Y
     388:	59 81       	ldd	r21, Y+1	; 0x01
     38a:	4f 3f       	cpi	r20, 0xFF	; 255
     38c:	2f ef       	ldi	r18, 0xFF	; 255
     38e:	52 07       	cpc	r21, r18
     390:	31 f4       	brne	.+12     	; 0x39e <vListInsert+0x1e>
     392:	dc 01       	movw	r26, r24
     394:	17 96       	adiw	r26, 0x07	; 7
     396:	ed 91       	ld	r30, X+
     398:	fc 91       	ld	r31, X
     39a:	18 97       	sbiw	r26, 0x08	; 8
     39c:	17 c0       	rjmp	.+46     	; 0x3cc <vListInsert+0x4c>
     39e:	fc 01       	movw	r30, r24
     3a0:	33 96       	adiw	r30, 0x03	; 3
     3a2:	dc 01       	movw	r26, r24
     3a4:	15 96       	adiw	r26, 0x05	; 5
     3a6:	2d 91       	ld	r18, X+
     3a8:	3c 91       	ld	r19, X
     3aa:	16 97       	sbiw	r26, 0x06	; 6
     3ac:	d9 01       	movw	r26, r18
     3ae:	2d 91       	ld	r18, X+
     3b0:	3c 91       	ld	r19, X
     3b2:	42 17       	cp	r20, r18
     3b4:	53 07       	cpc	r21, r19
     3b6:	50 f0       	brcs	.+20     	; 0x3cc <vListInsert+0x4c>
     3b8:	02 80       	ldd	r0, Z+2	; 0x02
     3ba:	f3 81       	ldd	r31, Z+3	; 0x03
     3bc:	e0 2d       	mov	r30, r0
     3be:	a2 81       	ldd	r26, Z+2	; 0x02
     3c0:	b3 81       	ldd	r27, Z+3	; 0x03
     3c2:	2d 91       	ld	r18, X+
     3c4:	3c 91       	ld	r19, X
     3c6:	42 17       	cp	r20, r18
     3c8:	53 07       	cpc	r21, r19
     3ca:	b0 f7       	brcc	.-20     	; 0x3b8 <vListInsert+0x38>
     3cc:	a2 81       	ldd	r26, Z+2	; 0x02
     3ce:	b3 81       	ldd	r27, Z+3	; 0x03
     3d0:	bb 83       	std	Y+3, r27	; 0x03
     3d2:	aa 83       	std	Y+2, r26	; 0x02
     3d4:	15 96       	adiw	r26, 0x05	; 5
     3d6:	dc 93       	st	X, r29
     3d8:	ce 93       	st	-X, r28
     3da:	14 97       	sbiw	r26, 0x04	; 4
     3dc:	fd 83       	std	Y+5, r31	; 0x05
     3de:	ec 83       	std	Y+4, r30	; 0x04
     3e0:	d3 83       	std	Z+3, r29	; 0x03
     3e2:	c2 83       	std	Z+2, r28	; 0x02
     3e4:	99 87       	std	Y+9, r25	; 0x09
     3e6:	88 87       	std	Y+8, r24	; 0x08
     3e8:	fc 01       	movw	r30, r24
     3ea:	20 81       	ld	r18, Z
     3ec:	2f 5f       	subi	r18, 0xFF	; 255
     3ee:	20 83       	st	Z, r18
     3f0:	df 91       	pop	r29
     3f2:	cf 91       	pop	r28
     3f4:	08 95       	ret

000003f6 <vListRemove>:
     3f6:	fc 01       	movw	r30, r24
     3f8:	a2 81       	ldd	r26, Z+2	; 0x02
     3fa:	b3 81       	ldd	r27, Z+3	; 0x03
     3fc:	84 81       	ldd	r24, Z+4	; 0x04
     3fe:	95 81       	ldd	r25, Z+5	; 0x05
     400:	15 96       	adiw	r26, 0x05	; 5
     402:	9c 93       	st	X, r25
     404:	8e 93       	st	-X, r24
     406:	14 97       	sbiw	r26, 0x04	; 4
     408:	a4 81       	ldd	r26, Z+4	; 0x04
     40a:	b5 81       	ldd	r27, Z+5	; 0x05
     40c:	82 81       	ldd	r24, Z+2	; 0x02
     40e:	93 81       	ldd	r25, Z+3	; 0x03
     410:	13 96       	adiw	r26, 0x03	; 3
     412:	9c 93       	st	X, r25
     414:	8e 93       	st	-X, r24
     416:	12 97       	sbiw	r26, 0x02	; 2
     418:	a0 85       	ldd	r26, Z+8	; 0x08
     41a:	b1 85       	ldd	r27, Z+9	; 0x09
     41c:	11 96       	adiw	r26, 0x01	; 1
     41e:	8d 91       	ld	r24, X+
     420:	9c 91       	ld	r25, X
     422:	12 97       	sbiw	r26, 0x02	; 2
     424:	e8 17       	cp	r30, r24
     426:	f9 07       	cpc	r31, r25
     428:	31 f4       	brne	.+12     	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     42a:	84 81       	ldd	r24, Z+4	; 0x04
     42c:	95 81       	ldd	r25, Z+5	; 0x05
     42e:	12 96       	adiw	r26, 0x02	; 2
     430:	9c 93       	st	X, r25
     432:	8e 93       	st	-X, r24
     434:	11 97       	sbiw	r26, 0x01	; 1
     436:	11 86       	std	Z+9, r1	; 0x09
     438:	10 86       	std	Z+8, r1	; 0x08
     43a:	8c 91       	ld	r24, X
     43c:	81 50       	subi	r24, 0x01	; 1
     43e:	8c 93       	st	X, r24
     440:	08 95       	ret

00000442 <write>:
//////////////////////////////////////////////////////////////////////// LOCAL VARIABLES ////////////////////////////////////////////////////////////////////////

enum MotorState {READ_MOTION, MENU, READ_KEY_WAIT, READ_KEY_INIT, CURRENT_PASS, CHANGE_PASS, READ_KEY_WAIT_2, READ_KEY_INIT_2, READ_KEY, LOCK, UNLOCK} motor_state;

void Motor_Init(){
	motor_state = READ_MOTION;
     442:	28 98       	cbi	0x05, 0	; 5
     444:	66 23       	and	r22, r22
     446:	11 f0       	breq	.+4      	; 0x44c <write+0xa>
     448:	2a 9a       	sbi	0x05, 2	; 5
     44a:	15 c0       	rjmp	.+42     	; 0x476 <write+0x34>
     44c:	2a 98       	cbi	0x05, 2	; 5
     44e:	13 c0       	rjmp	.+38     	; 0x476 <write+0x34>
     450:	ac 01       	movw	r20, r24
     452:	02 2e       	mov	r0, r18
     454:	02 c0       	rjmp	.+4      	; 0x45a <write+0x18>
     456:	55 95       	asr	r21
     458:	47 95       	ror	r20
     45a:	0a 94       	dec	r0
     45c:	e2 f7       	brpl	.-8      	; 0x456 <write+0x14>
     45e:	40 ff       	sbrs	r20, 0
     460:	02 c0       	rjmp	.+4      	; 0x466 <write+0x24>
     462:	2b 9a       	sbi	0x05, 3	; 5
     464:	01 c0       	rjmp	.+2      	; 0x468 <write+0x26>
     466:	2b 98       	cbi	0x05, 3	; 5
     468:	2c 9a       	sbi	0x05, 4	; 5
     46a:	2c 98       	cbi	0x05, 4	; 5
     46c:	21 50       	subi	r18, 0x01	; 1
     46e:	31 09       	sbc	r19, r1
     470:	78 f7       	brcc	.-34     	; 0x450 <write+0xe>
     472:	28 9a       	sbi	0x05, 0	; 5
     474:	08 95       	ret
     476:	27 e0       	ldi	r18, 0x07	; 7
     478:	30 e0       	ldi	r19, 0x00	; 0
     47a:	90 e0       	ldi	r25, 0x00	; 0
     47c:	e9 cf       	rjmp	.-46     	; 0x450 <write+0xe>

0000047e <write_cmd>:
     47e:	60 e0       	ldi	r22, 0x00	; 0
     480:	e0 cf       	rjmp	.-64     	; 0x442 <write>
     482:	08 95       	ret

00000484 <GetKeypadKey>:
     484:	8f ee       	ldi	r24, 0xEF	; 239
     486:	88 b9       	out	0x08, r24	; 8
     488:	00 00       	nop
     48a:	30 9b       	sbis	0x06, 0	; 6
     48c:	29 c0       	rjmp	.+82     	; 0x4e0 <GetKeypadKey+0x5c>
     48e:	31 9b       	sbis	0x06, 1	; 6
     490:	29 c0       	rjmp	.+82     	; 0x4e4 <GetKeypadKey+0x60>
     492:	32 9b       	sbis	0x06, 2	; 6
     494:	29 c0       	rjmp	.+82     	; 0x4e8 <GetKeypadKey+0x64>
     496:	33 9b       	sbis	0x06, 3	; 6
     498:	29 c0       	rjmp	.+82     	; 0x4ec <GetKeypadKey+0x68>
     49a:	8f ed       	ldi	r24, 0xDF	; 223
     49c:	88 b9       	out	0x08, r24	; 8
     49e:	00 00       	nop
     4a0:	30 9b       	sbis	0x06, 0	; 6
     4a2:	26 c0       	rjmp	.+76     	; 0x4f0 <GetKeypadKey+0x6c>
     4a4:	31 9b       	sbis	0x06, 1	; 6
     4a6:	26 c0       	rjmp	.+76     	; 0x4f4 <GetKeypadKey+0x70>
     4a8:	32 9b       	sbis	0x06, 2	; 6
     4aa:	26 c0       	rjmp	.+76     	; 0x4f8 <GetKeypadKey+0x74>
     4ac:	33 9b       	sbis	0x06, 3	; 6
     4ae:	26 c0       	rjmp	.+76     	; 0x4fc <GetKeypadKey+0x78>
     4b0:	8f eb       	ldi	r24, 0xBF	; 191
     4b2:	88 b9       	out	0x08, r24	; 8
     4b4:	00 00       	nop
     4b6:	30 9b       	sbis	0x06, 0	; 6
     4b8:	23 c0       	rjmp	.+70     	; 0x500 <GetKeypadKey+0x7c>
     4ba:	31 9b       	sbis	0x06, 1	; 6
     4bc:	23 c0       	rjmp	.+70     	; 0x504 <GetKeypadKey+0x80>
     4be:	32 9b       	sbis	0x06, 2	; 6
     4c0:	23 c0       	rjmp	.+70     	; 0x508 <GetKeypadKey+0x84>
     4c2:	33 9b       	sbis	0x06, 3	; 6
     4c4:	23 c0       	rjmp	.+70     	; 0x50c <GetKeypadKey+0x88>
     4c6:	8f e7       	ldi	r24, 0x7F	; 127
     4c8:	88 b9       	out	0x08, r24	; 8
     4ca:	00 00       	nop
     4cc:	30 9b       	sbis	0x06, 0	; 6
     4ce:	20 c0       	rjmp	.+64     	; 0x510 <GetKeypadKey+0x8c>
     4d0:	31 9b       	sbis	0x06, 1	; 6
     4d2:	20 c0       	rjmp	.+64     	; 0x514 <GetKeypadKey+0x90>
     4d4:	32 9b       	sbis	0x06, 2	; 6
     4d6:	20 c0       	rjmp	.+64     	; 0x518 <GetKeypadKey+0x94>
     4d8:	33 9b       	sbis	0x06, 3	; 6
     4da:	20 c0       	rjmp	.+64     	; 0x51c <GetKeypadKey+0x98>
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	08 95       	ret
     4e0:	81 e3       	ldi	r24, 0x31	; 49
     4e2:	08 95       	ret
     4e4:	84 e3       	ldi	r24, 0x34	; 52
     4e6:	08 95       	ret
     4e8:	87 e3       	ldi	r24, 0x37	; 55
     4ea:	08 95       	ret
     4ec:	8a e2       	ldi	r24, 0x2A	; 42
     4ee:	08 95       	ret
     4f0:	82 e3       	ldi	r24, 0x32	; 50
     4f2:	08 95       	ret
     4f4:	85 e3       	ldi	r24, 0x35	; 53
     4f6:	08 95       	ret
     4f8:	88 e3       	ldi	r24, 0x38	; 56
     4fa:	08 95       	ret
     4fc:	80 e3       	ldi	r24, 0x30	; 48
     4fe:	08 95       	ret
     500:	83 e3       	ldi	r24, 0x33	; 51
     502:	08 95       	ret
     504:	86 e3       	ldi	r24, 0x36	; 54
     506:	08 95       	ret
     508:	89 e3       	ldi	r24, 0x39	; 57
     50a:	08 95       	ret
     50c:	83 e2       	ldi	r24, 0x23	; 35
     50e:	08 95       	ret
     510:	81 e4       	ldi	r24, 0x41	; 65
     512:	08 95       	ret
     514:	82 e4       	ldi	r24, 0x42	; 66
     516:	08 95       	ret
     518:	83 e4       	ldi	r24, 0x43	; 67
     51a:	08 95       	ret
     51c:	84 e4       	ldi	r24, 0x44	; 68
     51e:	08 95       	ret

00000520 <nokia_lcd_init>:
     520:	cf 93       	push	r28
     522:	df 93       	push	r29
     524:	20 9a       	sbi	0x04, 0	; 4
     526:	21 9a       	sbi	0x04, 1	; 4
     528:	22 9a       	sbi	0x04, 2	; 4
     52a:	23 9a       	sbi	0x04, 3	; 4
     52c:	24 9a       	sbi	0x04, 4	; 4
     52e:	29 9a       	sbi	0x05, 1	; 5
     530:	28 9a       	sbi	0x05, 0	; 5
     532:	83 ec       	ldi	r24, 0xC3	; 195
     534:	99 e0       	ldi	r25, 0x09	; 9
     536:	01 97       	sbiw	r24, 0x01	; 1
     538:	f1 f7       	brne	.-4      	; 0x536 <nokia_lcd_init+0x16>
     53a:	00 c0       	rjmp	.+0      	; 0x53c <nokia_lcd_init+0x1c>
     53c:	00 00       	nop
     53e:	29 98       	cbi	0x05, 1	; 5
     540:	8b e5       	ldi	r24, 0x5B	; 91
     542:	94 e4       	ldi	r25, 0x44	; 68
     544:	01 97       	sbiw	r24, 0x01	; 1
     546:	f1 f7       	brne	.-4      	; 0x544 <nokia_lcd_init+0x24>
     548:	00 c0       	rjmp	.+0      	; 0x54a <nokia_lcd_init+0x2a>
     54a:	00 00       	nop
     54c:	29 9a       	sbi	0x05, 1	; 5
     54e:	28 98       	cbi	0x05, 0	; 5
     550:	81 e2       	ldi	r24, 0x21	; 33
     552:	95 df       	rcall	.-214    	; 0x47e <write_cmd>
     554:	83 e1       	ldi	r24, 0x13	; 19
     556:	93 df       	rcall	.-218    	; 0x47e <write_cmd>
     558:	86 e0       	ldi	r24, 0x06	; 6
     55a:	91 df       	rcall	.-222    	; 0x47e <write_cmd>
     55c:	82 ec       	ldi	r24, 0xC2	; 194
     55e:	8f df       	rcall	.-226    	; 0x47e <write_cmd>
     560:	80 e2       	ldi	r24, 0x20	; 32
     562:	8d df       	rcall	.-230    	; 0x47e <write_cmd>
     564:	89 e0       	ldi	r24, 0x09	; 9
     566:	8b df       	rcall	.-234    	; 0x47e <write_cmd>
     568:	80 e8       	ldi	r24, 0x80	; 128
     56a:	89 df       	rcall	.-238    	; 0x47e <write_cmd>
     56c:	80 e4       	ldi	r24, 0x40	; 64
     56e:	87 df       	rcall	.-242    	; 0x47e <write_cmd>
     570:	c8 ef       	ldi	r28, 0xF8	; 248
     572:	d1 e0       	ldi	r29, 0x01	; 1
     574:	61 e0       	ldi	r22, 0x01	; 1
     576:	80 e0       	ldi	r24, 0x00	; 0
     578:	64 df       	rcall	.-312    	; 0x442 <write>
     57a:	21 97       	sbiw	r28, 0x01	; 1
     57c:	d9 f7       	brne	.-10     	; 0x574 <nokia_lcd_init+0x54>
     57e:	88 e0       	ldi	r24, 0x08	; 8
     580:	7e df       	rcall	.-260    	; 0x47e <write_cmd>
     582:	8c e0       	ldi	r24, 0x0C	; 12
     584:	7c df       	rcall	.-264    	; 0x47e <write_cmd>
     586:	df 91       	pop	r29
     588:	cf 91       	pop	r28
     58a:	08 95       	ret

0000058c <nokia_lcd_clear>:
     58c:	80 e8       	ldi	r24, 0x80	; 128
     58e:	77 df       	rcall	.-274    	; 0x47e <write_cmd>
     590:	80 e4       	ldi	r24, 0x40	; 64
     592:	75 df       	rcall	.-278    	; 0x47e <write_cmd>
     594:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <nokia_lcd+0x1f8>
     598:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <nokia_lcd+0x1f9>
     59c:	ec e8       	ldi	r30, 0x8C	; 140
     59e:	f7 e0       	ldi	r31, 0x07	; 7
     5a0:	84 e8       	ldi	r24, 0x84	; 132
     5a2:	99 e0       	ldi	r25, 0x09	; 9
     5a4:	11 92       	st	Z+, r1
     5a6:	e8 17       	cp	r30, r24
     5a8:	f9 07       	cpc	r31, r25
     5aa:	e1 f7       	brne	.-8      	; 0x5a4 <nokia_lcd_clear+0x18>
     5ac:	08 95       	ret

000005ae <nokia_lcd_set_pixel>:
     5ae:	26 2f       	mov	r18, r22
     5b0:	26 95       	lsr	r18
     5b2:	26 95       	lsr	r18
     5b4:	26 95       	lsr	r18
     5b6:	90 e0       	ldi	r25, 0x00	; 0
     5b8:	34 e5       	ldi	r19, 0x54	; 84
     5ba:	23 9f       	mul	r18, r19
     5bc:	80 0d       	add	r24, r0
     5be:	91 1d       	adc	r25, r1
     5c0:	11 24       	eor	r1, r1
     5c2:	44 23       	and	r20, r20
     5c4:	79 f0       	breq	.+30     	; 0x5e4 <nokia_lcd_set_pixel+0x36>
     5c6:	fc 01       	movw	r30, r24
     5c8:	e4 57       	subi	r30, 0x74	; 116
     5ca:	f8 4f       	sbci	r31, 0xF8	; 248
     5cc:	67 70       	andi	r22, 0x07	; 7
     5ce:	81 e0       	ldi	r24, 0x01	; 1
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <nokia_lcd_set_pixel+0x2a>
     5d4:	88 0f       	add	r24, r24
     5d6:	99 1f       	adc	r25, r25
     5d8:	6a 95       	dec	r22
     5da:	e2 f7       	brpl	.-8      	; 0x5d4 <nokia_lcd_set_pixel+0x26>
     5dc:	90 81       	ld	r25, Z
     5de:	89 2b       	or	r24, r25
     5e0:	80 83       	st	Z, r24
     5e2:	08 95       	ret
     5e4:	fc 01       	movw	r30, r24
     5e6:	e4 57       	subi	r30, 0x74	; 116
     5e8:	f8 4f       	sbci	r31, 0xF8	; 248
     5ea:	67 70       	andi	r22, 0x07	; 7
     5ec:	81 e0       	ldi	r24, 0x01	; 1
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <nokia_lcd_set_pixel+0x48>
     5f2:	88 0f       	add	r24, r24
     5f4:	99 1f       	adc	r25, r25
     5f6:	6a 95       	dec	r22
     5f8:	e2 f7       	brpl	.-8      	; 0x5f2 <nokia_lcd_set_pixel+0x44>
     5fa:	80 95       	com	r24
     5fc:	90 81       	ld	r25, Z
     5fe:	89 23       	and	r24, r25
     600:	80 83       	st	Z, r24
     602:	08 95       	ret

00000604 <nokia_lcd_write_char>:
     604:	5f 92       	push	r5
     606:	6f 92       	push	r6
     608:	7f 92       	push	r7
     60a:	8f 92       	push	r8
     60c:	9f 92       	push	r9
     60e:	af 92       	push	r10
     610:	bf 92       	push	r11
     612:	cf 92       	push	r12
     614:	df 92       	push	r13
     616:	ef 92       	push	r14
     618:	ff 92       	push	r15
     61a:	0f 93       	push	r16
     61c:	1f 93       	push	r17
     61e:	cf 93       	push	r28
     620:	df 93       	push	r29
     622:	56 2e       	mov	r5, r22
     624:	26 2f       	mov	r18, r22
     626:	30 e0       	ldi	r19, 0x00	; 0
     628:	49 01       	movw	r8, r18
     62a:	88 0c       	add	r8, r8
     62c:	99 1c       	adc	r9, r9
     62e:	88 0c       	add	r8, r8
     630:	99 1c       	adc	r9, r9
     632:	82 0e       	add	r8, r18
     634:	93 1e       	adc	r9, r19
     636:	18 14       	cp	r1, r8
     638:	19 04       	cpc	r1, r9
     63a:	0c f0       	brlt	.+2      	; 0x63e <nokia_lcd_write_char+0x3a>
     63c:	5b c0       	rjmp	.+182    	; 0x6f4 <nokia_lcd_write_char+0xf0>
     63e:	89 01       	movw	r16, r18
     640:	00 0f       	add	r16, r16
     642:	11 1f       	adc	r17, r17
     644:	00 0f       	add	r16, r16
     646:	11 1f       	adc	r17, r17
     648:	00 0f       	add	r16, r16
     64a:	11 1f       	adc	r17, r17
     64c:	02 1b       	sub	r16, r18
     64e:	13 0b       	sbc	r17, r19
     650:	61 2c       	mov	r6, r1
     652:	a8 2e       	mov	r10, r24
     654:	b1 2c       	mov	r11, r1
     656:	c5 01       	movw	r24, r10
     658:	80 97       	sbiw	r24, 0x20	; 32
     65a:	5c 01       	movw	r10, r24
     65c:	aa 0c       	add	r10, r10
     65e:	bb 1c       	adc	r11, r11
     660:	aa 0c       	add	r10, r10
     662:	bb 1c       	adc	r11, r11
     664:	a8 0e       	add	r10, r24
     666:	b9 1e       	adc	r11, r25
     668:	0f 2e       	mov	r0, r31
     66a:	f5 e8       	ldi	r31, 0x85	; 133
     66c:	cf 2e       	mov	r12, r31
     66e:	f9 e0       	ldi	r31, 0x09	; 9
     670:	df 2e       	mov	r13, r31
     672:	f0 2d       	mov	r31, r0
     674:	0f 2e       	mov	r0, r31
     676:	f4 e8       	ldi	r31, 0x84	; 132
     678:	ef 2e       	mov	r14, r31
     67a:	f9 e0       	ldi	r31, 0x09	; 9
     67c:	ff 2e       	mov	r15, r31
     67e:	f0 2d       	mov	r31, r0
     680:	2b c0       	rjmp	.+86     	; 0x6d8 <nokia_lcd_write_char+0xd4>
     682:	fe 01       	movw	r30, r28
     684:	24 91       	lpm	r18, Z
     686:	30 e0       	ldi	r19, 0x00	; 0
     688:	87 2d       	mov	r24, r7
     68a:	65 2d       	mov	r22, r5
     68c:	0e 94 1b 0c 	call	0x1836	; 0x1836 <__udivmodqi4>
     690:	02 c0       	rjmp	.+4      	; 0x696 <nokia_lcd_write_char+0x92>
     692:	35 95       	asr	r19
     694:	27 95       	ror	r18
     696:	8a 95       	dec	r24
     698:	e2 f7       	brpl	.-8      	; 0x692 <nokia_lcd_write_char+0x8e>
     69a:	20 ff       	sbrs	r18, 0
     69c:	09 c0       	rjmp	.+18     	; 0x6b0 <nokia_lcd_write_char+0xac>
     69e:	f6 01       	movw	r30, r12
     6a0:	60 81       	ld	r22, Z
     6a2:	67 0d       	add	r22, r7
     6a4:	f7 01       	movw	r30, r14
     6a6:	80 81       	ld	r24, Z
     6a8:	41 e0       	ldi	r20, 0x01	; 1
     6aa:	86 0d       	add	r24, r6
     6ac:	80 df       	rcall	.-256    	; 0x5ae <nokia_lcd_set_pixel>
     6ae:	08 c0       	rjmp	.+16     	; 0x6c0 <nokia_lcd_write_char+0xbc>
     6b0:	f6 01       	movw	r30, r12
     6b2:	60 81       	ld	r22, Z
     6b4:	67 0d       	add	r22, r7
     6b6:	f7 01       	movw	r30, r14
     6b8:	80 81       	ld	r24, Z
     6ba:	40 e0       	ldi	r20, 0x00	; 0
     6bc:	86 0d       	add	r24, r6
     6be:	77 df       	rcall	.-274    	; 0x5ae <nokia_lcd_set_pixel>
     6c0:	73 94       	inc	r7
     6c2:	87 2d       	mov	r24, r7
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	80 17       	cp	r24, r16
     6c8:	91 07       	cpc	r25, r17
     6ca:	dc f2       	brlt	.-74     	; 0x682 <nokia_lcd_write_char+0x7e>
     6cc:	63 94       	inc	r6
     6ce:	86 2d       	mov	r24, r6
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	88 15       	cp	r24, r8
     6d4:	99 05       	cpc	r25, r9
     6d6:	74 f4       	brge	.+28     	; 0x6f4 <nokia_lcd_write_char+0xf0>
     6d8:	10 16       	cp	r1, r16
     6da:	11 06       	cpc	r1, r17
     6dc:	bc f7       	brge	.-18     	; 0x6cc <nokia_lcd_write_char+0xc8>
     6de:	86 2d       	mov	r24, r6
     6e0:	65 2d       	mov	r22, r5
     6e2:	0e 94 1b 0c 	call	0x1836	; 0x1836 <__udivmodqi4>
     6e6:	e5 01       	movw	r28, r10
     6e8:	c8 0f       	add	r28, r24
     6ea:	d1 1d       	adc	r29, r1
     6ec:	ce 55       	subi	r28, 0x5E	; 94
     6ee:	df 4f       	sbci	r29, 0xFF	; 255
     6f0:	71 2c       	mov	r7, r1
     6f2:	c7 cf       	rjmp	.-114    	; 0x682 <nokia_lcd_write_char+0x7e>
     6f4:	80 91 84 09 	lds	r24, 0x0984	; 0x800984 <nokia_lcd+0x1f8>
     6f8:	91 e0       	ldi	r25, 0x01	; 1
     6fa:	98 0f       	add	r25, r24
     6fc:	85 2d       	mov	r24, r5
     6fe:	88 0f       	add	r24, r24
     700:	88 0f       	add	r24, r24
     702:	85 0d       	add	r24, r5
     704:	89 0f       	add	r24, r25
     706:	84 35       	cpi	r24, 0x54	; 84
     708:	18 f4       	brcc	.+6      	; 0x710 <nokia_lcd_write_char+0x10c>
     70a:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <nokia_lcd+0x1f8>
     70e:	0e c0       	rjmp	.+28     	; 0x72c <nokia_lcd_write_char+0x128>
     710:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <nokia_lcd+0x1f8>
     714:	e5 e8       	ldi	r30, 0x85	; 133
     716:	f9 e0       	ldi	r31, 0x09	; 9
     718:	80 81       	ld	r24, Z
     71a:	91 e0       	ldi	r25, 0x01	; 1
     71c:	98 0f       	add	r25, r24
     71e:	85 2d       	mov	r24, r5
     720:	88 0f       	add	r24, r24
     722:	88 0f       	add	r24, r24
     724:	88 0f       	add	r24, r24
     726:	85 19       	sub	r24, r5
     728:	89 0f       	add	r24, r25
     72a:	80 83       	st	Z, r24
     72c:	80 91 85 09 	lds	r24, 0x0985	; 0x800985 <nokia_lcd+0x1f9>
     730:	80 33       	cpi	r24, 0x30	; 48
     732:	20 f0       	brcs	.+8      	; 0x73c <nokia_lcd_write_char+0x138>
     734:	10 92 84 09 	sts	0x0984, r1	; 0x800984 <nokia_lcd+0x1f8>
     738:	10 92 85 09 	sts	0x0985, r1	; 0x800985 <nokia_lcd+0x1f9>
     73c:	df 91       	pop	r29
     73e:	cf 91       	pop	r28
     740:	1f 91       	pop	r17
     742:	0f 91       	pop	r16
     744:	ff 90       	pop	r15
     746:	ef 90       	pop	r14
     748:	df 90       	pop	r13
     74a:	cf 90       	pop	r12
     74c:	bf 90       	pop	r11
     74e:	af 90       	pop	r10
     750:	9f 90       	pop	r9
     752:	8f 90       	pop	r8
     754:	7f 90       	pop	r7
     756:	6f 90       	pop	r6
     758:	5f 90       	pop	r5
     75a:	08 95       	ret

0000075c <nokia_lcd_write_string>:
     75c:	1f 93       	push	r17
     75e:	cf 93       	push	r28
     760:	df 93       	push	r29
     762:	ec 01       	movw	r28, r24
     764:	88 81       	ld	r24, Y
     766:	88 23       	and	r24, r24
     768:	39 f0       	breq	.+14     	; 0x778 <nokia_lcd_write_string+0x1c>
     76a:	16 2f       	mov	r17, r22
     76c:	21 96       	adiw	r28, 0x01	; 1
     76e:	61 2f       	mov	r22, r17
     770:	49 df       	rcall	.-366    	; 0x604 <nokia_lcd_write_char>
     772:	89 91       	ld	r24, Y+
     774:	81 11       	cpse	r24, r1
     776:	fb cf       	rjmp	.-10     	; 0x76e <nokia_lcd_write_string+0x12>
     778:	df 91       	pop	r29
     77a:	cf 91       	pop	r28
     77c:	1f 91       	pop	r17
     77e:	08 95       	ret

00000780 <nokia_lcd_render>:
     780:	0f 93       	push	r16
     782:	1f 93       	push	r17
     784:	cf 93       	push	r28
     786:	df 93       	push	r29
     788:	80 e8       	ldi	r24, 0x80	; 128
     78a:	79 de       	rcall	.-782    	; 0x47e <write_cmd>
     78c:	80 e4       	ldi	r24, 0x40	; 64
     78e:	77 de       	rcall	.-786    	; 0x47e <write_cmd>
     790:	cc e8       	ldi	r28, 0x8C	; 140
     792:	d7 e0       	ldi	r29, 0x07	; 7
     794:	04 e8       	ldi	r16, 0x84	; 132
     796:	19 e0       	ldi	r17, 0x09	; 9
     798:	61 e0       	ldi	r22, 0x01	; 1
     79a:	89 91       	ld	r24, Y+
     79c:	52 de       	rcall	.-860    	; 0x442 <write>
     79e:	c0 17       	cp	r28, r16
     7a0:	d1 07       	cpc	r29, r17
     7a2:	d1 f7       	brne	.-12     	; 0x798 <nokia_lcd_render+0x18>
     7a4:	df 91       	pop	r29
     7a6:	cf 91       	pop	r28
     7a8:	1f 91       	pop	r17
     7aa:	0f 91       	pop	r16
     7ac:	08 95       	ret

000007ae <initUSART>:
     7ae:	81 30       	cpi	r24, 0x01	; 1
     7b0:	81 f0       	breq	.+32     	; 0x7d2 <initUSART+0x24>
     7b2:	e1 ec       	ldi	r30, 0xC1	; 193
     7b4:	f0 e0       	ldi	r31, 0x00	; 0
     7b6:	80 81       	ld	r24, Z
     7b8:	88 61       	ori	r24, 0x18	; 24
     7ba:	80 83       	st	Z, r24
     7bc:	e2 ec       	ldi	r30, 0xC2	; 194
     7be:	f0 e0       	ldi	r31, 0x00	; 0
     7c0:	80 81       	ld	r24, Z
     7c2:	86 60       	ori	r24, 0x06	; 6
     7c4:	80 83       	st	Z, r24
     7c6:	85 e0       	ldi	r24, 0x05	; 5
     7c8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     7cc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     7d0:	08 95       	ret
     7d2:	e9 ec       	ldi	r30, 0xC9	; 201
     7d4:	f0 e0       	ldi	r31, 0x00	; 0
     7d6:	80 81       	ld	r24, Z
     7d8:	88 61       	ori	r24, 0x18	; 24
     7da:	80 83       	st	Z, r24
     7dc:	ea ec       	ldi	r30, 0xCA	; 202
     7de:	f0 e0       	ldi	r31, 0x00	; 0
     7e0:	80 81       	ld	r24, Z
     7e2:	86 60       	ori	r24, 0x06	; 6
     7e4:	80 83       	st	Z, r24
     7e6:	85 e0       	ldi	r24, 0x05	; 5
     7e8:	80 93 cc 00 	sts	0x00CC, r24	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7e00cc>
     7ec:	10 92 cd 00 	sts	0x00CD, r1	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7e00cd>
     7f0:	08 95       	ret

000007f2 <USART_Flush>:
     7f2:	81 30       	cpi	r24, 0x01	; 1
     7f4:	29 f4       	brne	.+10     	; 0x800 <USART_Flush+0xe>
     7f6:	80 91 c8 00 	lds	r24, 0x00C8	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7e00c8>
     7fa:	88 23       	and	r24, r24
     7fc:	74 f0       	brlt	.+28     	; 0x81a <USART_Flush+0x28>
     7fe:	08 95       	ret
     800:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     804:	88 23       	and	r24, r24
     806:	8c f4       	brge	.+34     	; 0x82a <USART_Flush+0x38>
     808:	a6 ec       	ldi	r26, 0xC6	; 198
     80a:	b0 e0       	ldi	r27, 0x00	; 0
     80c:	e0 ec       	ldi	r30, 0xC0	; 192
     80e:	f0 e0       	ldi	r31, 0x00	; 0
     810:	8c 91       	ld	r24, X
     812:	80 81       	ld	r24, Z
     814:	88 23       	and	r24, r24
     816:	e4 f3       	brlt	.-8      	; 0x810 <USART_Flush+0x1e>
     818:	08 95       	ret
     81a:	ae ec       	ldi	r26, 0xCE	; 206
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 ec       	ldi	r30, 0xC8	; 200
     820:	f0 e0       	ldi	r31, 0x00	; 0
     822:	8c 91       	ld	r24, X
     824:	80 81       	ld	r24, Z
     826:	88 23       	and	r24, r24
     828:	e4 f3       	brlt	.-8      	; 0x822 <USART_Flush+0x30>
     82a:	08 95       	ret

0000082c <USART_Receive>:
     82c:	81 30       	cpi	r24, 0x01	; 1
     82e:	41 f0       	breq	.+16     	; 0x840 <USART_Receive+0x14>
     830:	e0 ec       	ldi	r30, 0xC0	; 192
     832:	f0 e0       	ldi	r31, 0x00	; 0
     834:	80 81       	ld	r24, Z
     836:	88 23       	and	r24, r24
     838:	ec f7       	brge	.-6      	; 0x834 <USART_Receive+0x8>
     83a:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     83e:	08 95       	ret
     840:	e8 ec       	ldi	r30, 0xC8	; 200
     842:	f0 e0       	ldi	r31, 0x00	; 0
     844:	80 81       	ld	r24, Z
     846:	88 23       	and	r24, r24
     848:	ec f7       	brge	.-6      	; 0x844 <USART_Receive+0x18>
     84a:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7e00ce>
     84e:	08 95       	ret

00000850 <Motor_Tick>:
}

void Motor_Tick()
{
     850:	df 92       	push	r13
     852:	ef 92       	push	r14
     854:	ff 92       	push	r15
     856:	0f 93       	push	r16
     858:	1f 93       	push	r17
     85a:	cf 93       	push	r28
     85c:	df 93       	push	r29
	char garage_button = (GetBit(~PIND, 3)); //if button is pressed then = 8
     85e:	89 b1       	in	r24, 0x09	; 9
	return (bin_value ? pin | (0x01 << number) : pin & ~(0x01 << number));
}

unsigned char GetBit(unsigned char port, unsigned char number)
{
	return ( port & (0x01 << number) );
     860:	80 95       	com	r24
     862:	38 2f       	mov	r19, r24
     864:	38 70       	andi	r19, 0x08	; 8
	char motion_sensor = (GetBit(~PIND, 2)); //if motion is sensed then = 4
     866:	89 b1       	in	r24, 0x09	; 9
     868:	80 95       	com	r24
     86a:	28 2f       	mov	r18, r24
     86c:	24 70       	andi	r18, 0x04	; 4
	switch(motor_state)
     86e:	e0 91 e0 09 	lds	r30, 0x09E0	; 0x8009e0 <motor_state>
     872:	8e 2f       	mov	r24, r30
     874:	90 e0       	ldi	r25, 0x00	; 0
     876:	8b 30       	cpi	r24, 0x0B	; 11
     878:	91 05       	cpc	r25, r1
     87a:	08 f0       	brcs	.+2      	; 0x87e <Motor_Tick+0x2e>
     87c:	96 c0       	rjmp	.+300    	; 0x9aa <Motor_Tick+0x15a>
     87e:	fc 01       	movw	r30, r24
     880:	ea 5b       	subi	r30, 0xBA	; 186
     882:	ff 4f       	sbci	r31, 0xFF	; 255
     884:	e4 c7       	rjmp	.+4040   	; 0x184e <__tablejump2__>
	{	
		case READ_MOTION:
			if(motion_sensor == 4){motor_state = MENU;}
     886:	24 30       	cpi	r18, 0x04	; 4
     888:	09 f0       	breq	.+2      	; 0x88c <Motor_Tick+0x3c>
     88a:	c6 c2       	rjmp	.+1420   	; 0xe18 <Motor_Tick+0x5c8>
     88c:	81 e0       	ldi	r24, 0x01	; 1
     88e:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     892:	b4 c2       	rjmp	.+1384   	; 0xdfc <Motor_Tick+0x5ac>
			else if(motion_sensor == 0){motor_state = READ_MOTION;}
			break;
		
		case MENU:
			if(menu_check == 1){motor_state = READ_KEY_WAIT;}
     894:	80 91 88 07 	lds	r24, 0x0788	; 0x800788 <menu_check>
     898:	81 30       	cpi	r24, 0x01	; 1
     89a:	21 f4       	brne	.+8      	; 0x8a4 <Motor_Tick+0x54>
     89c:	82 e0       	ldi	r24, 0x02	; 2
     89e:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     8a2:	c9 c2       	rjmp	.+1426   	; 0xe36 <Motor_Tick+0x5e6>
			else if(menu_check == 2){motor_state = CHANGE_PASS;}
     8a4:	82 30       	cpi	r24, 0x02	; 2
     8a6:	21 f4       	brne	.+8      	; 0x8b0 <Motor_Tick+0x60>
     8a8:	85 e0       	ldi	r24, 0x05	; 5
     8aa:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     8ae:	93 c2       	rjmp	.+1318   	; 0xdd6 <Motor_Tick+0x586>
			else if(menu_check == 3){motor_state = CURRENT_PASS;}
     8b0:	83 30       	cpi	r24, 0x03	; 3
     8b2:	09 f0       	breq	.+2      	; 0x8b6 <Motor_Tick+0x66>
     8b4:	a3 c2       	rjmp	.+1350   	; 0xdfc <Motor_Tick+0x5ac>
     8b6:	84 e0       	ldi	r24, 0x04	; 4
     8b8:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     8bc:	69 c2       	rjmp	.+1234   	; 0xd90 <Motor_Tick+0x540>
			else if(menu_check == 0){motor_state = MENU;}
			break;
			
		case READ_KEY_WAIT:
			if(cnt > 100){motor_state = READ_KEY_INIT; cnt = 0;}
     8be:	80 91 8a 07 	lds	r24, 0x078A	; 0x80078a <cnt>
     8c2:	85 36       	cpi	r24, 0x65	; 101
     8c4:	30 f0       	brcs	.+12     	; 0x8d2 <Motor_Tick+0x82>
     8c6:	83 e0       	ldi	r24, 0x03	; 3
     8c8:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     8cc:	10 92 8a 07 	sts	0x078A, r1	; 0x80078a <cnt>
     8d0:	a7 c2       	rjmp	.+1358   	; 0xe20 <Motor_Tick+0x5d0>
			else{motor_state = READ_KEY_WAIT; cnt = cnt + 1;}
     8d2:	8f 5f       	subi	r24, 0xFF	; 255
     8d4:	80 93 8a 07 	sts	0x078A, r24	; 0x80078a <cnt>
     8d8:	ae c2       	rjmp	.+1372   	; 0xe36 <Motor_Tick+0x5e6>
			break;
			
		case READ_KEY_INIT:
			if(checker == 1){motor_state = READ_KEY_WAIT_2;}
     8da:	80 91 87 07 	lds	r24, 0x0787	; 0x800787 <checker>
     8de:	81 30       	cpi	r24, 0x01	; 1
     8e0:	09 f0       	breq	.+2      	; 0x8e4 <Motor_Tick+0x94>
     8e2:	9e c2       	rjmp	.+1340   	; 0xe20 <Motor_Tick+0x5d0>
     8e4:	86 e0       	ldi	r24, 0x06	; 6
     8e6:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     8ea:	a5 c2       	rjmp	.+1354   	; 0xe36 <Motor_Tick+0x5e6>
			else if (checker == 0){motor_state = READ_KEY_INIT;}
			break;
			
		case CURRENT_PASS:
			if(cnt > 100){motor_state = MENU; cnt = 0;}
     8ec:	80 91 8a 07 	lds	r24, 0x078A	; 0x80078a <cnt>
     8f0:	85 36       	cpi	r24, 0x65	; 101
     8f2:	30 f0       	brcs	.+12     	; 0x900 <Motor_Tick+0xb0>
     8f4:	81 e0       	ldi	r24, 0x01	; 1
     8f6:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     8fa:	10 92 8a 07 	sts	0x078A, r1	; 0x80078a <cnt>
     8fe:	7e c2       	rjmp	.+1276   	; 0xdfc <Motor_Tick+0x5ac>
			else{motor_state = CURRENT_PASS; cnt = cnt + 1;}
     900:	8f 5f       	subi	r24, 0xFF	; 255
     902:	80 93 8a 07 	sts	0x078A, r24	; 0x80078a <cnt>
     906:	44 c2       	rjmp	.+1160   	; 0xd90 <Motor_Tick+0x540>
			break;
			
		case CHANGE_PASS:
			if(cnt > 100){motor_state = MENU; cnt = 0;}
     908:	80 91 8a 07 	lds	r24, 0x078A	; 0x80078a <cnt>
     90c:	85 36       	cpi	r24, 0x65	; 101
     90e:	30 f0       	brcs	.+12     	; 0x91c <Motor_Tick+0xcc>
     910:	81 e0       	ldi	r24, 0x01	; 1
     912:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     916:	10 92 8a 07 	sts	0x078A, r1	; 0x80078a <cnt>
     91a:	70 c2       	rjmp	.+1248   	; 0xdfc <Motor_Tick+0x5ac>
			else{motor_state = CHANGE_PASS; cnt = cnt + 1;}
     91c:	8f 5f       	subi	r24, 0xFF	; 255
     91e:	80 93 8a 07 	sts	0x078A, r24	; 0x80078a <cnt>
     922:	59 c2       	rjmp	.+1202   	; 0xdd6 <Motor_Tick+0x586>
			break;
			
		case READ_KEY_WAIT_2:
			if(cnt > 200){motor_state = READ_KEY_INIT_2; cnt = 0;}
     924:	80 91 8a 07 	lds	r24, 0x078A	; 0x80078a <cnt>
     928:	89 3c       	cpi	r24, 0xC9	; 201
     92a:	30 f0       	brcs	.+12     	; 0x938 <Motor_Tick+0xe8>
     92c:	87 e0       	ldi	r24, 0x07	; 7
     92e:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     932:	10 92 8a 07 	sts	0x078A, r1	; 0x80078a <cnt>
     936:	5c c2       	rjmp	.+1208   	; 0xdf0 <Motor_Tick+0x5a0>
			else{motor_state = READ_KEY_WAIT_2; cnt = cnt + 1;}
     938:	8f 5f       	subi	r24, 0xFF	; 255
     93a:	80 93 8a 07 	sts	0x078A, r24	; 0x80078a <cnt>
     93e:	7b c2       	rjmp	.+1270   	; 0xe36 <Motor_Tick+0x5e6>
			break;
			
		case READ_KEY_INIT_2:
			if(checker2 == 1){motor_state = READ_KEY;}
     940:	80 91 86 07 	lds	r24, 0x0786	; 0x800786 <checker2>
     944:	81 30       	cpi	r24, 0x01	; 1
     946:	09 f0       	breq	.+2      	; 0x94a <Motor_Tick+0xfa>
     948:	53 c2       	rjmp	.+1190   	; 0xdf0 <Motor_Tick+0x5a0>
     94a:	88 e0       	ldi	r24, 0x08	; 8
     94c:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     950:	5c c2       	rjmp	.+1208   	; 0xe0a <Motor_Tick+0x5ba>
			else if (checker2 == 0){motor_state = READ_KEY_INIT_2;}
			break;
			
		case READ_KEY:
			if (lr == 2){motor_state = UNLOCK;}
     952:	80 91 85 07 	lds	r24, 0x0785	; 0x800785 <lr>
     956:	82 30       	cpi	r24, 0x02	; 2
     958:	09 f0       	breq	.+2      	; 0x95c <Motor_Tick+0x10c>
     95a:	57 c2       	rjmp	.+1198   	; 0xe0a <Motor_Tick+0x5ba>
     95c:	8a e0       	ldi	r24, 0x0A	; 10
     95e:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     962:	44 c1       	rjmp	.+648    	; 0xbec <Motor_Tick+0x39c>
			else {motor_state = READ_KEY;}
			break;
		
		case UNLOCK:
			if(cnt > 200) {motor_state = LOCK; cnt = 0; motion_sensor = 0;}
     964:	80 91 8a 07 	lds	r24, 0x078A	; 0x80078a <cnt>
     968:	89 3c       	cpi	r24, 0xC9	; 201
     96a:	30 f0       	brcs	.+12     	; 0x978 <Motor_Tick+0x128>
     96c:	89 e0       	ldi	r24, 0x09	; 9
     96e:	80 93 e0 09 	sts	0x09E0, r24	; 0x8009e0 <motor_state>
     972:	10 92 8a 07 	sts	0x078A, r1	; 0x80078a <cnt>
     976:	5a c2       	rjmp	.+1204   	; 0xe2c <Motor_Tick+0x5dc>
			else {motor_state = UNLOCK; cnt = cnt + 1;}
     978:	8f 5f       	subi	r24, 0xFF	; 255
     97a:	80 93 8a 07 	sts	0x078A, r24	; 0x80078a <cnt>
			}
			numPhases = 1024; //(90 / 5.625) * 64
			break;
		
		case UNLOCK:
			if(lr){
     97e:	80 91 85 07 	lds	r24, 0x0785	; 0x800785 <lr>
     982:	88 23       	and	r24, r24
     984:	09 f4       	brne	.+2      	; 0x988 <Motor_Tick+0x138>
     986:	4a c1       	rjmp	.+660    	; 0xc1c <Motor_Tick+0x3cc>
     988:	31 c1       	rjmp	.+610    	; 0xbec <Motor_Tick+0x39c>
			if(cnt > 200) {motor_state = LOCK; cnt = 0; motion_sensor = 0;}
			else {motor_state = UNLOCK; cnt = cnt + 1;}
			break;
			
		case LOCK:
			if(cnt > 200) {motor_state = READ_MOTION; cnt = 0; lr = 0; motion_sensor = 0;}
     98a:	80 91 8a 07 	lds	r24, 0x078A	; 0x80078a <cnt>
     98e:	89 3c       	cpi	r24, 0xC9	; 201
     990:	40 f0       	brcs	.+16     	; 0x9a2 <Motor_Tick+0x152>
     992:	10 92 e0 09 	sts	0x09E0, r1	; 0x8009e0 <motor_state>
     996:	10 92 8a 07 	sts	0x078A, r1	; 0x80078a <cnt>
     99a:	10 92 85 07 	sts	0x0785, r1	; 0x800785 <lr>
			
			
	switch(motor_state)
	{
		case READ_MOTION:
			PORTD = SetBit(PORTD,4,0); //GARAGE LIGHT OFF
     99e:	5c 98       	cbi	0x0b, 4	; 11
     9a0:	07 c0       	rjmp	.+14     	; 0x9b0 <Motor_Tick+0x160>
			else {motor_state = UNLOCK; cnt = cnt + 1;}
			break;
			
		case LOCK:
			if(cnt > 200) {motor_state = READ_MOTION; cnt = 0; lr = 0; motion_sensor = 0;}
			else {motor_state = LOCK; cnt = cnt + 1;}
     9a2:	8f 5f       	subi	r24, 0xFF	; 255
     9a4:	80 93 8a 07 	sts	0x078A, r24	; 0x80078a <cnt>
     9a8:	41 c2       	rjmp	.+1154   	; 0xe2c <Motor_Tick+0x5dc>
			break;
		
		default:
			motor_state = READ_MOTION;
     9aa:	10 92 e0 09 	sts	0x09E0, r1	; 0x8009e0 <motor_state>
	switch(motor_state)
	{
		case READ_MOTION:
			PORTD = SetBit(PORTD,4,0); //GARAGE LIGHT OFF
			if (motion_sensor == 0){
				nokia_lcd_clear();
     9ae:	34 c2       	rjmp	.+1128   	; 0xe18 <Motor_Tick+0x5c8>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     9b0:	ed dd       	rcall	.-1062   	; 0x58c <nokia_lcd_clear>
     9b2:	04 e8       	ldi	r16, 0x84	; 132
     9b4:	19 e0       	ldi	r17, 0x09	; 9
     9b6:	83 e2       	ldi	r24, 0x23	; 35
     9b8:	f8 01       	movw	r30, r16
    nokia_lcd.cursor_y = y;
     9ba:	80 83       	st	Z, r24
     9bc:	c5 e8       	ldi	r28, 0x85	; 133
     9be:	d9 e0       	ldi	r29, 0x09	; 9
				nokia_lcd_set_cursor(35, 0);
				nokia_lcd_write_string("No", 2);
     9c0:	18 82       	st	Y, r1
     9c2:	62 e0       	ldi	r22, 0x02	; 2
     9c4:	8c e0       	ldi	r24, 0x0C	; 12
     9c6:	91 e0       	ldi	r25, 0x01	; 1
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     9c8:	c9 de       	rcall	.-622    	; 0x75c <nokia_lcd_write_string>
     9ca:	8f e0       	ldi	r24, 0x0F	; 15
     9cc:	f8 01       	movw	r30, r16
    nokia_lcd.cursor_y = y;
     9ce:	80 83       	st	Z, r24
     9d0:	84 e1       	ldi	r24, 0x14	; 20
				nokia_lcd_set_cursor(15, 20);
				nokia_lcd_write_string("Motion", 2);
     9d2:	88 83       	st	Y, r24
     9d4:	62 e0       	ldi	r22, 0x02	; 2
     9d6:	8f e0       	ldi	r24, 0x0F	; 15
				//nokia_lcd_set_cursor(0, 40);
				//nokia_lcd_write_char(motion_sensor + '0', 1);
				//nokia_lcd_write_char(garage_button + '0', 1);
			}
			nokia_lcd_render();
     9d8:	91 e0       	ldi	r25, 0x01	; 1
     9da:	c0 de       	rcall	.-640    	; 0x75c <nokia_lcd_write_string>
			break;
     9dc:	d1 de       	rcall	.-606    	; 0x780 <nokia_lcd_render>
			
		case MENU:
			menu_key = GetKeypadKey();
			if ((menu_key == 'A')){
				menu_check = 1;
     9de:	2b c2       	rjmp	.+1110   	; 0xe36 <Motor_Tick+0x5e6>
     9e0:	81 e0       	ldi	r24, 0x01	; 1
     9e2:	80 93 88 07 	sts	0x0788, r24	; 0x800788 <menu_check>
			}
			else if ((menu_key == 'B')){
     9e6:	0e c0       	rjmp	.+28     	; 0xa04 <Motor_Tick+0x1b4>
     9e8:	82 34       	cpi	r24, 0x42	; 66
				menu_check = 2;
     9ea:	21 f4       	brne	.+8      	; 0x9f4 <Motor_Tick+0x1a4>
     9ec:	82 e0       	ldi	r24, 0x02	; 2
     9ee:	80 93 88 07 	sts	0x0788, r24	; 0x800788 <menu_check>
			}
			else if ((menu_key == 'C')){
     9f2:	08 c0       	rjmp	.+16     	; 0xa04 <Motor_Tick+0x1b4>
     9f4:	83 34       	cpi	r24, 0x43	; 67
				menu_check = 3;
     9f6:	21 f4       	brne	.+8      	; 0xa00 <Motor_Tick+0x1b0>
     9f8:	83 e0       	ldi	r24, 0x03	; 3
     9fa:	80 93 88 07 	sts	0x0788, r24	; 0x800788 <menu_check>
			}
			else{
				menu_check = 0;
     9fe:	02 c0       	rjmp	.+4      	; 0xa04 <Motor_Tick+0x1b4>
			}
			nokia_lcd_clear();
     a00:	10 92 88 07 	sts	0x0788, r1	; 0x800788 <menu_check>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     a04:	c3 dd       	rcall	.-1146   	; 0x58c <nokia_lcd_clear>
     a06:	04 e8       	ldi	r16, 0x84	; 132
     a08:	19 e0       	ldi	r17, 0x09	; 9
     a0a:	f8 01       	movw	r30, r16
    nokia_lcd.cursor_y = y;
     a0c:	10 82       	st	Z, r1
     a0e:	c5 e8       	ldi	r28, 0x85	; 133
     a10:	d9 e0       	ldi	r29, 0x09	; 9
			nokia_lcd_set_cursor(0, 10);
			nokia_lcd_write_string("A-enter code", 1);
     a12:	8a e0       	ldi	r24, 0x0A	; 10
     a14:	88 83       	st	Y, r24
     a16:	61 e0       	ldi	r22, 0x01	; 1
     a18:	86 e1       	ldi	r24, 0x16	; 22
     a1a:	91 e0       	ldi	r25, 0x01	; 1
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     a1c:	9f de       	rcall	.-706    	; 0x75c <nokia_lcd_write_string>
    nokia_lcd.cursor_y = y;
     a1e:	f8 01       	movw	r30, r16
     a20:	10 82       	st	Z, r1
			nokia_lcd_set_cursor(0, 20);
			nokia_lcd_write_string("B-change code", 1);
     a22:	84 e1       	ldi	r24, 0x14	; 20
     a24:	88 83       	st	Y, r24
     a26:	61 e0       	ldi	r22, 0x01	; 1
     a28:	83 e2       	ldi	r24, 0x23	; 35
     a2a:	91 e0       	ldi	r25, 0x01	; 1
     a2c:	97 de       	rcall	.-722    	; 0x75c <nokia_lcd_write_string>
			nokia_lcd_set_cursor(0, 30);
			nokia_lcd_write_string("C-check code", 1);
     a2e:	f8 01       	movw	r30, r16
     a30:	10 82       	st	Z, r1
     a32:	8e e1       	ldi	r24, 0x1E	; 30
     a34:	88 83       	st	Y, r24
			nokia_lcd_render();
     a36:	61 e0       	ldi	r22, 0x01	; 1
		case READ_KEY_WAIT:
			break;	
			
		case READ_KEY_INIT:
			if((USART_HasReceived(0))){
				bt_check = 1;
     a38:	81 e3       	ldi	r24, 0x31	; 49
     a3a:	91 e0       	ldi	r25, 0x01	; 1
     a3c:	8f de       	rcall	.-738    	; 0x75c <nokia_lcd_write_string>
				key = USART_Receive(0);
     a3e:	a0 de       	rcall	.-704    	; 0x780 <nokia_lcd_render>
     a40:	fa c1       	rjmp	.+1012   	; 0xe36 <Motor_Tick+0x5e6>
     a42:	c1 e0       	ldi	r28, 0x01	; 1
     a44:	c0 93 89 07 	sts	0x0789, r28	; 0x800789 <bt_check>
				USART_Flush(0);
     a48:	80 e0       	ldi	r24, 0x00	; 0
     a4a:	f0 de       	rcall	.-544    	; 0x82c <USART_Receive>
				checker = 1;
     a4c:	80 93 e1 09 	sts	0x09E1, r24	; 0x8009e1 <key>
     a50:	80 e0       	ldi	r24, 0x00	; 0
			}
			else{
				bt_check = 0;
     a52:	cf de       	rcall	.-610    	; 0x7f2 <USART_Flush>
				key = GetKeypadKey();
     a54:	c0 93 87 07 	sts	0x0787, r28	; 0x800787 <checker>
     a58:	0d c0       	rjmp	.+26     	; 0xa74 <Motor_Tick+0x224>
				if ((key != '\0')){
     a5a:	10 92 89 07 	sts	0x0789, r1	; 0x800789 <bt_check>
					checker = 1;
     a5e:	12 dd       	rcall	.-1500   	; 0x484 <GetKeypadKey>
     a60:	80 93 e1 09 	sts	0x09E1, r24	; 0x8009e1 <key>
     a64:	88 23       	and	r24, r24
				}
				else{
					checker = 0;
     a66:	21 f0       	breq	.+8      	; 0xa70 <Motor_Tick+0x220>
     a68:	81 e0       	ldi	r24, 0x01	; 1
				}
			}
				
			nokia_lcd_clear();
     a6a:	80 93 87 07 	sts	0x0787, r24	; 0x800787 <checker>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     a6e:	02 c0       	rjmp	.+4      	; 0xa74 <Motor_Tick+0x224>
     a70:	10 92 87 07 	sts	0x0787, r1	; 0x800787 <checker>
     a74:	8b dd       	rcall	.-1258   	; 0x58c <nokia_lcd_clear>
     a76:	0f 2e       	mov	r0, r31
     a78:	f4 e8       	ldi	r31, 0x84	; 132
     a7a:	ef 2e       	mov	r14, r31
     a7c:	f9 e0       	ldi	r31, 0x09	; 9
    nokia_lcd.cursor_y = y;
     a7e:	ff 2e       	mov	r15, r31
     a80:	f0 2d       	mov	r31, r0
			nokia_lcd_set_cursor(30, 0);
			nokia_lcd_write_string("CODE?", 1);
     a82:	1e e1       	ldi	r17, 0x1E	; 30
     a84:	f7 01       	movw	r30, r14
     a86:	10 83       	st	Z, r17
     a88:	c5 e8       	ldi	r28, 0x85	; 133
     a8a:	d9 e0       	ldi	r29, 0x09	; 9
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     a8c:	18 82       	st	Y, r1
    nokia_lcd.cursor_y = y;
     a8e:	61 e0       	ldi	r22, 0x01	; 1
			nokia_lcd_set_cursor(10, 30);
			
			nokia_lcd_write_string("Entry: ", 1);
     a90:	8a e4       	ldi	r24, 0x4A	; 74
     a92:	91 e0       	ldi	r25, 0x01	; 1
     a94:	63 de       	rcall	.-826    	; 0x75c <nokia_lcd_write_string>
     a96:	8a e0       	ldi	r24, 0x0A	; 10
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     a98:	f7 01       	movw	r30, r14
     a9a:	80 83       	st	Z, r24
			nokia_lcd_set_cursor(65, 30);
			nokia_lcd_write_char(key, 1);
     a9c:	18 83       	st	Y, r17
     a9e:	61 e0       	ldi	r22, 0x01	; 1
     aa0:	8e e3       	ldi	r24, 0x3E	; 62
     aa2:	91 e0       	ldi	r25, 0x01	; 1
     aa4:	5b de       	rcall	.-842    	; 0x75c <nokia_lcd_write_string>
			nokia_lcd_render();
     aa6:	81 e4       	ldi	r24, 0x41	; 65
     aa8:	f7 01       	movw	r30, r14
			break;
     aaa:	80 83       	st	Z, r24
		case READ_KEY_WAIT_2:
			break;
			
		case READ_KEY_INIT_2:
			if((USART_HasReceived(0))){
				bt_check = 1;
     aac:	18 83       	st	Y, r17
     aae:	61 e0       	ldi	r22, 0x01	; 1
				key2 = USART_Receive(0);
     ab0:	80 91 e1 09 	lds	r24, 0x09E1	; 0x8009e1 <key>
     ab4:	a7 dd       	rcall	.-1202   	; 0x604 <nokia_lcd_write_char>
     ab6:	64 de       	rcall	.-824    	; 0x780 <nokia_lcd_render>
     ab8:	be c1       	rjmp	.+892    	; 0xe36 <Motor_Tick+0x5e6>
				USART_Flush(0);
     aba:	c1 e0       	ldi	r28, 0x01	; 1
     abc:	c0 93 89 07 	sts	0x0789, r28	; 0x800789 <bt_check>
				checker2 = 1;
     ac0:	80 e0       	ldi	r24, 0x00	; 0
     ac2:	b4 de       	rcall	.-664    	; 0x82c <USART_Receive>
			}
			else{
				
				if(bt_check == 1){bt_check = 1;}
     ac4:	80 93 e6 09 	sts	0x09E6, r24	; 0x8009e6 <key2>
     ac8:	80 e0       	ldi	r24, 0x00	; 0
     aca:	93 de       	rcall	.-730    	; 0x7f2 <USART_Flush>
				else{bt_check = 0;}
     acc:	c0 93 86 07 	sts	0x0786, r28	; 0x800786 <checker2>
					
				key2 = GetKeypadKey();
     ad0:	11 c0       	rjmp	.+34     	; 0xaf4 <Motor_Tick+0x2a4>
     ad2:	80 91 89 07 	lds	r24, 0x0789	; 0x800789 <bt_check>
     ad6:	81 30       	cpi	r24, 0x01	; 1
				if ((key2 != '\0')){
     ad8:	11 f0       	breq	.+4      	; 0xade <Motor_Tick+0x28e>
     ada:	10 92 89 07 	sts	0x0789, r1	; 0x800789 <bt_check>
					checker2 = 1;
     ade:	d2 dc       	rcall	.-1628   	; 0x484 <GetKeypadKey>
     ae0:	80 93 e6 09 	sts	0x09E6, r24	; 0x8009e6 <key2>
				}
				else{
					checker2 = 0;
     ae4:	88 23       	and	r24, r24
				}
			}
			
			nokia_lcd_clear();
     ae6:	21 f0       	breq	.+8      	; 0xaf0 <Motor_Tick+0x2a0>
     ae8:	81 e0       	ldi	r24, 0x01	; 1
     aea:	80 93 86 07 	sts	0x0786, r24	; 0x800786 <checker2>
     aee:	02 c0       	rjmp	.+4      	; 0xaf4 <Motor_Tick+0x2a4>
     af0:	10 92 86 07 	sts	0x0786, r1	; 0x800786 <checker2>
     af4:	4b dd       	rcall	.-1386   	; 0x58c <nokia_lcd_clear>
     af6:	04 e8       	ldi	r16, 0x84	; 132
    nokia_lcd.cursor_y = y;
     af8:	19 e0       	ldi	r17, 0x09	; 9
     afa:	0f 2e       	mov	r0, r31
     afc:	fa e0       	ldi	r31, 0x0A	; 10
			nokia_lcd_set_cursor(10, 0);
			nokia_lcd_write_string("PASSCODE?", 1);
     afe:	ff 2e       	mov	r15, r31
     b00:	f0 2d       	mov	r31, r0
     b02:	f8 01       	movw	r30, r16
     b04:	f0 82       	st	Z, r15
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     b06:	c5 e8       	ldi	r28, 0x85	; 133
     b08:	d9 e0       	ldi	r29, 0x09	; 9
    nokia_lcd.cursor_y = y;
     b0a:	18 82       	st	Y, r1
     b0c:	61 e0       	ldi	r22, 0x01	; 1
     b0e:	86 e4       	ldi	r24, 0x46	; 70
			
			nokia_lcd_set_cursor(10, 30);
			nokia_lcd_write_string("Entry: ", 1);
     b10:	91 e0       	ldi	r25, 0x01	; 1
     b12:	24 de       	rcall	.-952    	; 0x75c <nokia_lcd_write_string>
     b14:	f8 01       	movw	r30, r16
     b16:	f0 82       	st	Z, r15
     b18:	0f 2e       	mov	r0, r31
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     b1a:	fe e1       	ldi	r31, 0x1E	; 30
     b1c:	ff 2e       	mov	r15, r31
     b1e:	f0 2d       	mov	r31, r0
    nokia_lcd.cursor_y = y;
     b20:	f8 82       	st	Y, r15
			nokia_lcd_set_cursor(65, 30);
			nokia_lcd_write_char(key, 1);
     b22:	61 e0       	ldi	r22, 0x01	; 1
     b24:	8e e3       	ldi	r24, 0x3E	; 62
     b26:	91 e0       	ldi	r25, 0x01	; 1
     b28:	19 de       	rcall	.-974    	; 0x75c <nokia_lcd_write_string>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     b2a:	81 e4       	ldi	r24, 0x41	; 65
     b2c:	f8 01       	movw	r30, r16
    nokia_lcd.cursor_y = y;
     b2e:	80 83       	st	Z, r24
			nokia_lcd_set_cursor(70, 30);
			nokia_lcd_write_char(key2, 1);
     b30:	f8 82       	st	Y, r15
     b32:	61 e0       	ldi	r22, 0x01	; 1
     b34:	80 91 e1 09 	lds	r24, 0x09E1	; 0x8009e1 <key>
     b38:	65 dd       	rcall	.-1334   	; 0x604 <nokia_lcd_write_char>
			nokia_lcd_render();
     b3a:	86 e4       	ldi	r24, 0x46	; 70
     b3c:	f8 01       	movw	r30, r16
			break;
     b3e:	80 83       	st	Z, r24
			
			
		case READ_KEY:
			if(((key == password) && (key2 == password2)) || (bt_check)){ //LOCK = 1 2
     b40:	f8 82       	st	Y, r15
     b42:	61 e0       	ldi	r22, 0x01	; 1
     b44:	80 91 e6 09 	lds	r24, 0x09E6	; 0x8009e6 <key2>
     b48:	5d dd       	rcall	.-1350   	; 0x604 <nokia_lcd_write_char>
     b4a:	1a de       	rcall	.-972    	; 0x780 <nokia_lcd_render>
     b4c:	74 c1       	rjmp	.+744    	; 0xe36 <Motor_Tick+0x5e6>
     b4e:	90 91 e6 09 	lds	r25, 0x09E6	; 0x8009e6 <key2>
				lr = 2;
     b52:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     b56:	98 17       	cp	r25, r24
			}
			else{
				nokia_lcd_clear();
     b58:	21 f0       	breq	.+8      	; 0xb62 <Motor_Tick+0x312>
     b5a:	80 91 89 07 	lds	r24, 0x0789	; 0x800789 <bt_check>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     b5e:	88 23       	and	r24, r24
     b60:	21 f0       	breq	.+8      	; 0xb6a <Motor_Tick+0x31a>
     b62:	82 e0       	ldi	r24, 0x02	; 2
    nokia_lcd.cursor_y = y;
     b64:	80 93 85 07 	sts	0x0785, r24	; 0x800785 <lr>
     b68:	34 c0       	rjmp	.+104    	; 0xbd2 <Motor_Tick+0x382>
     b6a:	10 dd       	rcall	.-1504   	; 0x58c <nokia_lcd_clear>
     b6c:	04 e8       	ldi	r16, 0x84	; 132
     b6e:	19 e0       	ldi	r17, 0x09	; 9
				nokia_lcd_set_cursor(0, 10);
				nokia_lcd_write_string("WRONG PASSWORD", 1);
     b70:	f8 01       	movw	r30, r16
     b72:	10 82       	st	Z, r1
     b74:	c5 e8       	ldi	r28, 0x85	; 133
     b76:	d9 e0       	ldi	r29, 0x09	; 9
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     b78:	0f 2e       	mov	r0, r31
     b7a:	fa e0       	ldi	r31, 0x0A	; 10
    nokia_lcd.cursor_y = y;
     b7c:	ff 2e       	mov	r15, r31
     b7e:	f0 2d       	mov	r31, r0
				nokia_lcd_set_cursor(0, 20);
				nokia_lcd_write_string("RESTART BOARD", 1);
     b80:	f8 82       	st	Y, r15
     b82:	61 e0       	ldi	r22, 0x01	; 1
     b84:	80 e5       	ldi	r24, 0x50	; 80
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     b86:	91 e0       	ldi	r25, 0x01	; 1
     b88:	e9 dd       	rcall	.-1070   	; 0x75c <nokia_lcd_write_string>
    nokia_lcd.cursor_y = y;
     b8a:	f8 01       	movw	r30, r16
     b8c:	10 82       	st	Z, r1
     b8e:	84 e1       	ldi	r24, 0x14	; 20
     b90:	88 83       	st	Y, r24
     b92:	61 e0       	ldi	r22, 0x01	; 1
				nokia_lcd_set_cursor(10, 30);
				nokia_lcd_write_string("Entry: ", 1);
     b94:	8f e5       	ldi	r24, 0x5F	; 95
     b96:	91 e0       	ldi	r25, 0x01	; 1
     b98:	e1 dd       	rcall	.-1086   	; 0x75c <nokia_lcd_write_string>
     b9a:	f8 01       	movw	r30, r16
     b9c:	f0 82       	st	Z, r15
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     b9e:	0f 2e       	mov	r0, r31
     ba0:	fe e1       	ldi	r31, 0x1E	; 30
     ba2:	ff 2e       	mov	r15, r31
    nokia_lcd.cursor_y = y;
     ba4:	f0 2d       	mov	r31, r0
				nokia_lcd_set_cursor(65, 30);
				nokia_lcd_write_char(key, 1);
     ba6:	f8 82       	st	Y, r15
     ba8:	61 e0       	ldi	r22, 0x01	; 1
     baa:	8e e3       	ldi	r24, 0x3E	; 62
     bac:	91 e0       	ldi	r25, 0x01	; 1
     bae:	d6 dd       	rcall	.-1108   	; 0x75c <nokia_lcd_write_string>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     bb0:	81 e4       	ldi	r24, 0x41	; 65
     bb2:	f8 01       	movw	r30, r16
     bb4:	80 83       	st	Z, r24
    nokia_lcd.cursor_y = y;
     bb6:	f8 82       	st	Y, r15
				nokia_lcd_set_cursor(70, 30);
				nokia_lcd_write_char(key2, 1);
     bb8:	61 e0       	ldi	r22, 0x01	; 1
     bba:	80 91 e1 09 	lds	r24, 0x09E1	; 0x8009e1 <key>
     bbe:	22 dd       	rcall	.-1468   	; 0x604 <nokia_lcd_write_char>
     bc0:	86 e4       	ldi	r24, 0x46	; 70
				nokia_lcd_render();
     bc2:	f8 01       	movw	r30, r16
     bc4:	80 83       	st	Z, r24
			}
			numPhases = 1024; //(90 / 5.625) * 64
     bc6:	f8 82       	st	Y, r15
     bc8:	61 e0       	ldi	r22, 0x01	; 1
     bca:	80 91 e6 09 	lds	r24, 0x09E6	; 0x8009e6 <key2>
     bce:	1a dd       	rcall	.-1484   	; 0x604 <nokia_lcd_write_char>
     bd0:	d7 dd       	rcall	.-1106   	; 0x780 <nokia_lcd_render>
     bd2:	80 e0       	ldi	r24, 0x00	; 0
     bd4:	94 e0       	ldi	r25, 0x04	; 4
     bd6:	a0 e0       	ldi	r26, 0x00	; 0
     bd8:	b0 e0       	ldi	r27, 0x00	; 0
     bda:	80 93 e2 09 	sts	0x09E2, r24	; 0x8009e2 <numPhases>
			break;
     bde:	90 93 e3 09 	sts	0x09E3, r25	; 0x8009e3 <numPhases+0x1>
		
		case UNLOCK:
			if(lr){
				if (temp < 7) {temp = temp + 1;}
     be2:	a0 93 e4 09 	sts	0x09E4, r26	; 0x8009e4 <numPhases+0x2>
     be6:	b0 93 e5 09 	sts	0x09E5, r27	; 0x8009e5 <numPhases+0x3>
     bea:	25 c1       	rjmp	.+586    	; 0xe36 <Motor_Tick+0x5e6>
     bec:	80 91 8b 07 	lds	r24, 0x078B	; 0x80078b <temp>
				else {temp = 0;}
     bf0:	87 30       	cpi	r24, 0x07	; 7
     bf2:	20 f4       	brcc	.+8      	; 0xbfc <Motor_Tick+0x3ac>
			
				if((numPhases - 1) == 0)
     bf4:	8f 5f       	subi	r24, 0xFF	; 255
     bf6:	80 93 8b 07 	sts	0x078B, r24	; 0x80078b <temp>
     bfa:	02 c0       	rjmp	.+4      	; 0xc00 <Motor_Tick+0x3b0>
     bfc:	10 92 8b 07 	sts	0x078B, r1	; 0x80078b <temp>
     c00:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <numPhases>
     c04:	90 91 e3 09 	lds	r25, 0x09E3	; 0x8009e3 <numPhases+0x1>
     c08:	a0 91 e4 09 	lds	r26, 0x09E4	; 0x8009e4 <numPhases+0x2>
				{
					lr = 0;
     c0c:	b0 91 e5 09 	lds	r27, 0x09E5	; 0x8009e5 <numPhases+0x3>
				}
			} 
			if(garage_button == 8){PORTA = (loc[temp] << 4); PORTD = ((0x01 << 4) | PORTD); room = 2;}
     c10:	01 97       	sbiw	r24, 0x01	; 1
     c12:	a1 05       	cpc	r26, r1
     c14:	b1 05       	cpc	r27, r1
     c16:	11 f4       	brne	.+4      	; 0xc1c <Motor_Tick+0x3cc>
     c18:	10 92 85 07 	sts	0x0785, r1	; 0x800785 <lr>
     c1c:	38 30       	cpi	r19, 0x08	; 8
     c1e:	71 f4       	brne	.+28     	; 0xc3c <Motor_Tick+0x3ec>
     c20:	e0 91 8b 07 	lds	r30, 0x078B	; 0x80078b <temp>
     c24:	f0 e0       	ldi	r31, 0x00	; 0
     c26:	ee 5f       	subi	r30, 0xFE	; 254
     c28:	fe 4f       	sbci	r31, 0xFE	; 254
     c2a:	80 81       	ld	r24, Z
			else{PORTA = loc[temp]; PORTD = SetBit(PORTD,4,0); room = 1;}
     c2c:	82 95       	swap	r24
     c2e:	80 7f       	andi	r24, 0xF0	; 240
     c30:	82 b9       	out	0x02, r24	; 2
     c32:	5c 9a       	sbi	0x0b, 4	; 11
     c34:	82 e0       	ldi	r24, 0x02	; 2
     c36:	80 93 84 07 	sts	0x0784, r24	; 0x800784 <room>
     c3a:	0b c0       	rjmp	.+22     	; 0xc52 <Motor_Tick+0x402>
     c3c:	e0 91 8b 07 	lds	r30, 0x078B	; 0x80078b <temp>
				
			nokia_lcd_clear();
     c40:	f0 e0       	ldi	r31, 0x00	; 0
     c42:	ee 5f       	subi	r30, 0xFE	; 254
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     c44:	fe 4f       	sbci	r31, 0xFE	; 254
     c46:	80 81       	ld	r24, Z
     c48:	82 b9       	out	0x02, r24	; 2
     c4a:	5c 98       	cbi	0x0b, 4	; 11
     c4c:	81 e0       	ldi	r24, 0x01	; 1
     c4e:	80 93 84 07 	sts	0x0784, r24	; 0x800784 <room>
    nokia_lcd.cursor_y = y;
     c52:	9c dc       	rcall	.-1736   	; 0x58c <nokia_lcd_clear>
     c54:	04 e8       	ldi	r16, 0x84	; 132
     c56:	19 e0       	ldi	r17, 0x09	; 9
			nokia_lcd_set_cursor(10, 20);
			nokia_lcd_write_string("UNLOCKING!", 1);
     c58:	0f 2e       	mov	r0, r31
     c5a:	fa e0       	ldi	r31, 0x0A	; 10
     c5c:	ff 2e       	mov	r15, r31
     c5e:	f0 2d       	mov	r31, r0
     c60:	f8 01       	movw	r30, r16
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     c62:	f0 82       	st	Z, r15
     c64:	c5 e8       	ldi	r28, 0x85	; 133
    nokia_lcd.cursor_y = y;
     c66:	d9 e0       	ldi	r29, 0x09	; 9
     c68:	84 e1       	ldi	r24, 0x14	; 20
     c6a:	88 83       	st	Y, r24
     c6c:	61 e0       	ldi	r22, 0x01	; 1
			nokia_lcd_set_cursor(10, 30);
			nokia_lcd_write_string("Entry: ", 1);
     c6e:	8d e6       	ldi	r24, 0x6D	; 109
     c70:	91 e0       	ldi	r25, 0x01	; 1
     c72:	74 dd       	rcall	.-1304   	; 0x75c <nokia_lcd_write_string>
     c74:	f8 01       	movw	r30, r16
     c76:	f0 82       	st	Z, r15
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     c78:	0f 2e       	mov	r0, r31
     c7a:	fe e1       	ldi	r31, 0x1E	; 30
     c7c:	ef 2e       	mov	r14, r31
     c7e:	f0 2d       	mov	r31, r0
    nokia_lcd.cursor_y = y;
     c80:	e8 82       	st	Y, r14
			nokia_lcd_set_cursor(65, 30);
			nokia_lcd_write_char(key, 1);
     c82:	61 e0       	ldi	r22, 0x01	; 1
     c84:	8e e3       	ldi	r24, 0x3E	; 62
     c86:	91 e0       	ldi	r25, 0x01	; 1
     c88:	69 dd       	rcall	.-1326   	; 0x75c <nokia_lcd_write_string>
     c8a:	0f 2e       	mov	r0, r31
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     c8c:	f1 e4       	ldi	r31, 0x41	; 65
     c8e:	df 2e       	mov	r13, r31
     c90:	f0 2d       	mov	r31, r0
    nokia_lcd.cursor_y = y;
     c92:	f8 01       	movw	r30, r16
			nokia_lcd_set_cursor(70, 30);
			nokia_lcd_write_char(key2, 1);
     c94:	d0 82       	st	Z, r13
     c96:	e8 82       	st	Y, r14
     c98:	61 e0       	ldi	r22, 0x01	; 1
     c9a:	80 91 e1 09 	lds	r24, 0x09E1	; 0x8009e1 <key>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     c9e:	b2 dc       	rcall	.-1692   	; 0x604 <nokia_lcd_write_char>
     ca0:	86 e4       	ldi	r24, 0x46	; 70
    nokia_lcd.cursor_y = y;
     ca2:	f8 01       	movw	r30, r16
     ca4:	80 83       	st	Z, r24
     ca6:	e8 82       	st	Y, r14
     ca8:	61 e0       	ldi	r22, 0x01	; 1
     caa:	80 91 e6 09 	lds	r24, 0x09E6	; 0x8009e6 <key2>
			nokia_lcd_set_cursor(10, 40);
			nokia_lcd_write_string("Room: ", 1);
     cae:	aa dc       	rcall	.-1708   	; 0x604 <nokia_lcd_write_char>
     cb0:	f8 01       	movw	r30, r16
     cb2:	f0 82       	st	Z, r15
     cb4:	0f 2e       	mov	r0, r31
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     cb6:	f8 e2       	ldi	r31, 0x28	; 40
     cb8:	ff 2e       	mov	r15, r31
    nokia_lcd.cursor_y = y;
     cba:	f0 2d       	mov	r31, r0
			nokia_lcd_set_cursor(65, 40);
			nokia_lcd_write_char(room + '0', 1);
     cbc:	f8 82       	st	Y, r15
     cbe:	61 e0       	ldi	r22, 0x01	; 1
     cc0:	88 e7       	ldi	r24, 0x78	; 120
     cc2:	91 e0       	ldi	r25, 0x01	; 1
     cc4:	4b dd       	rcall	.-1386   	; 0x75c <nokia_lcd_write_string>
     cc6:	f8 01       	movw	r30, r16
			nokia_lcd_render();
     cc8:	d0 82       	st	Z, r13
     cca:	f8 82       	st	Y, r15
			break;
     ccc:	80 91 84 07 	lds	r24, 0x0784	; 0x800784 <room>
			
		case LOCK:
			if(lr){
				if (temp > 0) {temp = temp - 1;}
     cd0:	61 e0       	ldi	r22, 0x01	; 1
     cd2:	80 5d       	subi	r24, 0xD0	; 208
     cd4:	97 dc       	rcall	.-1746   	; 0x604 <nokia_lcd_write_char>
     cd6:	54 dd       	rcall	.-1368   	; 0x780 <nokia_lcd_render>
     cd8:	ae c0       	rjmp	.+348    	; 0xe36 <Motor_Tick+0x5e6>
     cda:	80 91 8b 07 	lds	r24, 0x078B	; 0x80078b <temp>
				else {temp = 7;}
     cde:	88 23       	and	r24, r24
     ce0:	21 f0       	breq	.+8      	; 0xcea <Motor_Tick+0x49a>
			
				if((numPhases - 1) == 0)
     ce2:	81 50       	subi	r24, 0x01	; 1
     ce4:	80 93 8b 07 	sts	0x078B, r24	; 0x80078b <temp>
     ce8:	03 c0       	rjmp	.+6      	; 0xcf0 <Motor_Tick+0x4a0>
     cea:	87 e0       	ldi	r24, 0x07	; 7
     cec:	80 93 8b 07 	sts	0x078B, r24	; 0x80078b <temp>
     cf0:	80 91 e2 09 	lds	r24, 0x09E2	; 0x8009e2 <numPhases>
     cf4:	90 91 e3 09 	lds	r25, 0x09E3	; 0x8009e3 <numPhases+0x1>
				{
					lr = 0;
     cf8:	a0 91 e4 09 	lds	r26, 0x09E4	; 0x8009e4 <numPhases+0x2>
				}
				
			}
			if(garage_button == 8){PORTA = (loc[temp] << 4); PORTD = ((0x01 << 4) | PORTD); room = 2;}
     cfc:	b0 91 e5 09 	lds	r27, 0x09E5	; 0x8009e5 <numPhases+0x3>
     d00:	01 97       	sbiw	r24, 0x01	; 1
     d02:	a1 05       	cpc	r26, r1
     d04:	b1 05       	cpc	r27, r1
     d06:	11 f4       	brne	.+4      	; 0xd0c <Motor_Tick+0x4bc>
     d08:	10 92 85 07 	sts	0x0785, r1	; 0x800785 <lr>
     d0c:	38 30       	cpi	r19, 0x08	; 8
     d0e:	71 f4       	brne	.+28     	; 0xd2c <Motor_Tick+0x4dc>
     d10:	e0 91 8b 07 	lds	r30, 0x078B	; 0x80078b <temp>
     d14:	f0 e0       	ldi	r31, 0x00	; 0
			else{PORTA = loc[temp]; PORTD = SetBit(PORTD,4,0); room = 1;}
     d16:	ee 5f       	subi	r30, 0xFE	; 254
     d18:	fe 4f       	sbci	r31, 0xFE	; 254
     d1a:	80 81       	ld	r24, Z
     d1c:	82 95       	swap	r24
     d1e:	80 7f       	andi	r24, 0xF0	; 240
     d20:	82 b9       	out	0x02, r24	; 2
     d22:	5c 9a       	sbi	0x0b, 4	; 11
     d24:	82 e0       	ldi	r24, 0x02	; 2
			
			nokia_lcd_clear();
     d26:	80 93 84 07 	sts	0x0784, r24	; 0x800784 <room>
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     d2a:	0b c0       	rjmp	.+22     	; 0xd42 <Motor_Tick+0x4f2>
     d2c:	e0 91 8b 07 	lds	r30, 0x078B	; 0x80078b <temp>
     d30:	f0 e0       	ldi	r31, 0x00	; 0
     d32:	ee 5f       	subi	r30, 0xFE	; 254
     d34:	fe 4f       	sbci	r31, 0xFE	; 254
     d36:	80 81       	ld	r24, Z
     d38:	82 b9       	out	0x02, r24	; 2
    nokia_lcd.cursor_y = y;
     d3a:	5c 98       	cbi	0x0b, 4	; 11
     d3c:	81 e0       	ldi	r24, 0x01	; 1
     d3e:	80 93 84 07 	sts	0x0784, r24	; 0x800784 <room>
			nokia_lcd_set_cursor(10, 20);
			nokia_lcd_write_string("LOCKING!", 1);
     d42:	24 dc       	rcall	.-1976   	; 0x58c <nokia_lcd_clear>
     d44:	04 e8       	ldi	r16, 0x84	; 132
     d46:	19 e0       	ldi	r17, 0x09	; 9
     d48:	0f 2e       	mov	r0, r31
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     d4a:	fa e0       	ldi	r31, 0x0A	; 10
     d4c:	ff 2e       	mov	r15, r31
    nokia_lcd.cursor_y = y;
     d4e:	f0 2d       	mov	r31, r0
     d50:	f8 01       	movw	r30, r16
     d52:	f0 82       	st	Z, r15
     d54:	c5 e8       	ldi	r28, 0x85	; 133
			nokia_lcd_set_cursor(10, 40);
			nokia_lcd_write_string("Room: ", 1);
     d56:	d9 e0       	ldi	r29, 0x09	; 9
     d58:	84 e1       	ldi	r24, 0x14	; 20
     d5a:	88 83       	st	Y, r24
        nokia_lcd_write_char(*str++, scale);
}
  
void nokia_lcd_set_cursor(uint8_t x, uint8_t y)
{
    nokia_lcd.cursor_x = x;
     d5c:	61 e0       	ldi	r22, 0x01	; 1
    nokia_lcd.cursor_y = y;
     d5e:	8f e6       	ldi	r24, 0x6F	; 111
			nokia_lcd_set_cursor(65, 40);
			nokia_lcd_write_char(room + '0', 1);
     d60:	91 e0       	ldi	r25, 0x01	; 1
     d62:	fc dc       	rcall	.-1544   	; 0x75c <nokia_lcd_write_string>
     d64:	f8 01       	movw	r30, r16
     d66:	f0 82       	st	Z, r15
     d68:	0f 2e       	mov	r0, r31
     d6a:	f8 e2       	ldi	r31, 0x28	; 40
			nokia_lcd_render();
     d6c:	ff 2e       	mov	r15, r31
			break;
		
		default:
			break;
	}
}
     d6e:	f0 2d       	mov	r31, r0
     d70:	f8 82       	st	Y, r15
     d72:	61 e0       	ldi	r22, 0x01	; 1
     d74:	88 e7       	ldi	r24, 0x78	; 120
     d76:	91 e0       	ldi	r25, 0x01	; 1
     d78:	f1 dc       	rcall	.-1566   	; 0x75c <nokia_lcd_write_string>
     d7a:	81 e4       	ldi	r24, 0x41	; 65
     d7c:	f8 01       	movw	r30, r16
     d7e:	80 83       	st	Z, r24
     d80:	f8 82       	st	Y, r15
     d82:	80 91 84 07 	lds	r24, 0x0784	; 0x800784 <room>
     d86:	61 e0       	ldi	r22, 0x01	; 1
     d88:	80 5d       	subi	r24, 0xD0	; 208
     d8a:	3c dc       	rcall	.-1928   	; 0x604 <nokia_lcd_write_char>
     d8c:	f9 dc       	rcall	.-1550   	; 0x780 <nokia_lcd_render>
     d8e:	53 c0       	rjmp	.+166    	; 0xe36 <Motor_Tick+0x5e6>
     d90:	fd db       	rcall	.-2054   	; 0x58c <nokia_lcd_clear>
     d92:	0f 2e       	mov	r0, r31
     d94:	f4 e8       	ldi	r31, 0x84	; 132
     d96:	ef 2e       	mov	r14, r31
     d98:	f9 e0       	ldi	r31, 0x09	; 9
     d9a:	ff 2e       	mov	r15, r31
     d9c:	f0 2d       	mov	r31, r0
     d9e:	85 e0       	ldi	r24, 0x05	; 5
     da0:	f7 01       	movw	r30, r14
     da2:	80 83       	st	Z, r24
     da4:	c5 e8       	ldi	r28, 0x85	; 133
     da6:	d9 e0       	ldi	r29, 0x09	; 9
     da8:	1a e0       	ldi	r17, 0x0A	; 10
     daa:	18 83       	st	Y, r17
     dac:	61 e0       	ldi	r22, 0x01	; 1
     dae:	8f e7       	ldi	r24, 0x7F	; 127
     db0:	91 e0       	ldi	r25, 0x01	; 1
     db2:	d4 dc       	rcall	.-1624   	; 0x75c <nokia_lcd_write_string>
     db4:	f7 01       	movw	r30, r14
     db6:	10 83       	st	Z, r17
     db8:	14 e1       	ldi	r17, 0x14	; 20
     dba:	18 83       	st	Y, r17
     dbc:	61 e0       	ldi	r22, 0x01	; 1
     dbe:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <password>
     dc2:	20 dc       	rcall	.-1984   	; 0x604 <nokia_lcd_write_char>
     dc4:	f7 01       	movw	r30, r14
     dc6:	10 83       	st	Z, r17
     dc8:	18 83       	st	Y, r17
     dca:	61 e0       	ldi	r22, 0x01	; 1
     dcc:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     dd0:	19 dc       	rcall	.-1998   	; 0x604 <nokia_lcd_write_char>
     dd2:	d6 dc       	rcall	.-1620   	; 0x780 <nokia_lcd_render>
     dd4:	30 c0       	rjmp	.+96     	; 0xe36 <Motor_Tick+0x5e6>
     dd6:	da db       	rcall	.-2124   	; 0x58c <nokia_lcd_clear>
     dd8:	85 e0       	ldi	r24, 0x05	; 5
     dda:	80 93 84 09 	sts	0x0984, r24	; 0x800984 <nokia_lcd+0x1f8>
     dde:	8a e0       	ldi	r24, 0x0A	; 10
     de0:	80 93 85 09 	sts	0x0985, r24	; 0x800985 <nokia_lcd+0x1f9>
     de4:	61 e0       	ldi	r22, 0x01	; 1
     de6:	8d e8       	ldi	r24, 0x8D	; 141
     de8:	91 e0       	ldi	r25, 0x01	; 1
     dea:	b8 dc       	rcall	.-1680   	; 0x75c <nokia_lcd_write_string>
     dec:	c9 dc       	rcall	.-1646   	; 0x780 <nokia_lcd_render>
     dee:	23 c0       	rjmp	.+70     	; 0xe36 <Motor_Tick+0x5e6>
     df0:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     df4:	88 23       	and	r24, r24
     df6:	0c f0       	brlt	.+2      	; 0xdfa <Motor_Tick+0x5aa>
     df8:	6c ce       	rjmp	.-808    	; 0xad2 <Motor_Tick+0x282>
     dfa:	5f ce       	rjmp	.-834    	; 0xaba <Motor_Tick+0x26a>
     dfc:	43 db       	rcall	.-2426   	; 0x484 <GetKeypadKey>
     dfe:	80 93 e7 09 	sts	0x09E7, r24	; 0x8009e7 <menu_key>
     e02:	81 34       	cpi	r24, 0x41	; 65
     e04:	09 f0       	breq	.+2      	; 0xe08 <Motor_Tick+0x5b8>
     e06:	f0 cd       	rjmp	.-1056   	; 0x9e8 <Motor_Tick+0x198>
     e08:	eb cd       	rjmp	.-1066   	; 0x9e0 <Motor_Tick+0x190>
     e0a:	90 91 e1 09 	lds	r25, 0x09E1	; 0x8009e1 <key>
     e0e:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <password>
     e12:	98 13       	cpse	r25, r24
     e14:	a2 ce       	rjmp	.-700    	; 0xb5a <Motor_Tick+0x30a>
     e16:	9b ce       	rjmp	.-714    	; 0xb4e <Motor_Tick+0x2fe>
     e18:	5c 98       	cbi	0x0b, 4	; 11
     e1a:	21 11       	cpse	r18, r1
     e1c:	df cd       	rjmp	.-1090   	; 0x9dc <Motor_Tick+0x18c>
     e1e:	c8 cd       	rjmp	.-1136   	; 0x9b0 <Motor_Tick+0x160>
     e20:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
     e24:	88 23       	and	r24, r24
     e26:	0c f4       	brge	.+2      	; 0xe2a <Motor_Tick+0x5da>
     e28:	0c ce       	rjmp	.-1000   	; 0xa42 <Motor_Tick+0x1f2>
     e2a:	17 ce       	rjmp	.-978    	; 0xa5a <Motor_Tick+0x20a>
     e2c:	80 91 85 07 	lds	r24, 0x0785	; 0x800785 <lr>
     e30:	81 11       	cpse	r24, r1
     e32:	53 cf       	rjmp	.-346    	; 0xcda <Motor_Tick+0x48a>
     e34:	6b cf       	rjmp	.-298    	; 0xd0c <Motor_Tick+0x4bc>
     e36:	df 91       	pop	r29
     e38:	cf 91       	pop	r28
     e3a:	1f 91       	pop	r17
     e3c:	0f 91       	pop	r16
     e3e:	ff 90       	pop	r15
     e40:	ef 90       	pop	r14
     e42:	df 90       	pop	r13
     e44:	08 95       	ret

00000e46 <MotorTask>:
     e46:	10 92 e0 09 	sts	0x09E0, r1	; 0x8009e0 <motor_state>
     e4a:	02 dd       	rcall	.-1532   	; 0x850 <Motor_Tick>
     e4c:	83 e0       	ldi	r24, 0x03	; 3
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	31 d4       	rcall	.+2146   	; 0x16b4 <vTaskDelay>
     e52:	fb cf       	rjmp	.-10     	; 0xe4a <MotorTask+0x4>

00000e54 <StartSecPulse>:
     e54:	af 92       	push	r10
     e56:	bf 92       	push	r11
     e58:	cf 92       	push	r12
     e5a:	df 92       	push	r13
     e5c:	ef 92       	push	r14
     e5e:	ff 92       	push	r15
     e60:	0f 93       	push	r16
     e62:	a1 2c       	mov	r10, r1
     e64:	b1 2c       	mov	r11, r1
     e66:	c1 2c       	mov	r12, r1
     e68:	d1 2c       	mov	r13, r1
     e6a:	e1 2c       	mov	r14, r1
     e6c:	f1 2c       	mov	r15, r1
     e6e:	08 2f       	mov	r16, r24
     e70:	20 e0       	ldi	r18, 0x00	; 0
     e72:	30 e0       	ldi	r19, 0x00	; 0
     e74:	45 e5       	ldi	r20, 0x55	; 85
     e76:	50 e0       	ldi	r21, 0x00	; 0
     e78:	67 e9       	ldi	r22, 0x97	; 151
     e7a:	71 e0       	ldi	r23, 0x01	; 1
     e7c:	83 e2       	ldi	r24, 0x23	; 35
     e7e:	97 e0       	ldi	r25, 0x07	; 7
     e80:	ae d1       	rcall	.+860    	; 0x11de <xTaskGenericCreate>
     e82:	0f 91       	pop	r16
     e84:	ff 90       	pop	r15
     e86:	ef 90       	pop	r14
     e88:	df 90       	pop	r13
     e8a:	cf 90       	pop	r12
     e8c:	bf 90       	pop	r11
     e8e:	af 90       	pop	r10
     e90:	08 95       	ret

00000e92 <main>:
     e92:	8f ef       	ldi	r24, 0xFF	; 255
     e94:	81 b9       	out	0x01, r24	; 1
     e96:	12 b8       	out	0x02, r1	; 2
     e98:	84 b9       	out	0x04, r24	; 4
     e9a:	15 b8       	out	0x05, r1	; 5
     e9c:	80 ef       	ldi	r24, 0xF0	; 240
     e9e:	87 b9       	out	0x07, r24	; 7
     ea0:	8f e0       	ldi	r24, 0x0F	; 15
     ea2:	88 b9       	out	0x08, r24	; 8
     ea4:	82 ef       	ldi	r24, 0xF2	; 242
     ea6:	8a b9       	out	0x0a, r24	; 10
     ea8:	8d e0       	ldi	r24, 0x0D	; 13
     eaa:	8b b9       	out	0x0b, r24	; 11
     eac:	39 db       	rcall	.-2446   	; 0x520 <nokia_lcd_init>
     eae:	80 e2       	ldi	r24, 0x20	; 32
     eb0:	e6 da       	rcall	.-2612   	; 0x47e <write_cmd>
     eb2:	80 e0       	ldi	r24, 0x00	; 0
     eb4:	7c dc       	rcall	.-1800   	; 0x7ae <initUSART>
     eb6:	81 e0       	ldi	r24, 0x01	; 1
     eb8:	cd df       	rcall	.-102    	; 0xe54 <StartSecPulse>
     eba:	85 d2       	rcall	.+1290   	; 0x13c6 <vTaskStartScheduler>
     ebc:	80 e0       	ldi	r24, 0x00	; 0
     ebe:	90 e0       	ldi	r25, 0x00	; 0
     ec0:	08 95       	ret

00000ec2 <pxPortInitialiseStack>:
     ec2:	31 e1       	ldi	r19, 0x11	; 17
     ec4:	fc 01       	movw	r30, r24
     ec6:	30 83       	st	Z, r19
     ec8:	31 97       	sbiw	r30, 0x01	; 1
     eca:	22 e2       	ldi	r18, 0x22	; 34
     ecc:	20 83       	st	Z, r18
     ece:	31 97       	sbiw	r30, 0x01	; 1
     ed0:	a3 e3       	ldi	r26, 0x33	; 51
     ed2:	a0 83       	st	Z, r26
     ed4:	31 97       	sbiw	r30, 0x01	; 1
     ed6:	60 83       	st	Z, r22
     ed8:	31 97       	sbiw	r30, 0x01	; 1
     eda:	70 83       	st	Z, r23
     edc:	31 97       	sbiw	r30, 0x01	; 1
     ede:	10 82       	st	Z, r1
     ee0:	31 97       	sbiw	r30, 0x01	; 1
     ee2:	60 e8       	ldi	r22, 0x80	; 128
     ee4:	60 83       	st	Z, r22
     ee6:	31 97       	sbiw	r30, 0x01	; 1
     ee8:	10 82       	st	Z, r1
     eea:	31 97       	sbiw	r30, 0x01	; 1
     eec:	62 e0       	ldi	r22, 0x02	; 2
     eee:	60 83       	st	Z, r22
     ef0:	31 97       	sbiw	r30, 0x01	; 1
     ef2:	63 e0       	ldi	r22, 0x03	; 3
     ef4:	60 83       	st	Z, r22
     ef6:	31 97       	sbiw	r30, 0x01	; 1
     ef8:	64 e0       	ldi	r22, 0x04	; 4
     efa:	60 83       	st	Z, r22
     efc:	31 97       	sbiw	r30, 0x01	; 1
     efe:	65 e0       	ldi	r22, 0x05	; 5
     f00:	60 83       	st	Z, r22
     f02:	31 97       	sbiw	r30, 0x01	; 1
     f04:	66 e0       	ldi	r22, 0x06	; 6
     f06:	60 83       	st	Z, r22
     f08:	31 97       	sbiw	r30, 0x01	; 1
     f0a:	67 e0       	ldi	r22, 0x07	; 7
     f0c:	60 83       	st	Z, r22
     f0e:	31 97       	sbiw	r30, 0x01	; 1
     f10:	68 e0       	ldi	r22, 0x08	; 8
     f12:	60 83       	st	Z, r22
     f14:	31 97       	sbiw	r30, 0x01	; 1
     f16:	69 e0       	ldi	r22, 0x09	; 9
     f18:	60 83       	st	Z, r22
     f1a:	31 97       	sbiw	r30, 0x01	; 1
     f1c:	60 e1       	ldi	r22, 0x10	; 16
     f1e:	60 83       	st	Z, r22
     f20:	31 97       	sbiw	r30, 0x01	; 1
     f22:	30 83       	st	Z, r19
     f24:	31 97       	sbiw	r30, 0x01	; 1
     f26:	32 e1       	ldi	r19, 0x12	; 18
     f28:	30 83       	st	Z, r19
     f2a:	31 97       	sbiw	r30, 0x01	; 1
     f2c:	33 e1       	ldi	r19, 0x13	; 19
     f2e:	30 83       	st	Z, r19
     f30:	31 97       	sbiw	r30, 0x01	; 1
     f32:	34 e1       	ldi	r19, 0x14	; 20
     f34:	30 83       	st	Z, r19
     f36:	31 97       	sbiw	r30, 0x01	; 1
     f38:	35 e1       	ldi	r19, 0x15	; 21
     f3a:	30 83       	st	Z, r19
     f3c:	31 97       	sbiw	r30, 0x01	; 1
     f3e:	36 e1       	ldi	r19, 0x16	; 22
     f40:	30 83       	st	Z, r19
     f42:	31 97       	sbiw	r30, 0x01	; 1
     f44:	37 e1       	ldi	r19, 0x17	; 23
     f46:	30 83       	st	Z, r19
     f48:	31 97       	sbiw	r30, 0x01	; 1
     f4a:	38 e1       	ldi	r19, 0x18	; 24
     f4c:	30 83       	st	Z, r19
     f4e:	31 97       	sbiw	r30, 0x01	; 1
     f50:	39 e1       	ldi	r19, 0x19	; 25
     f52:	30 83       	st	Z, r19
     f54:	31 97       	sbiw	r30, 0x01	; 1
     f56:	30 e2       	ldi	r19, 0x20	; 32
     f58:	30 83       	st	Z, r19
     f5a:	31 97       	sbiw	r30, 0x01	; 1
     f5c:	31 e2       	ldi	r19, 0x21	; 33
     f5e:	30 83       	st	Z, r19
     f60:	31 97       	sbiw	r30, 0x01	; 1
     f62:	20 83       	st	Z, r18
     f64:	31 97       	sbiw	r30, 0x01	; 1
     f66:	23 e2       	ldi	r18, 0x23	; 35
     f68:	20 83       	st	Z, r18
     f6a:	31 97       	sbiw	r30, 0x01	; 1
     f6c:	40 83       	st	Z, r20
     f6e:	31 97       	sbiw	r30, 0x01	; 1
     f70:	50 83       	st	Z, r21
     f72:	31 97       	sbiw	r30, 0x01	; 1
     f74:	26 e2       	ldi	r18, 0x26	; 38
     f76:	20 83       	st	Z, r18
     f78:	31 97       	sbiw	r30, 0x01	; 1
     f7a:	27 e2       	ldi	r18, 0x27	; 39
     f7c:	20 83       	st	Z, r18
     f7e:	31 97       	sbiw	r30, 0x01	; 1
     f80:	28 e2       	ldi	r18, 0x28	; 40
     f82:	20 83       	st	Z, r18
     f84:	31 97       	sbiw	r30, 0x01	; 1
     f86:	29 e2       	ldi	r18, 0x29	; 41
     f88:	20 83       	st	Z, r18
     f8a:	31 97       	sbiw	r30, 0x01	; 1
     f8c:	20 e3       	ldi	r18, 0x30	; 48
     f8e:	20 83       	st	Z, r18
     f90:	31 97       	sbiw	r30, 0x01	; 1
     f92:	21 e3       	ldi	r18, 0x31	; 49
     f94:	20 83       	st	Z, r18
     f96:	86 97       	sbiw	r24, 0x26	; 38
     f98:	08 95       	ret

00000f9a <xPortStartScheduler>:
     f9a:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     f9e:	8c e7       	ldi	r24, 0x7C	; 124
     fa0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     fa4:	8b e0       	ldi	r24, 0x0B	; 11
     fa6:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     faa:	ef e6       	ldi	r30, 0x6F	; 111
     fac:	f0 e0       	ldi	r31, 0x00	; 0
     fae:	80 81       	ld	r24, Z
     fb0:	82 60       	ori	r24, 0x02	; 2
     fb2:	80 83       	st	Z, r24
     fb4:	a0 91 de 09 	lds	r26, 0x09DE	; 0x8009de <pxCurrentTCB>
     fb8:	b0 91 df 09 	lds	r27, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
     fbc:	cd 91       	ld	r28, X+
     fbe:	cd bf       	out	0x3d, r28	; 61
     fc0:	dd 91       	ld	r29, X+
     fc2:	de bf       	out	0x3e, r29	; 62
     fc4:	ff 91       	pop	r31
     fc6:	ef 91       	pop	r30
     fc8:	df 91       	pop	r29
     fca:	cf 91       	pop	r28
     fcc:	bf 91       	pop	r27
     fce:	af 91       	pop	r26
     fd0:	9f 91       	pop	r25
     fd2:	8f 91       	pop	r24
     fd4:	7f 91       	pop	r23
     fd6:	6f 91       	pop	r22
     fd8:	5f 91       	pop	r21
     fda:	4f 91       	pop	r20
     fdc:	3f 91       	pop	r19
     fde:	2f 91       	pop	r18
     fe0:	1f 91       	pop	r17
     fe2:	0f 91       	pop	r16
     fe4:	ff 90       	pop	r15
     fe6:	ef 90       	pop	r14
     fe8:	df 90       	pop	r13
     fea:	cf 90       	pop	r12
     fec:	bf 90       	pop	r11
     fee:	af 90       	pop	r10
     ff0:	9f 90       	pop	r9
     ff2:	8f 90       	pop	r8
     ff4:	7f 90       	pop	r7
     ff6:	6f 90       	pop	r6
     ff8:	5f 90       	pop	r5
     ffa:	4f 90       	pop	r4
     ffc:	3f 90       	pop	r3
     ffe:	2f 90       	pop	r2
    1000:	1f 90       	pop	r1
    1002:	0f 90       	pop	r0
    1004:	0f be       	out	0x3f, r0	; 63
    1006:	0f 90       	pop	r0
    1008:	08 95       	ret
    100a:	81 e0       	ldi	r24, 0x01	; 1
    100c:	08 95       	ret

0000100e <vPortYield>:
    100e:	0f 92       	push	r0
    1010:	0f b6       	in	r0, 0x3f	; 63
    1012:	f8 94       	cli
    1014:	0f 92       	push	r0
    1016:	1f 92       	push	r1
    1018:	11 24       	eor	r1, r1
    101a:	2f 92       	push	r2
    101c:	3f 92       	push	r3
    101e:	4f 92       	push	r4
    1020:	5f 92       	push	r5
    1022:	6f 92       	push	r6
    1024:	7f 92       	push	r7
    1026:	8f 92       	push	r8
    1028:	9f 92       	push	r9
    102a:	af 92       	push	r10
    102c:	bf 92       	push	r11
    102e:	cf 92       	push	r12
    1030:	df 92       	push	r13
    1032:	ef 92       	push	r14
    1034:	ff 92       	push	r15
    1036:	0f 93       	push	r16
    1038:	1f 93       	push	r17
    103a:	2f 93       	push	r18
    103c:	3f 93       	push	r19
    103e:	4f 93       	push	r20
    1040:	5f 93       	push	r21
    1042:	6f 93       	push	r22
    1044:	7f 93       	push	r23
    1046:	8f 93       	push	r24
    1048:	9f 93       	push	r25
    104a:	af 93       	push	r26
    104c:	bf 93       	push	r27
    104e:	cf 93       	push	r28
    1050:	df 93       	push	r29
    1052:	ef 93       	push	r30
    1054:	ff 93       	push	r31
    1056:	a0 91 de 09 	lds	r26, 0x09DE	; 0x8009de <pxCurrentTCB>
    105a:	b0 91 df 09 	lds	r27, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    105e:	0d b6       	in	r0, 0x3d	; 61
    1060:	0d 92       	st	X+, r0
    1062:	0e b6       	in	r0, 0x3e	; 62
    1064:	0d 92       	st	X+, r0
    1066:	7b d3       	rcall	.+1782   	; 0x175e <vTaskSwitchContext>
    1068:	a0 91 de 09 	lds	r26, 0x09DE	; 0x8009de <pxCurrentTCB>
    106c:	b0 91 df 09 	lds	r27, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    1070:	cd 91       	ld	r28, X+
    1072:	cd bf       	out	0x3d, r28	; 61
    1074:	dd 91       	ld	r29, X+
    1076:	de bf       	out	0x3e, r29	; 62
    1078:	ff 91       	pop	r31
    107a:	ef 91       	pop	r30
    107c:	df 91       	pop	r29
    107e:	cf 91       	pop	r28
    1080:	bf 91       	pop	r27
    1082:	af 91       	pop	r26
    1084:	9f 91       	pop	r25
    1086:	8f 91       	pop	r24
    1088:	7f 91       	pop	r23
    108a:	6f 91       	pop	r22
    108c:	5f 91       	pop	r21
    108e:	4f 91       	pop	r20
    1090:	3f 91       	pop	r19
    1092:	2f 91       	pop	r18
    1094:	1f 91       	pop	r17
    1096:	0f 91       	pop	r16
    1098:	ff 90       	pop	r15
    109a:	ef 90       	pop	r14
    109c:	df 90       	pop	r13
    109e:	cf 90       	pop	r12
    10a0:	bf 90       	pop	r11
    10a2:	af 90       	pop	r10
    10a4:	9f 90       	pop	r9
    10a6:	8f 90       	pop	r8
    10a8:	7f 90       	pop	r7
    10aa:	6f 90       	pop	r6
    10ac:	5f 90       	pop	r5
    10ae:	4f 90       	pop	r4
    10b0:	3f 90       	pop	r3
    10b2:	2f 90       	pop	r2
    10b4:	1f 90       	pop	r1
    10b6:	0f 90       	pop	r0
    10b8:	0f be       	out	0x3f, r0	; 63
    10ba:	0f 90       	pop	r0
    10bc:	08 95       	ret

000010be <vPortYieldFromTick>:
    10be:	0f 92       	push	r0
    10c0:	0f b6       	in	r0, 0x3f	; 63
    10c2:	f8 94       	cli
    10c4:	0f 92       	push	r0
    10c6:	1f 92       	push	r1
    10c8:	11 24       	eor	r1, r1
    10ca:	2f 92       	push	r2
    10cc:	3f 92       	push	r3
    10ce:	4f 92       	push	r4
    10d0:	5f 92       	push	r5
    10d2:	6f 92       	push	r6
    10d4:	7f 92       	push	r7
    10d6:	8f 92       	push	r8
    10d8:	9f 92       	push	r9
    10da:	af 92       	push	r10
    10dc:	bf 92       	push	r11
    10de:	cf 92       	push	r12
    10e0:	df 92       	push	r13
    10e2:	ef 92       	push	r14
    10e4:	ff 92       	push	r15
    10e6:	0f 93       	push	r16
    10e8:	1f 93       	push	r17
    10ea:	2f 93       	push	r18
    10ec:	3f 93       	push	r19
    10ee:	4f 93       	push	r20
    10f0:	5f 93       	push	r21
    10f2:	6f 93       	push	r22
    10f4:	7f 93       	push	r23
    10f6:	8f 93       	push	r24
    10f8:	9f 93       	push	r25
    10fa:	af 93       	push	r26
    10fc:	bf 93       	push	r27
    10fe:	cf 93       	push	r28
    1100:	df 93       	push	r29
    1102:	ef 93       	push	r30
    1104:	ff 93       	push	r31
    1106:	a0 91 de 09 	lds	r26, 0x09DE	; 0x8009de <pxCurrentTCB>
    110a:	b0 91 df 09 	lds	r27, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    110e:	0d b6       	in	r0, 0x3d	; 61
    1110:	0d 92       	st	X+, r0
    1112:	0e b6       	in	r0, 0x3e	; 62
    1114:	0d 92       	st	X+, r0
    1116:	86 d1       	rcall	.+780    	; 0x1424 <vTaskIncrementTick>
    1118:	22 d3       	rcall	.+1604   	; 0x175e <vTaskSwitchContext>
    111a:	a0 91 de 09 	lds	r26, 0x09DE	; 0x8009de <pxCurrentTCB>
    111e:	b0 91 df 09 	lds	r27, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    1122:	cd 91       	ld	r28, X+
    1124:	cd bf       	out	0x3d, r28	; 61
    1126:	dd 91       	ld	r29, X+
    1128:	de bf       	out	0x3e, r29	; 62
    112a:	ff 91       	pop	r31
    112c:	ef 91       	pop	r30
    112e:	df 91       	pop	r29
    1130:	cf 91       	pop	r28
    1132:	bf 91       	pop	r27
    1134:	af 91       	pop	r26
    1136:	9f 91       	pop	r25
    1138:	8f 91       	pop	r24
    113a:	7f 91       	pop	r23
    113c:	6f 91       	pop	r22
    113e:	5f 91       	pop	r21
    1140:	4f 91       	pop	r20
    1142:	3f 91       	pop	r19
    1144:	2f 91       	pop	r18
    1146:	1f 91       	pop	r17
    1148:	0f 91       	pop	r16
    114a:	ff 90       	pop	r15
    114c:	ef 90       	pop	r14
    114e:	df 90       	pop	r13
    1150:	cf 90       	pop	r12
    1152:	bf 90       	pop	r11
    1154:	af 90       	pop	r10
    1156:	9f 90       	pop	r9
    1158:	8f 90       	pop	r8
    115a:	7f 90       	pop	r7
    115c:	6f 90       	pop	r6
    115e:	5f 90       	pop	r5
    1160:	4f 90       	pop	r4
    1162:	3f 90       	pop	r3
    1164:	2f 90       	pop	r2
    1166:	1f 90       	pop	r1
    1168:	0f 90       	pop	r0
    116a:	0f be       	out	0x3f, r0	; 63
    116c:	0f 90       	pop	r0
    116e:	08 95       	ret

00001170 <__vector_13>:
    1170:	a6 df       	rcall	.-180    	; 0x10be <vPortYieldFromTick>
    1172:	18 95       	reti

00001174 <prvAddCurrentTaskToDelayedList>:
    1174:	cf 93       	push	r28
    1176:	df 93       	push	r29
    1178:	ec 01       	movw	r28, r24
    117a:	e0 91 de 09 	lds	r30, 0x09DE	; 0x8009de <pxCurrentTCB>
    117e:	f0 91 df 09 	lds	r31, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    1182:	93 83       	std	Z+3, r25	; 0x03
    1184:	82 83       	std	Z+2, r24	; 0x02
    1186:	80 91 8e 09 	lds	r24, 0x098E	; 0x80098e <xTickCount>
    118a:	90 91 8f 09 	lds	r25, 0x098F	; 0x80098f <xTickCount+0x1>
    118e:	c8 17       	cp	r28, r24
    1190:	d9 07       	cpc	r29, r25
    1192:	60 f4       	brcc	.+24     	; 0x11ac <prvAddCurrentTaskToDelayedList+0x38>
    1194:	60 91 de 09 	lds	r22, 0x09DE	; 0x8009de <pxCurrentTCB>
    1198:	70 91 df 09 	lds	r23, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    119c:	80 91 a4 09 	lds	r24, 0x09A4	; 0x8009a4 <pxOverflowDelayedTaskList>
    11a0:	90 91 a5 09 	lds	r25, 0x09A5	; 0x8009a5 <pxOverflowDelayedTaskList+0x1>
    11a4:	6e 5f       	subi	r22, 0xFE	; 254
    11a6:	7f 4f       	sbci	r23, 0xFF	; 255
    11a8:	eb d8       	rcall	.-3626   	; 0x380 <vListInsert>
    11aa:	16 c0       	rjmp	.+44     	; 0x11d8 <prvAddCurrentTaskToDelayedList+0x64>
    11ac:	60 91 de 09 	lds	r22, 0x09DE	; 0x8009de <pxCurrentTCB>
    11b0:	70 91 df 09 	lds	r23, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    11b4:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <pxDelayedTaskList>
    11b8:	90 91 a7 09 	lds	r25, 0x09A7	; 0x8009a7 <pxDelayedTaskList+0x1>
    11bc:	6e 5f       	subi	r22, 0xFE	; 254
    11be:	7f 4f       	sbci	r23, 0xFF	; 255
    11c0:	df d8       	rcall	.-3650   	; 0x380 <vListInsert>
    11c2:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <xNextTaskUnblockTime>
    11c6:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <xNextTaskUnblockTime+0x1>
    11ca:	c8 17       	cp	r28, r24
    11cc:	d9 07       	cpc	r29, r25
    11ce:	20 f4       	brcc	.+8      	; 0x11d8 <prvAddCurrentTaskToDelayedList+0x64>
    11d0:	d0 93 0b 01 	sts	0x010B, r29	; 0x80010b <xNextTaskUnblockTime+0x1>
    11d4:	c0 93 0a 01 	sts	0x010A, r28	; 0x80010a <xNextTaskUnblockTime>
    11d8:	df 91       	pop	r29
    11da:	cf 91       	pop	r28
    11dc:	08 95       	ret

000011de <xTaskGenericCreate>:
    11de:	4f 92       	push	r4
    11e0:	5f 92       	push	r5
    11e2:	6f 92       	push	r6
    11e4:	7f 92       	push	r7
    11e6:	8f 92       	push	r8
    11e8:	9f 92       	push	r9
    11ea:	af 92       	push	r10
    11ec:	bf 92       	push	r11
    11ee:	cf 92       	push	r12
    11f0:	df 92       	push	r13
    11f2:	ef 92       	push	r14
    11f4:	ff 92       	push	r15
    11f6:	0f 93       	push	r16
    11f8:	1f 93       	push	r17
    11fa:	cf 93       	push	r28
    11fc:	df 93       	push	r29
    11fe:	5c 01       	movw	r10, r24
    1200:	4b 01       	movw	r8, r22
    1202:	3a 01       	movw	r6, r20
    1204:	29 01       	movw	r4, r18
    1206:	81 e2       	ldi	r24, 0x21	; 33
    1208:	90 e0       	ldi	r25, 0x00	; 0
    120a:	5a d8       	rcall	.-3916   	; 0x2c0 <pvPortMalloc>
    120c:	ec 01       	movw	r28, r24
    120e:	89 2b       	or	r24, r25
    1210:	09 f4       	brne	.+2      	; 0x1214 <xTaskGenericCreate+0x36>
    1212:	c7 c0       	rjmp	.+398    	; 0x13a2 <xTaskGenericCreate+0x1c4>
    1214:	c1 14       	cp	r12, r1
    1216:	d1 04       	cpc	r13, r1
    1218:	09 f0       	breq	.+2      	; 0x121c <xTaskGenericCreate+0x3e>
    121a:	bf c0       	rjmp	.+382    	; 0x139a <xTaskGenericCreate+0x1bc>
    121c:	c3 01       	movw	r24, r6
    121e:	50 d8       	rcall	.-3936   	; 0x2c0 <pvPortMalloc>
    1220:	98 8f       	std	Y+24, r25	; 0x18
    1222:	8f 8b       	std	Y+23, r24	; 0x17
    1224:	00 97       	sbiw	r24, 0x00	; 0
    1226:	19 f4       	brne	.+6      	; 0x122e <xTaskGenericCreate+0x50>
    1228:	ce 01       	movw	r24, r28
    122a:	70 d8       	rcall	.-3872   	; 0x30c <vPortFree>
    122c:	ba c0       	rjmp	.+372    	; 0x13a2 <xTaskGenericCreate+0x1c4>
    122e:	a3 01       	movw	r20, r6
    1230:	65 ea       	ldi	r22, 0xA5	; 165
    1232:	70 e0       	ldi	r23, 0x00	; 0
    1234:	15 d3       	rcall	.+1578   	; 0x1860 <memset>
    1236:	93 01       	movw	r18, r6
    1238:	21 50       	subi	r18, 0x01	; 1
    123a:	31 09       	sbc	r19, r1
    123c:	8f 89       	ldd	r24, Y+23	; 0x17
    123e:	98 8d       	ldd	r25, Y+24	; 0x18
    1240:	3c 01       	movw	r6, r24
    1242:	62 0e       	add	r6, r18
    1244:	73 1e       	adc	r7, r19
    1246:	48 e0       	ldi	r20, 0x08	; 8
    1248:	50 e0       	ldi	r21, 0x00	; 0
    124a:	b4 01       	movw	r22, r8
    124c:	ce 01       	movw	r24, r28
    124e:	49 96       	adiw	r24, 0x19	; 25
    1250:	0e d3       	rcall	.+1564   	; 0x186e <strncpy>
    1252:	18 a2       	std	Y+32, r1	; 0x20
    1254:	10 2f       	mov	r17, r16
    1256:	04 30       	cpi	r16, 0x04	; 4
    1258:	08 f0       	brcs	.+2      	; 0x125c <xTaskGenericCreate+0x7e>
    125a:	13 e0       	ldi	r17, 0x03	; 3
    125c:	1e 8b       	std	Y+22, r17	; 0x16
    125e:	6e 01       	movw	r12, r28
    1260:	82 e0       	ldi	r24, 0x02	; 2
    1262:	c8 0e       	add	r12, r24
    1264:	d1 1c       	adc	r13, r1
    1266:	c6 01       	movw	r24, r12
    1268:	60 d8       	rcall	.-3904   	; 0x32a <vListInitialiseItem>
    126a:	ce 01       	movw	r24, r28
    126c:	0c 96       	adiw	r24, 0x0c	; 12
    126e:	5d d8       	rcall	.-3910   	; 0x32a <vListInitialiseItem>
    1270:	d9 87       	std	Y+9, r29	; 0x09
    1272:	c8 87       	std	Y+8, r28	; 0x08
    1274:	84 e0       	ldi	r24, 0x04	; 4
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	81 1b       	sub	r24, r17
    127a:	91 09       	sbc	r25, r1
    127c:	9d 87       	std	Y+13, r25	; 0x0d
    127e:	8c 87       	std	Y+12, r24	; 0x0c
    1280:	db 8b       	std	Y+19, r29	; 0x13
    1282:	ca 8b       	std	Y+18, r28	; 0x12
    1284:	a2 01       	movw	r20, r4
    1286:	b5 01       	movw	r22, r10
    1288:	c3 01       	movw	r24, r6
    128a:	1b de       	rcall	.-970    	; 0xec2 <pxPortInitialiseStack>
    128c:	99 83       	std	Y+1, r25	; 0x01
    128e:	88 83       	st	Y, r24
    1290:	e1 14       	cp	r14, r1
    1292:	f1 04       	cpc	r15, r1
    1294:	19 f0       	breq	.+6      	; 0x129c <xTaskGenericCreate+0xbe>
    1296:	f7 01       	movw	r30, r14
    1298:	d1 83       	std	Z+1, r29	; 0x01
    129a:	c0 83       	st	Z, r28
    129c:	0f b6       	in	r0, 0x3f	; 63
    129e:	f8 94       	cli
    12a0:	0f 92       	push	r0
    12a2:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <uxCurrentNumberOfTasks>
    12a6:	8f 5f       	subi	r24, 0xFF	; 255
    12a8:	80 93 90 09 	sts	0x0990, r24	; 0x800990 <uxCurrentNumberOfTasks>
    12ac:	80 91 de 09 	lds	r24, 0x09DE	; 0x8009de <pxCurrentTCB>
    12b0:	90 91 df 09 	lds	r25, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    12b4:	89 2b       	or	r24, r25
    12b6:	69 f5       	brne	.+90     	; 0x1312 <xTaskGenericCreate+0x134>
    12b8:	d0 93 df 09 	sts	0x09DF, r29	; 0x8009df <pxCurrentTCB+0x1>
    12bc:	c0 93 de 09 	sts	0x09DE, r28	; 0x8009de <pxCurrentTCB>
    12c0:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <uxCurrentNumberOfTasks>
    12c4:	81 30       	cpi	r24, 0x01	; 1
    12c6:	a1 f5       	brne	.+104    	; 0x1330 <xTaskGenericCreate+0x152>
    12c8:	8a eb       	ldi	r24, 0xBA	; 186
    12ca:	99 e0       	ldi	r25, 0x09	; 9
    12cc:	20 d8       	rcall	.-4032   	; 0x30e <vListInitialise>
    12ce:	83 ec       	ldi	r24, 0xC3	; 195
    12d0:	99 e0       	ldi	r25, 0x09	; 9
    12d2:	1d d8       	rcall	.-4038   	; 0x30e <vListInitialise>
    12d4:	8c ec       	ldi	r24, 0xCC	; 204
    12d6:	99 e0       	ldi	r25, 0x09	; 9
    12d8:	1a d8       	rcall	.-4044   	; 0x30e <vListInitialise>
    12da:	85 ed       	ldi	r24, 0xD5	; 213
    12dc:	99 e0       	ldi	r25, 0x09	; 9
    12de:	17 d8       	rcall	.-4050   	; 0x30e <vListInitialise>
    12e0:	81 eb       	ldi	r24, 0xB1	; 177
    12e2:	99 e0       	ldi	r25, 0x09	; 9
    12e4:	14 d8       	rcall	.-4056   	; 0x30e <vListInitialise>
    12e6:	88 ea       	ldi	r24, 0xA8	; 168
    12e8:	99 e0       	ldi	r25, 0x09	; 9
    12ea:	11 d8       	rcall	.-4062   	; 0x30e <vListInitialise>
    12ec:	8b e9       	ldi	r24, 0x9B	; 155
    12ee:	99 e0       	ldi	r25, 0x09	; 9
    12f0:	0e d8       	rcall	.-4068   	; 0x30e <vListInitialise>
    12f2:	82 e9       	ldi	r24, 0x92	; 146
    12f4:	99 e0       	ldi	r25, 0x09	; 9
    12f6:	0b d8       	rcall	.-4074   	; 0x30e <vListInitialise>
    12f8:	81 eb       	ldi	r24, 0xB1	; 177
    12fa:	99 e0       	ldi	r25, 0x09	; 9
    12fc:	90 93 a7 09 	sts	0x09A7, r25	; 0x8009a7 <pxDelayedTaskList+0x1>
    1300:	80 93 a6 09 	sts	0x09A6, r24	; 0x8009a6 <pxDelayedTaskList>
    1304:	88 ea       	ldi	r24, 0xA8	; 168
    1306:	99 e0       	ldi	r25, 0x09	; 9
    1308:	90 93 a5 09 	sts	0x09A5, r25	; 0x8009a5 <pxOverflowDelayedTaskList+0x1>
    130c:	80 93 a4 09 	sts	0x09A4, r24	; 0x8009a4 <pxOverflowDelayedTaskList>
    1310:	0f c0       	rjmp	.+30     	; 0x1330 <xTaskGenericCreate+0x152>
    1312:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <xSchedulerRunning>
    1316:	81 11       	cpse	r24, r1
    1318:	0b c0       	rjmp	.+22     	; 0x1330 <xTaskGenericCreate+0x152>
    131a:	e0 91 de 09 	lds	r30, 0x09DE	; 0x8009de <pxCurrentTCB>
    131e:	f0 91 df 09 	lds	r31, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    1322:	86 89       	ldd	r24, Z+22	; 0x16
    1324:	08 17       	cp	r16, r24
    1326:	20 f0       	brcs	.+8      	; 0x1330 <xTaskGenericCreate+0x152>
    1328:	d0 93 df 09 	sts	0x09DF, r29	; 0x8009df <pxCurrentTCB+0x1>
    132c:	c0 93 de 09 	sts	0x09DE, r28	; 0x8009de <pxCurrentTCB>
    1330:	8e 89       	ldd	r24, Y+22	; 0x16
    1332:	90 91 8d 09 	lds	r25, 0x098D	; 0x80098d <uxTopUsedPriority>
    1336:	98 17       	cp	r25, r24
    1338:	10 f4       	brcc	.+4      	; 0x133e <xTaskGenericCreate+0x160>
    133a:	80 93 8d 09 	sts	0x098D, r24	; 0x80098d <uxTopUsedPriority>
    133e:	90 91 86 09 	lds	r25, 0x0986	; 0x800986 <uxTaskNumber>
    1342:	9f 5f       	subi	r25, 0xFF	; 255
    1344:	90 93 86 09 	sts	0x0986, r25	; 0x800986 <uxTaskNumber>
    1348:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <uxTopReadyPriority>
    134c:	98 17       	cp	r25, r24
    134e:	10 f4       	brcc	.+4      	; 0x1354 <xTaskGenericCreate+0x176>
    1350:	80 93 8c 09 	sts	0x098C, r24	; 0x80098c <uxTopReadyPriority>
    1354:	90 e0       	ldi	r25, 0x00	; 0
    1356:	9c 01       	movw	r18, r24
    1358:	22 0f       	add	r18, r18
    135a:	33 1f       	adc	r19, r19
    135c:	22 0f       	add	r18, r18
    135e:	33 1f       	adc	r19, r19
    1360:	22 0f       	add	r18, r18
    1362:	33 1f       	adc	r19, r19
    1364:	82 0f       	add	r24, r18
    1366:	93 1f       	adc	r25, r19
    1368:	b6 01       	movw	r22, r12
    136a:	86 54       	subi	r24, 0x46	; 70
    136c:	96 4f       	sbci	r25, 0xF6	; 246
    136e:	0e 94 99 01 	call	0x332	; 0x332 <vListInsertEnd>
    1372:	0f 90       	pop	r0
    1374:	0f be       	out	0x3f, r0	; 63
    1376:	80 91 8b 09 	lds	r24, 0x098B	; 0x80098b <xSchedulerRunning>
    137a:	88 23       	and	r24, r24
    137c:	51 f0       	breq	.+20     	; 0x1392 <xTaskGenericCreate+0x1b4>
    137e:	e0 91 de 09 	lds	r30, 0x09DE	; 0x8009de <pxCurrentTCB>
    1382:	f0 91 df 09 	lds	r31, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    1386:	86 89       	ldd	r24, Z+22	; 0x16
    1388:	80 17       	cp	r24, r16
    138a:	28 f4       	brcc	.+10     	; 0x1396 <xTaskGenericCreate+0x1b8>
    138c:	40 de       	rcall	.-896    	; 0x100e <vPortYield>
    138e:	81 e0       	ldi	r24, 0x01	; 1
    1390:	09 c0       	rjmp	.+18     	; 0x13a4 <xTaskGenericCreate+0x1c6>
    1392:	81 e0       	ldi	r24, 0x01	; 1
    1394:	07 c0       	rjmp	.+14     	; 0x13a4 <xTaskGenericCreate+0x1c6>
    1396:	81 e0       	ldi	r24, 0x01	; 1
    1398:	05 c0       	rjmp	.+10     	; 0x13a4 <xTaskGenericCreate+0x1c6>
    139a:	d8 8e       	std	Y+24, r13	; 0x18
    139c:	cf 8a       	std	Y+23, r12	; 0x17
    139e:	c6 01       	movw	r24, r12
    13a0:	46 cf       	rjmp	.-372    	; 0x122e <xTaskGenericCreate+0x50>
    13a2:	8f ef       	ldi	r24, 0xFF	; 255
    13a4:	df 91       	pop	r29
    13a6:	cf 91       	pop	r28
    13a8:	1f 91       	pop	r17
    13aa:	0f 91       	pop	r16
    13ac:	ff 90       	pop	r15
    13ae:	ef 90       	pop	r14
    13b0:	df 90       	pop	r13
    13b2:	cf 90       	pop	r12
    13b4:	bf 90       	pop	r11
    13b6:	af 90       	pop	r10
    13b8:	9f 90       	pop	r9
    13ba:	8f 90       	pop	r8
    13bc:	7f 90       	pop	r7
    13be:	6f 90       	pop	r6
    13c0:	5f 90       	pop	r5
    13c2:	4f 90       	pop	r4
    13c4:	08 95       	ret

000013c6 <vTaskStartScheduler>:
    13c6:	af 92       	push	r10
    13c8:	bf 92       	push	r11
    13ca:	cf 92       	push	r12
    13cc:	df 92       	push	r13
    13ce:	ef 92       	push	r14
    13d0:	ff 92       	push	r15
    13d2:	0f 93       	push	r16
    13d4:	a1 2c       	mov	r10, r1
    13d6:	b1 2c       	mov	r11, r1
    13d8:	c1 2c       	mov	r12, r1
    13da:	d1 2c       	mov	r13, r1
    13dc:	e1 2c       	mov	r14, r1
    13de:	f1 2c       	mov	r15, r1
    13e0:	00 e0       	ldi	r16, 0x00	; 0
    13e2:	20 e0       	ldi	r18, 0x00	; 0
    13e4:	30 e0       	ldi	r19, 0x00	; 0
    13e6:	45 e5       	ldi	r20, 0x55	; 85
    13e8:	50 e0       	ldi	r21, 0x00	; 0
    13ea:	61 ea       	ldi	r22, 0xA1	; 161
    13ec:	71 e0       	ldi	r23, 0x01	; 1
    13ee:	86 e7       	ldi	r24, 0x76	; 118
    13f0:	9b e0       	ldi	r25, 0x0B	; 11
    13f2:	f5 de       	rcall	.-534    	; 0x11de <xTaskGenericCreate>
    13f4:	81 30       	cpi	r24, 0x01	; 1
    13f6:	41 f4       	brne	.+16     	; 0x1408 <vTaskStartScheduler+0x42>
    13f8:	f8 94       	cli
    13fa:	80 93 8b 09 	sts	0x098B, r24	; 0x80098b <xSchedulerRunning>
    13fe:	10 92 8f 09 	sts	0x098F, r1	; 0x80098f <xTickCount+0x1>
    1402:	10 92 8e 09 	sts	0x098E, r1	; 0x80098e <xTickCount>
    1406:	c9 dd       	rcall	.-1134   	; 0xf9a <xPortStartScheduler>
    1408:	0f 91       	pop	r16
    140a:	ff 90       	pop	r15
    140c:	ef 90       	pop	r14
    140e:	df 90       	pop	r13
    1410:	cf 90       	pop	r12
    1412:	bf 90       	pop	r11
    1414:	af 90       	pop	r10
    1416:	08 95       	ret

00001418 <vTaskSuspendAll>:
    1418:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <uxSchedulerSuspended>
    141c:	8f 5f       	subi	r24, 0xFF	; 255
    141e:	80 93 8a 09 	sts	0x098A, r24	; 0x80098a <uxSchedulerSuspended>
    1422:	08 95       	ret

00001424 <vTaskIncrementTick>:
    1424:	0f 93       	push	r16
    1426:	1f 93       	push	r17
    1428:	cf 93       	push	r28
    142a:	df 93       	push	r29
    142c:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <uxSchedulerSuspended>
    1430:	81 11       	cpse	r24, r1
    1432:	b2 c0       	rjmp	.+356    	; 0x1598 <vTaskIncrementTick+0x174>
    1434:	80 91 8e 09 	lds	r24, 0x098E	; 0x80098e <xTickCount>
    1438:	90 91 8f 09 	lds	r25, 0x098F	; 0x80098f <xTickCount+0x1>
    143c:	01 96       	adiw	r24, 0x01	; 1
    143e:	90 93 8f 09 	sts	0x098F, r25	; 0x80098f <xTickCount+0x1>
    1442:	80 93 8e 09 	sts	0x098E, r24	; 0x80098e <xTickCount>
    1446:	80 91 8e 09 	lds	r24, 0x098E	; 0x80098e <xTickCount>
    144a:	90 91 8f 09 	lds	r25, 0x098F	; 0x80098f <xTickCount+0x1>
    144e:	89 2b       	or	r24, r25
    1450:	99 f5       	brne	.+102    	; 0x14b8 <vTaskIncrementTick+0x94>
    1452:	80 91 a6 09 	lds	r24, 0x09A6	; 0x8009a6 <pxDelayedTaskList>
    1456:	90 91 a7 09 	lds	r25, 0x09A7	; 0x8009a7 <pxDelayedTaskList+0x1>
    145a:	20 91 a4 09 	lds	r18, 0x09A4	; 0x8009a4 <pxOverflowDelayedTaskList>
    145e:	30 91 a5 09 	lds	r19, 0x09A5	; 0x8009a5 <pxOverflowDelayedTaskList+0x1>
    1462:	30 93 a7 09 	sts	0x09A7, r19	; 0x8009a7 <pxDelayedTaskList+0x1>
    1466:	20 93 a6 09 	sts	0x09A6, r18	; 0x8009a6 <pxDelayedTaskList>
    146a:	90 93 a5 09 	sts	0x09A5, r25	; 0x8009a5 <pxOverflowDelayedTaskList+0x1>
    146e:	80 93 a4 09 	sts	0x09A4, r24	; 0x8009a4 <pxOverflowDelayedTaskList>
    1472:	80 91 87 09 	lds	r24, 0x0987	; 0x800987 <xNumOfOverflows>
    1476:	8f 5f       	subi	r24, 0xFF	; 255
    1478:	80 93 87 09 	sts	0x0987, r24	; 0x800987 <xNumOfOverflows>
    147c:	e0 91 a6 09 	lds	r30, 0x09A6	; 0x8009a6 <pxDelayedTaskList>
    1480:	f0 91 a7 09 	lds	r31, 0x09A7	; 0x8009a7 <pxDelayedTaskList+0x1>
    1484:	80 81       	ld	r24, Z
    1486:	81 11       	cpse	r24, r1
    1488:	07 c0       	rjmp	.+14     	; 0x1498 <vTaskIncrementTick+0x74>
    148a:	8f ef       	ldi	r24, 0xFF	; 255
    148c:	9f ef       	ldi	r25, 0xFF	; 255
    148e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <xNextTaskUnblockTime+0x1>
    1492:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <xNextTaskUnblockTime>
    1496:	10 c0       	rjmp	.+32     	; 0x14b8 <vTaskIncrementTick+0x94>
    1498:	e0 91 a6 09 	lds	r30, 0x09A6	; 0x8009a6 <pxDelayedTaskList>
    149c:	f0 91 a7 09 	lds	r31, 0x09A7	; 0x8009a7 <pxDelayedTaskList+0x1>
    14a0:	05 80       	ldd	r0, Z+5	; 0x05
    14a2:	f6 81       	ldd	r31, Z+6	; 0x06
    14a4:	e0 2d       	mov	r30, r0
    14a6:	06 80       	ldd	r0, Z+6	; 0x06
    14a8:	f7 81       	ldd	r31, Z+7	; 0x07
    14aa:	e0 2d       	mov	r30, r0
    14ac:	82 81       	ldd	r24, Z+2	; 0x02
    14ae:	93 81       	ldd	r25, Z+3	; 0x03
    14b0:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <xNextTaskUnblockTime+0x1>
    14b4:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <xNextTaskUnblockTime>
    14b8:	20 91 8e 09 	lds	r18, 0x098E	; 0x80098e <xTickCount>
    14bc:	30 91 8f 09 	lds	r19, 0x098F	; 0x80098f <xTickCount+0x1>
    14c0:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <xNextTaskUnblockTime>
    14c4:	90 91 0b 01 	lds	r25, 0x010B	; 0x80010b <xNextTaskUnblockTime+0x1>
    14c8:	28 17       	cp	r18, r24
    14ca:	39 07       	cpc	r19, r25
    14cc:	08 f4       	brcc	.+2      	; 0x14d0 <vTaskIncrementTick+0xac>
    14ce:	69 c0       	rjmp	.+210    	; 0x15a2 <vTaskIncrementTick+0x17e>
    14d0:	e0 91 a6 09 	lds	r30, 0x09A6	; 0x8009a6 <pxDelayedTaskList>
    14d4:	f0 91 a7 09 	lds	r31, 0x09A7	; 0x8009a7 <pxDelayedTaskList+0x1>
    14d8:	80 81       	ld	r24, Z
    14da:	88 23       	and	r24, r24
    14dc:	99 f0       	breq	.+38     	; 0x1504 <vTaskIncrementTick+0xe0>
    14de:	e0 91 a6 09 	lds	r30, 0x09A6	; 0x8009a6 <pxDelayedTaskList>
    14e2:	f0 91 a7 09 	lds	r31, 0x09A7	; 0x8009a7 <pxDelayedTaskList+0x1>
    14e6:	05 80       	ldd	r0, Z+5	; 0x05
    14e8:	f6 81       	ldd	r31, Z+6	; 0x06
    14ea:	e0 2d       	mov	r30, r0
    14ec:	c6 81       	ldd	r28, Z+6	; 0x06
    14ee:	d7 81       	ldd	r29, Z+7	; 0x07
    14f0:	8a 81       	ldd	r24, Y+2	; 0x02
    14f2:	9b 81       	ldd	r25, Y+3	; 0x03
    14f4:	20 91 8e 09 	lds	r18, 0x098E	; 0x80098e <xTickCount>
    14f8:	30 91 8f 09 	lds	r19, 0x098F	; 0x80098f <xTickCount+0x1>
    14fc:	28 17       	cp	r18, r24
    14fe:	39 07       	cpc	r19, r25
    1500:	f8 f4       	brcc	.+62     	; 0x1540 <vTaskIncrementTick+0x11c>
    1502:	19 c0       	rjmp	.+50     	; 0x1536 <vTaskIncrementTick+0x112>
    1504:	8f ef       	ldi	r24, 0xFF	; 255
    1506:	9f ef       	ldi	r25, 0xFF	; 255
    1508:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <xNextTaskUnblockTime+0x1>
    150c:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <xNextTaskUnblockTime>
    1510:	48 c0       	rjmp	.+144    	; 0x15a2 <vTaskIncrementTick+0x17e>
    1512:	e0 91 a6 09 	lds	r30, 0x09A6	; 0x8009a6 <pxDelayedTaskList>
    1516:	f0 91 a7 09 	lds	r31, 0x09A7	; 0x8009a7 <pxDelayedTaskList+0x1>
    151a:	05 80       	ldd	r0, Z+5	; 0x05
    151c:	f6 81       	ldd	r31, Z+6	; 0x06
    151e:	e0 2d       	mov	r30, r0
    1520:	c6 81       	ldd	r28, Z+6	; 0x06
    1522:	d7 81       	ldd	r29, Z+7	; 0x07
    1524:	8a 81       	ldd	r24, Y+2	; 0x02
    1526:	9b 81       	ldd	r25, Y+3	; 0x03
    1528:	20 91 8e 09 	lds	r18, 0x098E	; 0x80098e <xTickCount>
    152c:	30 91 8f 09 	lds	r19, 0x098F	; 0x80098f <xTickCount+0x1>
    1530:	28 17       	cp	r18, r24
    1532:	39 07       	cpc	r19, r25
    1534:	28 f4       	brcc	.+10     	; 0x1540 <vTaskIncrementTick+0x11c>
    1536:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <xNextTaskUnblockTime+0x1>
    153a:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <xNextTaskUnblockTime>
    153e:	31 c0       	rjmp	.+98     	; 0x15a2 <vTaskIncrementTick+0x17e>
    1540:	8e 01       	movw	r16, r28
    1542:	0e 5f       	subi	r16, 0xFE	; 254
    1544:	1f 4f       	sbci	r17, 0xFF	; 255
    1546:	c8 01       	movw	r24, r16
    1548:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <vListRemove>
    154c:	8c 89       	ldd	r24, Y+20	; 0x14
    154e:	9d 89       	ldd	r25, Y+21	; 0x15
    1550:	89 2b       	or	r24, r25
    1552:	21 f0       	breq	.+8      	; 0x155c <vTaskIncrementTick+0x138>
    1554:	ce 01       	movw	r24, r28
    1556:	0c 96       	adiw	r24, 0x0c	; 12
    1558:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <vListRemove>
    155c:	8e 89       	ldd	r24, Y+22	; 0x16
    155e:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <uxTopReadyPriority>
    1562:	98 17       	cp	r25, r24
    1564:	10 f4       	brcc	.+4      	; 0x156a <vTaskIncrementTick+0x146>
    1566:	80 93 8c 09 	sts	0x098C, r24	; 0x80098c <uxTopReadyPriority>
    156a:	90 e0       	ldi	r25, 0x00	; 0
    156c:	9c 01       	movw	r18, r24
    156e:	22 0f       	add	r18, r18
    1570:	33 1f       	adc	r19, r19
    1572:	22 0f       	add	r18, r18
    1574:	33 1f       	adc	r19, r19
    1576:	22 0f       	add	r18, r18
    1578:	33 1f       	adc	r19, r19
    157a:	82 0f       	add	r24, r18
    157c:	93 1f       	adc	r25, r19
    157e:	b8 01       	movw	r22, r16
    1580:	86 54       	subi	r24, 0x46	; 70
    1582:	96 4f       	sbci	r25, 0xF6	; 246
    1584:	0e 94 99 01 	call	0x332	; 0x332 <vListInsertEnd>
    1588:	e0 91 a6 09 	lds	r30, 0x09A6	; 0x8009a6 <pxDelayedTaskList>
    158c:	f0 91 a7 09 	lds	r31, 0x09A7	; 0x8009a7 <pxDelayedTaskList+0x1>
    1590:	80 81       	ld	r24, Z
    1592:	81 11       	cpse	r24, r1
    1594:	be cf       	rjmp	.-132    	; 0x1512 <vTaskIncrementTick+0xee>
    1596:	b6 cf       	rjmp	.-148    	; 0x1504 <vTaskIncrementTick+0xe0>
    1598:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <uxMissedTicks>
    159c:	8f 5f       	subi	r24, 0xFF	; 255
    159e:	80 93 89 09 	sts	0x0989, r24	; 0x800989 <uxMissedTicks>
    15a2:	df 91       	pop	r29
    15a4:	cf 91       	pop	r28
    15a6:	1f 91       	pop	r17
    15a8:	0f 91       	pop	r16
    15aa:	08 95       	ret

000015ac <xTaskResumeAll>:
    15ac:	cf 92       	push	r12
    15ae:	df 92       	push	r13
    15b0:	ef 92       	push	r14
    15b2:	ff 92       	push	r15
    15b4:	0f 93       	push	r16
    15b6:	1f 93       	push	r17
    15b8:	cf 93       	push	r28
    15ba:	df 93       	push	r29
    15bc:	0f b6       	in	r0, 0x3f	; 63
    15be:	f8 94       	cli
    15c0:	0f 92       	push	r0
    15c2:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <uxSchedulerSuspended>
    15c6:	81 50       	subi	r24, 0x01	; 1
    15c8:	80 93 8a 09 	sts	0x098A, r24	; 0x80098a <uxSchedulerSuspended>
    15cc:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <uxSchedulerSuspended>
    15d0:	81 11       	cpse	r24, r1
    15d2:	62 c0       	rjmp	.+196    	; 0x1698 <xTaskResumeAll+0xec>
    15d4:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <uxCurrentNumberOfTasks>
    15d8:	81 11       	cpse	r24, r1
    15da:	32 c0       	rjmp	.+100    	; 0x1640 <xTaskResumeAll+0x94>
    15dc:	60 c0       	rjmp	.+192    	; 0x169e <xTaskResumeAll+0xf2>
    15de:	d7 01       	movw	r26, r14
    15e0:	15 96       	adiw	r26, 0x05	; 5
    15e2:	ed 91       	ld	r30, X+
    15e4:	fc 91       	ld	r31, X
    15e6:	16 97       	sbiw	r26, 0x06	; 6
    15e8:	c6 81       	ldd	r28, Z+6	; 0x06
    15ea:	d7 81       	ldd	r29, Z+7	; 0x07
    15ec:	ce 01       	movw	r24, r28
    15ee:	0c 96       	adiw	r24, 0x0c	; 12
    15f0:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <vListRemove>
    15f4:	8e 01       	movw	r16, r28
    15f6:	0e 5f       	subi	r16, 0xFE	; 254
    15f8:	1f 4f       	sbci	r17, 0xFF	; 255
    15fa:	c8 01       	movw	r24, r16
    15fc:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <vListRemove>
    1600:	8e 89       	ldd	r24, Y+22	; 0x16
    1602:	90 91 8c 09 	lds	r25, 0x098C	; 0x80098c <uxTopReadyPriority>
    1606:	98 17       	cp	r25, r24
    1608:	10 f4       	brcc	.+4      	; 0x160e <xTaskResumeAll+0x62>
    160a:	80 93 8c 09 	sts	0x098C, r24	; 0x80098c <uxTopReadyPriority>
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	9c 01       	movw	r18, r24
    1612:	22 0f       	add	r18, r18
    1614:	33 1f       	adc	r19, r19
    1616:	22 0f       	add	r18, r18
    1618:	33 1f       	adc	r19, r19
    161a:	22 0f       	add	r18, r18
    161c:	33 1f       	adc	r19, r19
    161e:	82 0f       	add	r24, r18
    1620:	93 1f       	adc	r25, r19
    1622:	b8 01       	movw	r22, r16
    1624:	86 54       	subi	r24, 0x46	; 70
    1626:	96 4f       	sbci	r25, 0xF6	; 246
    1628:	0e 94 99 01 	call	0x332	; 0x332 <vListInsertEnd>
    162c:	e0 91 de 09 	lds	r30, 0x09DE	; 0x8009de <pxCurrentTCB>
    1630:	f0 91 df 09 	lds	r31, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    1634:	9e 89       	ldd	r25, Y+22	; 0x16
    1636:	86 89       	ldd	r24, Z+22	; 0x16
    1638:	98 17       	cp	r25, r24
    163a:	58 f0       	brcs	.+22     	; 0x1652 <xTaskResumeAll+0xa6>
    163c:	dc 2c       	mov	r13, r12
    163e:	09 c0       	rjmp	.+18     	; 0x1652 <xTaskResumeAll+0xa6>
    1640:	d1 2c       	mov	r13, r1
    1642:	0f 2e       	mov	r0, r31
    1644:	fb e9       	ldi	r31, 0x9B	; 155
    1646:	ef 2e       	mov	r14, r31
    1648:	f9 e0       	ldi	r31, 0x09	; 9
    164a:	ff 2e       	mov	r15, r31
    164c:	f0 2d       	mov	r31, r0
    164e:	cc 24       	eor	r12, r12
    1650:	c3 94       	inc	r12
    1652:	f7 01       	movw	r30, r14
    1654:	80 81       	ld	r24, Z
    1656:	81 11       	cpse	r24, r1
    1658:	c2 cf       	rjmp	.-124    	; 0x15de <xTaskResumeAll+0x32>
    165a:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <uxMissedTicks>
    165e:	88 23       	and	r24, r24
    1660:	79 f0       	breq	.+30     	; 0x1680 <xTaskResumeAll+0xd4>
    1662:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <uxMissedTicks>
    1666:	88 23       	and	r24, r24
    1668:	91 f0       	breq	.+36     	; 0x168e <xTaskResumeAll+0xe2>
    166a:	dc de       	rcall	.-584    	; 0x1424 <vTaskIncrementTick>
    166c:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <uxMissedTicks>
    1670:	81 50       	subi	r24, 0x01	; 1
    1672:	80 93 89 09 	sts	0x0989, r24	; 0x800989 <uxMissedTicks>
    1676:	80 91 89 09 	lds	r24, 0x0989	; 0x800989 <uxMissedTicks>
    167a:	81 11       	cpse	r24, r1
    167c:	f6 cf       	rjmp	.-20     	; 0x166a <xTaskResumeAll+0xbe>
    167e:	07 c0       	rjmp	.+14     	; 0x168e <xTaskResumeAll+0xe2>
    1680:	f1 e0       	ldi	r31, 0x01	; 1
    1682:	df 16       	cp	r13, r31
    1684:	21 f0       	breq	.+8      	; 0x168e <xTaskResumeAll+0xe2>
    1686:	80 91 88 09 	lds	r24, 0x0988	; 0x800988 <xMissedYield>
    168a:	81 30       	cpi	r24, 0x01	; 1
    168c:	39 f4       	brne	.+14     	; 0x169c <xTaskResumeAll+0xf0>
    168e:	10 92 88 09 	sts	0x0988, r1	; 0x800988 <xMissedYield>
    1692:	bd dc       	rcall	.-1670   	; 0x100e <vPortYield>
    1694:	81 e0       	ldi	r24, 0x01	; 1
    1696:	03 c0       	rjmp	.+6      	; 0x169e <xTaskResumeAll+0xf2>
    1698:	80 e0       	ldi	r24, 0x00	; 0
    169a:	01 c0       	rjmp	.+2      	; 0x169e <xTaskResumeAll+0xf2>
    169c:	80 e0       	ldi	r24, 0x00	; 0
    169e:	0f 90       	pop	r0
    16a0:	0f be       	out	0x3f, r0	; 63
    16a2:	df 91       	pop	r29
    16a4:	cf 91       	pop	r28
    16a6:	1f 91       	pop	r17
    16a8:	0f 91       	pop	r16
    16aa:	ff 90       	pop	r15
    16ac:	ef 90       	pop	r14
    16ae:	df 90       	pop	r13
    16b0:	cf 90       	pop	r12
    16b2:	08 95       	ret

000016b4 <vTaskDelay>:
    16b4:	cf 93       	push	r28
    16b6:	df 93       	push	r29
    16b8:	ec 01       	movw	r28, r24
    16ba:	89 2b       	or	r24, r25
    16bc:	99 f0       	breq	.+38     	; 0x16e4 <vTaskDelay+0x30>
    16be:	ac de       	rcall	.-680    	; 0x1418 <vTaskSuspendAll>
    16c0:	80 91 8e 09 	lds	r24, 0x098E	; 0x80098e <xTickCount>
    16c4:	90 91 8f 09 	lds	r25, 0x098F	; 0x80098f <xTickCount+0x1>
    16c8:	c8 0f       	add	r28, r24
    16ca:	d9 1f       	adc	r29, r25
    16cc:	80 91 de 09 	lds	r24, 0x09DE	; 0x8009de <pxCurrentTCB>
    16d0:	90 91 df 09 	lds	r25, 0x09DF	; 0x8009df <pxCurrentTCB+0x1>
    16d4:	02 96       	adiw	r24, 0x02	; 2
    16d6:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <vListRemove>
    16da:	ce 01       	movw	r24, r28
    16dc:	4b dd       	rcall	.-1386   	; 0x1174 <prvAddCurrentTaskToDelayedList>
    16de:	66 df       	rcall	.-308    	; 0x15ac <xTaskResumeAll>
    16e0:	81 11       	cpse	r24, r1
    16e2:	01 c0       	rjmp	.+2      	; 0x16e6 <vTaskDelay+0x32>
    16e4:	94 dc       	rcall	.-1752   	; 0x100e <vPortYield>
    16e6:	df 91       	pop	r29
    16e8:	cf 91       	pop	r28
    16ea:	08 95       	ret

000016ec <prvIdleTask>:
    16ec:	0f 2e       	mov	r0, r31
    16ee:	f2 e9       	ldi	r31, 0x92	; 146
    16f0:	ef 2e       	mov	r14, r31
    16f2:	f9 e0       	ldi	r31, 0x09	; 9
    16f4:	ff 2e       	mov	r15, r31
    16f6:	f0 2d       	mov	r31, r0
    16f8:	ca eb       	ldi	r28, 0xBA	; 186
    16fa:	d9 e0       	ldi	r29, 0x09	; 9
    16fc:	80 91 91 09 	lds	r24, 0x0991	; 0x800991 <uxTasksDeleted>
    1700:	88 23       	and	r24, r24
    1702:	41 f1       	breq	.+80     	; 0x1754 <prvIdleTask+0x68>
    1704:	89 de       	rcall	.-750    	; 0x1418 <vTaskSuspendAll>
    1706:	d7 01       	movw	r26, r14
    1708:	1c 91       	ld	r17, X
    170a:	50 df       	rcall	.-352    	; 0x15ac <xTaskResumeAll>
    170c:	11 23       	and	r17, r17
    170e:	11 f1       	breq	.+68     	; 0x1754 <prvIdleTask+0x68>
    1710:	0f b6       	in	r0, 0x3f	; 63
    1712:	f8 94       	cli
    1714:	0f 92       	push	r0
    1716:	d7 01       	movw	r26, r14
    1718:	15 96       	adiw	r26, 0x05	; 5
    171a:	ed 91       	ld	r30, X+
    171c:	fc 91       	ld	r31, X
    171e:	16 97       	sbiw	r26, 0x06	; 6
    1720:	06 81       	ldd	r16, Z+6	; 0x06
    1722:	17 81       	ldd	r17, Z+7	; 0x07
    1724:	c8 01       	movw	r24, r16
    1726:	02 96       	adiw	r24, 0x02	; 2
    1728:	0e 94 fb 01 	call	0x3f6	; 0x3f6 <vListRemove>
    172c:	80 91 90 09 	lds	r24, 0x0990	; 0x800990 <uxCurrentNumberOfTasks>
    1730:	81 50       	subi	r24, 0x01	; 1
    1732:	80 93 90 09 	sts	0x0990, r24	; 0x800990 <uxCurrentNumberOfTasks>
    1736:	80 91 91 09 	lds	r24, 0x0991	; 0x800991 <uxTasksDeleted>
    173a:	81 50       	subi	r24, 0x01	; 1
    173c:	80 93 91 09 	sts	0x0991, r24	; 0x800991 <uxTasksDeleted>
    1740:	0f 90       	pop	r0
    1742:	0f be       	out	0x3f, r0	; 63
    1744:	f8 01       	movw	r30, r16
    1746:	87 89       	ldd	r24, Z+23	; 0x17
    1748:	90 8d       	ldd	r25, Z+24	; 0x18
    174a:	0e 94 86 01 	call	0x30c	; 0x30c <vPortFree>
    174e:	c8 01       	movw	r24, r16
    1750:	0e 94 86 01 	call	0x30c	; 0x30c <vPortFree>
    1754:	88 81       	ld	r24, Y
    1756:	82 30       	cpi	r24, 0x02	; 2
    1758:	88 f2       	brcs	.-94     	; 0x16fc <prvIdleTask+0x10>
    175a:	59 dc       	rcall	.-1870   	; 0x100e <vPortYield>
    175c:	cf cf       	rjmp	.-98     	; 0x16fc <prvIdleTask+0x10>

0000175e <vTaskSwitchContext>:
    175e:	80 91 8a 09 	lds	r24, 0x098A	; 0x80098a <uxSchedulerSuspended>
    1762:	81 11       	cpse	r24, r1
    1764:	13 c0       	rjmp	.+38     	; 0x178c <vTaskSwitchContext+0x2e>
    1766:	80 91 8c 09 	lds	r24, 0x098C	; 0x80098c <uxTopReadyPriority>
    176a:	90 e0       	ldi	r25, 0x00	; 0
    176c:	fc 01       	movw	r30, r24
    176e:	ee 0f       	add	r30, r30
    1770:	ff 1f       	adc	r31, r31
    1772:	ee 0f       	add	r30, r30
    1774:	ff 1f       	adc	r31, r31
    1776:	ee 0f       	add	r30, r30
    1778:	ff 1f       	adc	r31, r31
    177a:	8e 0f       	add	r24, r30
    177c:	9f 1f       	adc	r25, r31
    177e:	fc 01       	movw	r30, r24
    1780:	e6 54       	subi	r30, 0x46	; 70
    1782:	f6 4f       	sbci	r31, 0xF6	; 246
    1784:	80 81       	ld	r24, Z
    1786:	88 23       	and	r24, r24
    1788:	29 f0       	breq	.+10     	; 0x1794 <vTaskSwitchContext+0x36>
    178a:	1b c0       	rjmp	.+54     	; 0x17c2 <vTaskSwitchContext+0x64>
    178c:	81 e0       	ldi	r24, 0x01	; 1
    178e:	80 93 88 09 	sts	0x0988, r24	; 0x800988 <xMissedYield>
    1792:	08 95       	ret
    1794:	80 91 8c 09 	lds	r24, 0x098C	; 0x80098c <uxTopReadyPriority>
    1798:	81 50       	subi	r24, 0x01	; 1
    179a:	80 93 8c 09 	sts	0x098C, r24	; 0x80098c <uxTopReadyPriority>
    179e:	80 91 8c 09 	lds	r24, 0x098C	; 0x80098c <uxTopReadyPriority>
    17a2:	90 e0       	ldi	r25, 0x00	; 0
    17a4:	fc 01       	movw	r30, r24
    17a6:	ee 0f       	add	r30, r30
    17a8:	ff 1f       	adc	r31, r31
    17aa:	ee 0f       	add	r30, r30
    17ac:	ff 1f       	adc	r31, r31
    17ae:	ee 0f       	add	r30, r30
    17b0:	ff 1f       	adc	r31, r31
    17b2:	8e 0f       	add	r24, r30
    17b4:	9f 1f       	adc	r25, r31
    17b6:	fc 01       	movw	r30, r24
    17b8:	e6 54       	subi	r30, 0x46	; 70
    17ba:	f6 4f       	sbci	r31, 0xF6	; 246
    17bc:	80 81       	ld	r24, Z
    17be:	88 23       	and	r24, r24
    17c0:	49 f3       	breq	.-46     	; 0x1794 <vTaskSwitchContext+0x36>
    17c2:	80 91 8c 09 	lds	r24, 0x098C	; 0x80098c <uxTopReadyPriority>
    17c6:	90 e0       	ldi	r25, 0x00	; 0
    17c8:	9c 01       	movw	r18, r24
    17ca:	22 0f       	add	r18, r18
    17cc:	33 1f       	adc	r19, r19
    17ce:	22 0f       	add	r18, r18
    17d0:	33 1f       	adc	r19, r19
    17d2:	22 0f       	add	r18, r18
    17d4:	33 1f       	adc	r19, r19
    17d6:	28 0f       	add	r18, r24
    17d8:	39 1f       	adc	r19, r25
    17da:	d9 01       	movw	r26, r18
    17dc:	a6 54       	subi	r26, 0x46	; 70
    17de:	b6 4f       	sbci	r27, 0xF6	; 246
    17e0:	11 96       	adiw	r26, 0x01	; 1
    17e2:	ed 91       	ld	r30, X+
    17e4:	fc 91       	ld	r31, X
    17e6:	12 97       	sbiw	r26, 0x02	; 2
    17e8:	02 80       	ldd	r0, Z+2	; 0x02
    17ea:	f3 81       	ldd	r31, Z+3	; 0x03
    17ec:	e0 2d       	mov	r30, r0
    17ee:	12 96       	adiw	r26, 0x02	; 2
    17f0:	fc 93       	st	X, r31
    17f2:	ee 93       	st	-X, r30
    17f4:	11 97       	sbiw	r26, 0x01	; 1
    17f6:	23 54       	subi	r18, 0x43	; 67
    17f8:	36 4f       	sbci	r19, 0xF6	; 246
    17fa:	e2 17       	cp	r30, r18
    17fc:	f3 07       	cpc	r31, r19
    17fe:	29 f4       	brne	.+10     	; 0x180a <vTaskSwitchContext+0xac>
    1800:	22 81       	ldd	r18, Z+2	; 0x02
    1802:	33 81       	ldd	r19, Z+3	; 0x03
    1804:	fd 01       	movw	r30, r26
    1806:	32 83       	std	Z+2, r19	; 0x02
    1808:	21 83       	std	Z+1, r18	; 0x01
    180a:	fc 01       	movw	r30, r24
    180c:	ee 0f       	add	r30, r30
    180e:	ff 1f       	adc	r31, r31
    1810:	ee 0f       	add	r30, r30
    1812:	ff 1f       	adc	r31, r31
    1814:	ee 0f       	add	r30, r30
    1816:	ff 1f       	adc	r31, r31
    1818:	8e 0f       	add	r24, r30
    181a:	9f 1f       	adc	r25, r31
    181c:	fc 01       	movw	r30, r24
    181e:	e6 54       	subi	r30, 0x46	; 70
    1820:	f6 4f       	sbci	r31, 0xF6	; 246
    1822:	01 80       	ldd	r0, Z+1	; 0x01
    1824:	f2 81       	ldd	r31, Z+2	; 0x02
    1826:	e0 2d       	mov	r30, r0
    1828:	86 81       	ldd	r24, Z+6	; 0x06
    182a:	97 81       	ldd	r25, Z+7	; 0x07
    182c:	90 93 df 09 	sts	0x09DF, r25	; 0x8009df <pxCurrentTCB+0x1>
    1830:	80 93 de 09 	sts	0x09DE, r24	; 0x8009de <pxCurrentTCB>
    1834:	08 95       	ret

00001836 <__udivmodqi4>:
    1836:	99 1b       	sub	r25, r25
    1838:	79 e0       	ldi	r23, 0x09	; 9
    183a:	04 c0       	rjmp	.+8      	; 0x1844 <__udivmodqi4_ep>

0000183c <__udivmodqi4_loop>:
    183c:	99 1f       	adc	r25, r25
    183e:	96 17       	cp	r25, r22
    1840:	08 f0       	brcs	.+2      	; 0x1844 <__udivmodqi4_ep>
    1842:	96 1b       	sub	r25, r22

00001844 <__udivmodqi4_ep>:
    1844:	88 1f       	adc	r24, r24
    1846:	7a 95       	dec	r23
    1848:	c9 f7       	brne	.-14     	; 0x183c <__udivmodqi4_loop>
    184a:	80 95       	com	r24
    184c:	08 95       	ret

0000184e <__tablejump2__>:
    184e:	ee 0f       	add	r30, r30
    1850:	ff 1f       	adc	r31, r31
    1852:	00 24       	eor	r0, r0
    1854:	00 1c       	adc	r0, r0
    1856:	0b be       	out	0x3b, r0	; 59
    1858:	07 90       	elpm	r0, Z+
    185a:	f6 91       	elpm	r31, Z
    185c:	e0 2d       	mov	r30, r0
    185e:	09 94       	ijmp

00001860 <memset>:
    1860:	dc 01       	movw	r26, r24
    1862:	01 c0       	rjmp	.+2      	; 0x1866 <memset+0x6>
    1864:	6d 93       	st	X+, r22
    1866:	41 50       	subi	r20, 0x01	; 1
    1868:	50 40       	sbci	r21, 0x00	; 0
    186a:	e0 f7       	brcc	.-8      	; 0x1864 <memset+0x4>
    186c:	08 95       	ret

0000186e <strncpy>:
    186e:	fb 01       	movw	r30, r22
    1870:	dc 01       	movw	r26, r24
    1872:	41 50       	subi	r20, 0x01	; 1
    1874:	50 40       	sbci	r21, 0x00	; 0
    1876:	48 f0       	brcs	.+18     	; 0x188a <strncpy+0x1c>
    1878:	01 90       	ld	r0, Z+
    187a:	0d 92       	st	X+, r0
    187c:	00 20       	and	r0, r0
    187e:	c9 f7       	brne	.-14     	; 0x1872 <strncpy+0x4>
    1880:	01 c0       	rjmp	.+2      	; 0x1884 <strncpy+0x16>
    1882:	1d 92       	st	X+, r1
    1884:	41 50       	subi	r20, 0x01	; 1
    1886:	50 40       	sbci	r21, 0x00	; 0
    1888:	e0 f7       	brcc	.-8      	; 0x1882 <strncpy+0x14>
    188a:	08 95       	ret

0000188c <_exit>:
    188c:	f8 94       	cli

0000188e <__stop_program>:
    188e:	ff cf       	rjmp	.-2      	; 0x188e <__stop_program>
